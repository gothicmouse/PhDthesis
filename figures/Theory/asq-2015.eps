%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: asq-2015.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Siggi Bethke
%%CreationDate: 26.11.15
%%BoundingBox: 0 0 565 370
%%HiResBoundingBox: 0 0 564.7422 369.3716
%%CropBox: 0 0 564.7422 369.3716
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stMfs="http://ns.adobe.com/xap/1.0/sType/ManifestItem#">
         <xmpMM:DocumentID>xmp.did:0280117407206811822A9961BA56F2D9</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0280117407206811822A9961BA56F2D9</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:018011740720681197A5AC097429004A</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:bd4fcee6-88d8-694c-8db5-ffa63b09d900</stRef:instanceID>
            <stRef:documentID>xmp.did:0280117407206811822A87499591F878</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:018011740720681197A5AC097429004A</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:018011740720681197A5AC097429004A</stEvt:instanceID>
                  <stEvt:when>2013-10-16T22:26:16+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:028011740720681197A5AC097429004A</stEvt:instanceID>
                  <stEvt:when>2013-10-17T00:37:58+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681189CBE7837BD2FFDC</stEvt:instanceID>
                  <stEvt:when>2013-10-22T09:38:58+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F11740720681189CBE7837BD2FFDC</stEvt:instanceID>
                  <stEvt:when>2013-10-22T09:54:51+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811822A87499591F878</stEvt:instanceID>
                  <stEvt:when>2015-08-24T15:06:28+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0280117407206811822A9961BA56F2D9</stEvt:instanceID>
                  <stEvt:when>2015-11-26T16:19:58+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:Manifest>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stMfs:linkForm>EmbedByReference</stMfs:linkForm>
                  <stMfs:reference rdf:parseType="Resource">
                     <stRef:filePath>/Users/siggi-new/alphas-3.eps</stRef:filePath>
                  </stMfs:reference>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stMfs:linkForm>EmbedByReference</stMfs:linkForm>
                  <stMfs:reference rdf:parseType="Resource">
                     <stRef:filePath>/Users/siggi-new/as2015curves.1177.eps</stRef:filePath>
                  </stMfs:reference>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stMfs:linkForm>EmbedByReference</stMfs:linkForm>
                  <stMfs:reference rdf:parseType="Resource">
                     <stRef:filePath>/Users/siggi-new/Documents/as2015curves.1181.eps</stRef:filePath>
                  </stMfs:reference>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:Manifest>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">asq-2013-RPP</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2015-11-26T16:19:57+01:00</xmp:CreateDate>
         <xmp:MetadataDate>2015-11-26T16:19:58+01:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-11-26T16:19:58+01:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>168</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYql2s6ndWX1KK&#xA;0t0ubq/uDbwpLKYYwVhknYs6pMw+GE0oh3xVD/W/OX/Vr07/ALiE/wD2RYq7635y/wCrXp3/AHEJ&#xA;/wDsixV31vzl/wBWvTv+4hP/ANkWKu+t+cv+rXp3/cQn/wCyLFXfW/OX/Vr07/uIT/8AZFirvrfn&#xA;L/q16d/3EJ/+yLFXfW/OX/Vr07/uIT/9kWKu+t+cv+rXp3/cQn/7IsVd9b85f9WvTv8AuIT/APZF&#xA;irvrfnL/AKtenf8AcQn/AOyLFXfW/OX/AFa9O/7iE/8A2RYq7635y/6tenf9xCf/ALIsVd9b85f9&#xA;WvTv+4hP/wBkWKu+t+cv+rXp3/cQn/7IsVd9b85f9WvTv+4hP/2RYq7635y/6tenf9xCf/sixV31&#xA;vzl/1a9O/wC4hP8A9kWKu+t+cv8Aq16d/wBxCf8A7IsVd9b85f8AVr07/uIT/wDZFirvrfnL/q16&#xA;d/3EJ/8AsixV31vzl/1a9O/7iE//AGRYq7635y/6tenf9xCf/sixV31vzl/1a9O/7iE//ZFiqH1H&#xA;WvM2m6fdahe6fpsNnZxSXFzMdQnokUSl3Y0seygnFUgP5rQxSNBdto9leo7xy2Nzqcsc6SRAF0ZD&#xA;Z/aCsG+W/TFW7P8ANSK+tWnsG0a9lWBrk2Vvqksl1wRQzVgWzLgrUcqj4e9MVQL/AJzNXhFYWjzN&#xA;JJFHG11dx1aKWCF+Raw+BQ95Hu3avgcVZjFrGvQX1hb6rp9rBHfytbxyWt3JcFZFgkn3WS2t/h4w&#xA;sK18NsVXnzp5OGotph13ThqSzLbNZfW4PXE7nisRj58+bHYLSuKqur+Z9A0f1f0nex2ogt3vJ2et&#xA;I4IyAZJCAQgLGi8vtHZanFUlg/NbyXc2d/cWtzcTSafarfzWRs7uG6a1fZZ4oJ4opJIj/vxQUHcg&#xA;Yq3J5j0vXLjy3daTKJ0/SAZlkWSF1SbTLmVWKSKHHKN+S1Wh8cVYt+dHm3zr5bv9NfQr30ra9hlV&#xA;bb0oXLXSMsEMYaRHP72W9jZgP2YjSlTUFkA9O03ULXUtOtdRtG52t5DHcW7+Mcqh0P0g4WKIxV2K&#xA;uxV2KuxV2KuxV2KuxVp3RF5OwVR1LGg/HATSQCeSHvtT03T7b61f3cNpa1A9eeRI46t0HJyBvglM&#xA;AWS2YsE8kuGETKXcBZQ95r+l2l9bWU86rNcq7qeSgKiKX5PUiikA0OVzzxjIAnmzx6XJOJkBtH8b&#xA;K0ur6TCGMt7bxhUWRi8qLRHICsanoxIockcsB1DGOnyHlGXyK19c0WMOz6hbIqFlctNGArIaMDU7&#xA;FT18MTmgOo+aRpsp5Rl8i3daxpdpN6FxcpHNxLiMn4uKqzmgH+TGxp7HGWWMTRKIafJMWBY/A/SE&#xA;Jp3mjS768ms05w3MTsixzLxMioiSGRKE/BxkG5pkIaiMjXVtzaLJCIlsQe7puRXv2RNlrmkXsvpW&#xA;t1HLLTkEU7lezLXqp7EbHtkoZoSNAteTTZIC5RICOy1odirsVdiq2WKOWN4pUEkcgKujAFWUihBB&#xA;6g4qkjeQvJLsHfQbBnD+qGa2iJ9SnHnUrXkV2J7jY4q3B5E8l28UsUGh2MMc8MttMkcEah4Z+Jlj&#xA;agFVf015DvTFV0XkryjE0bRaNZxmIuY+MKChkKF+g/aMKV8eI8MVa18v+mPLQAHp/pCXk1dwf0fd&#xA;UAFPn3xV5XZ/lJ5z0fWdA1F20i703yrqWpaj9Zm+syXt3BqUvqTSSRiPj9Zhir6fxsC4XpTFUp1q&#xA;C4/NOx88rocskLa9aaUdDhvCsXN9JlkkurN+LSKrK8gJQnYuCe+KrtNvNG/Nj82PU1NJfLw0fSpd&#xA;KvdCubkW2p3FzK5eZIlhdZfQiANXHXwoTRVmEOlPa/mpYzaWGOh2MVho9DIz87m2tNTd6u5Yu8MM&#xA;y8ySSSaE1rgVMvzx0Z9Q8jvdQuIrjS50uI52XkIllDWssx8PQiuGm+aDEpiofkXqwn8qtpRuvrMe&#xA;nmKXTixqyWF5GJoIGNW3tZPVtP8Anj0HQIUvSMKHYq7FXYq7FXYq7FXYq7FUu8w6Bpuv6RPpWooX&#xA;tbgDlxIDAqwZWUkGhBGV5cYnGi5Ok1U9PkGSH1BB+ZLTQP0Za6demS1iaSJLA2qOZUkt2WeNYjGj&#xA;lSPQr06DIZYR4QDt3V+hGHWTxT4+ZN3e92CDffzKSaxpXlHVtSknfUp/Vl9K7EEK+ojPx9GN1Bic&#xA;v/cboD+w1R9rKMuDHOVkn8fBydP2rPFERAiaFdboknv8zvzRj+T9Fu7YQw3dytnqSJKiwJGIyEij&#xA;Qmoh4orxxJ8Gy+Awy0sZCrNH3fqTDtWYIlQJHX1d5Pf3k78/NZD5GsrmO9iuJvTdp0qbVwWVYofS&#xA;Qksg9OWSNgz8AN6dR1A0YIIPf08h956th7VkCOHeh17yb79wOl9EVrHlfSNQvLl7y84RycHeIMqu&#xA;krRGBJA53U04lKU+Id60yeTTRlIkn8cmnB2jLFECIFj7ruq/Gy678vaM/wBWmtbxbFZEmhDxej+/&#xA;NyEVjVgeT0jFKYy08dqNc/jbGHaEgDxDi3HO9uG6+9UtfKsCahY6g15JcmyVRAXCCqJFLFEtYwoI&#xA;43Dk7bmnSmShp6kDd1+P0pnryYSgIgcX6wTz/qj7e9P8yXAdirsVdirsVdirsVdiqSa+X/THlpQt&#xA;UOoSkvXoRp91QU96nFU5liimieGZFkikUpJG4DKysKFWB2IIxVD6bpWmaZb/AFbTrSGzt+RcxQIs&#xA;a8j1aigb7YqisVSTzCxXU/LZClz+knFFpWhsLsE7kdOpxVMdV0201TTLzTLxPUs76CS2uUrTlHMh&#xA;RxX3VsVeBfl/r115V82tFf2zW8repYavaln3uzR2lBYcOLXSGdPi/wCP9APaEpcItuxw45CN1b6G&#xA;QsUUsvFiAWWtaHwrkw1Hm3ih2KuxV2KuxV2KuxV2KoHWtOuNQsGtYLprRnZSZlBLUU8qCjIRuPHI&#xA;TiSKukEWh9Z0m+vTpkkM8aT6fcfWSZEYq7ejJDSisKD96T1wTiTXkiUbpJT5Bc3FxI9xDPHdIpnj&#xA;lhb4pvrE9y7qVkVo/wB5cnjxNVoNzvWrwPx+PexGNrXfKWpal+itPErGDT7ek+oTbiZuUR9MojrI&#xA;efo/HuNj9onGeIyodyyiTs6D8vjBqlveR3iBYbhLll9Jix4xQRsnJ5HqG+r1qfiHL7R3qjT7g3+N&#xA;lGPdU/wVdNqjXxu1R0naWNgpYyI139aMcwJAKgUjXuOCmv7OHwTd3+LteBRj8j6mdMtrCe7tXS30&#xA;4aUpNuzERcVVpkrJtIeI9vuweCaqxypAx0K8qZHoGnTadpcdrM/qSK8smxJCiWVpFjBIFRGHCDbo&#xA;MuxxoU2RFBMMml2KuxV2KuxV2KuxV2KpJr7H9MeWl4kg6hKS+1ARp91sd6718O2Kp3irsVdiqSeY&#xA;X4an5bPEt/uSYUUVO9hdivyFd8VTvFXh357+XZ7TWLbXrOqJqCrHcFen1i0pNVutA0EQnZqf8eiA&#xA;bnKs4Jgac3s+cBmhxi48W/48ub1fyXrEuseVdNv5yxvHhEd+HUK6XcJMNzGyqAoKTo6mm222TiDQ&#xA;vm42UxMyYio3sO4J1kmt2KuxV2KuxV2KuxV2Koa/tprhIxFIU4PycBnTkOLDjyjKt1IP0YtmKYjd&#xA;/j5pVrWn6hINESBfXktblWuZ3AccBbyIWZS6FqyMppX37YQ5WnywHiXtxR2H+cD3d1pPpkfnS109&#xA;beGEosUKIkSiAkSNLWRy7yGjqCTxoQV71w7OXmOnlOyeZ/pd23Tl59/krzXXm+2083V5cLDN6Ns8&#xA;NuRF+8umCeraiiv9po3CtXq4/lx2YRhp5T4Yixct99o71L7Rf9XzTDU4rqH6ldagrX9lbW8gvoUQ&#xA;OTO3p8JvTAHIKA42G1a07gBx8MonijD0yJFe7fa/l8kntX8+xgpExu7RlP1eeNrZgFY2/D4nPJjH&#xA;++rXr49MOzlzGlPP0y6j1f0vv9Kzh56kewvbqCUzwzoJYovqwKQtbR+syVqpJlZxRidgKU64dmV6&#xA;UcUYkUR14ufEav4VyV72b8w1tg0CVn3LKogP7wQykqvL/dJlEXGvx0LVOAU1446Ti35fHlY/2VcV&#xA;9OVIvRm81x6nBFcWph00tcevQW4X45p3jeiHmGK+nWnWu+JpqzjAYEg3P019XdG/0/JDlfOMrM4M&#xA;piI/fR1EbLKqzVMJ25Jy4rQ/5LA9auzZenG21/Pb08/PmfmO5WkfzFIoIiu4fThgSI1jp6imty8o&#xA;DOzArQCm+x4ivVYAYR1idz3/AObX497INKe9k0y1e+XheNEhuFoBRyo5bDYb5EuDmERMiP03sisW&#xA;p2KuxV2KpJr701jy0nE76hKeVNhTT7rYnxNcVTvFXYq8S8i/nJrWqab5gj8yXlrouopQ6Q86xxcZ&#xA;W5Ca2AlaNCbc+mKyHYuC9RgSyXyv5j13V/J3kXW9VtZbjV7i7kNzBHHHbu7C0vY+arJIsfEqOYPK&#xA;jLuBuBhQ9IxVIfPXllfMnla+0ocBdSJ6lhLIKrHdRHnAx2J481Aam5Wo74JCxTPHMwkJDmHmn5H+&#xA;ZHtNSufL12GiS+LS2scg4tHdQLweFqKo5tDDxb+aaC5OIWW+72nCwdirsVdirsVdirsVdiqE1RdS&#xA;a0I05kW5qKGTYU+dGp/wJ299xDJxV6ebdgMOL18kJ5hbzAtjANIp9ZMqrcuqI7CMq1WRJXjU/Hxq&#xA;C4+Gu9cjl469PNt0gw8Z8T6a29/mQD0vpzSqPQNSh8wvEklyNFulWecrPIT69HDj1PWSWMD93xCh&#xA;g29egpUMRE+vCfx325UtVA4bqPiR2HpHLbpwkHrzqui7zfc6nby6TZ6Lxl1DnKVjcLLKsa2so9UG&#xA;U1B5UUMWAJNGO+HOSKEef7F0EISE5ZdobeQvijtt93xHJCKnn6PUVblLLBI9sZKi2RfTVQsopyl9&#xA;NmPJmAr7MNsr/fcXy7m0nSGHQH1fzvh3X0r7i6+sfM0nnRdRjtpls4isHOJ4GHpL8QdRK+/qF3SQ&#xA;UFKKw5EVwzjM5LrZcWXANNwEjiO+/Fz7th0oGPO9xst8z23nO61GVLRJDYxTQy2ckfoKUZOFWAfk&#xA;W35GrH249KxzDIZbcvgnRT00YAyriIIP1b8/2frQd1q35gwrH9bVrM3ctvDbBRas3qsk3qRrXkPi&#xA;4xt8XTcVyMsmYDfqfJthg0hvh9XCJE/Vy9NH7+SPhk/MUyx/WANroetHEsCx+iJOiSszuVMdD8Ua&#xA;mtRXJ3mv4+TRIaOjX83a+K7rqNhz8yPJfq9/58hvrhdLtFuIw0lBIgoFBt1hEZMkQNUkldvdaV6D&#xA;Jylks0jT4tIYjxJUdv8AfXex6iIHkbRKXHnC50XVkurc2moLIy6bJbhKlKjg1GkcFgeoO3348WQx&#xA;Njfo1mGmjlgYnihXqu/j0QMVv57+usZuXoGaEzokg4lBduZHgJbkB6KqPTb9lutV3gI5b3/G/Rul&#xA;PScO3OjW39EUD8eveO4rIJPO0ulWkbQXceoQ6dEolZoQjanT940/x1aINTptTl3phJmekuX2/qZS&#xA;GlGSRuJgZnv/ALvpw7fV+zzZTocl9JpqNegib1JgnIUYwiVxAzjajNCFLDxzJx3w7ur1IiJ+nlQ+&#xA;dDi+F3SPybjuxVINenl/xB5bg+ryel9dkf61WP0+X1C7Hp05+pypv9jjTvXbFU/xV2KrTFEQwKKQ&#xA;1QwoN+XWvzxVJvML8NT8tniW/wByTCiip3sLsV+Qrviqd4q7FXg/5waBceWPNEHmrSytrBfyid7g&#xA;19OC+gHqs7KqsSjpH6rAdUW4QfFPgLIPY/K3mG28w6Fa6tAhh9cFZ7ZiC8E8bGOaByNuUUishp4b&#xA;bYWJTXFXYq7FXYq7FXYq7FUk84Xnmu00R5fK1hDqOreoipBcSemgQt8bblORA7c18d6UMZk1s24Y&#xA;wMvWaCF82a75k0yDSjp2npcS3c4jvyRPNHCojLlR6CGSrsOCOU41+0BXIzkRVNmDFCRNnly5fpSn&#xA;X/NXnuDXY4NE0kXuk3EaGK4e1nVo5GaSBllLSRU4zek5+D+6Lt+zXIynK9g24sGIxuRqXvHv+6/i&#xA;iPOvnDWtKstJfRoUuLnUJbiAQz21xzkkgtppkjSINHIhlkg4AtUANy3A3M5kVTHT4IyJ4uldR3pR&#xA;F56/MP1pidFjniEN9NbxLbXkUkhtZZ4oolb98nJvRjk+PgGWQBasN4+JJtOmw/zu7qOtfj4KM3nT&#xA;zvDqjtaacbyOVbMGcWl+iNG0lyGMVvM6qj8VjY/EDv8At0XInJL8WyGmxGO5rn1j5dfx8EJb/mD+&#xA;YNvoqPDoTF44q8Job2VyCvL1y7uXYepWH0ieY2evHbAMsgOTM6XEZfV93y/Taaanr3mvUND8uXZg&#xA;mt55ri9bU7e3juogwtLe5MIb03SVEkliQ8S+9R1HWZkSAWqGLHGchz5Vy6kfBD+V/OXn+W8061vd&#xA;MYWlxcJHK721yZIoGghZP3kjitC7c3ZnavUZGGSWwIZZtPiokHcDvHmtvvOvnp728FlbFraOaOKR&#xA;IYDJJa8dQngYsCGDq1tArv3DOjAcCcTkl0WOnxUL+/n6Qfv/AE9W9L88ec4r2yn162mtrV0b14Ir&#xA;V3ilYWUcqNG6RvIoeV/sndWqm/HEZJXvyTPTYyCIHf3+aK0Dzh5sk1zSLS8Q3EWoqo1CN7V7VrW4&#xA;MMsssSF6c1hMagnenLdiWXDGcrDDLp8fBIjauW92P2vRsyHXOxV2KuxVJNfemseWk4nfUJTypsKa&#xA;fdbE+Jriqd4q7FXYqknmFwmp+WyakHUnX4QWNWsLsDYA+O57YqneKuxVLPM3l+y8waHdaReFliuV&#xA;HCZPtxSoweKZP8uORVdfcYqHiH5Z+Y7vyJ5xufKeucIbW4lW3n4l/SinASO3nTnWkTo0cVa/YMH7&#xA;azkBkRb6CwsXYq7FXYq7FXYq7FUJqmpQ6bZPeTqzRRlA3HiKc2CAkuyKAC25JoBvkoR4jSCaS7XP&#xA;M36O0K11WK3Di7ltYkiuZPq4T63IkatK3GXjwMgLbZZjxcUjHuv7GMpULYf5W86eadU8wRWk8KJY&#xA;xtLePEnqNdCOS2S5SOWvwkf6aiKKD4l6mnxZWbBCMbHPl5c6/Q1QnIn8fjqnmo+a7VtSsvW0Ca5m&#xA;iYtbI8IN9EzAqZYYirAR02aT1F8N8xxpgRdj9Hzb/FI2F7teYfPL6L5nXTWtnuFmitWSs0MMSCVr&#xA;ku3KRVPqcbY0UvRtqUNayx6fjhd9/wCj9bCWSpV+OqG8sfmVLqk31e7sUilS1muZWglMnxwmpiCc&#xA;NmCnfmwNegpksul4dweqxyWgdT/NLUrSKRhZQgrxdJCzPEQdPW8aMutOLqzqoqBzBqv2WycdID1/&#xA;F0xOWvx5Jnq35hG3u7pNP+qXcdpJbwLH6372d7igMkXHkPThJ+M77K/8u9cNNYF2Lv8AH48mRyMt&#xA;0+9S+0+2vY1ZI7qJJkRxRgJFDAMPHfMaUaJDMG0RQff1yKXYq6grXv44q7FXYq7FXYqkmvuBrHlp&#xA;N6tqErA0NKDT7obtSg69MVTvFXYq7FUk8wuE1Py2TUg6k6/CCxq1hdgbAHx3PbFU7xV2KuxV5v8A&#xA;nJ+XL+ZdMGqaYldbsIypiChvrVtRuUJViodl9R+CsQGDPGSFkY4CkFCfkr+ZkWt2S+XdTuC+s2SH&#xA;6tNIzM1xAnZnYIzTRLTlyAZlo5Af1ERCSHqeFi7FXYq7FXYq7FUBruqaRpek3F7rEqQ6ZGoW5klU&#xA;snGQiOjABqhi1OmTxwlKVR5oJAG6W+Y9Q0G40Cxvrm3l1KxubiyksY7c8GeWaVPqrfG8Ip6jKfiN&#xA;PHLMUZCRA2NH9rGRFJd5b83+VLrV7trC2uYJ9SRby4u5hVJTHawSgAepIystvNHtwA+nJ5cMxEXW&#xA;232n9LGE4k7I64/MHy5A8bNJI1pIwj+tqh4CVukfpmkxJ8VjI8SMgNNM+9mZhCnXdKtPPEmmx6bL&#xA;JqF9JBBNftIHWn1ee5QKsjEqiCJvhUAVJPXrPw5HHd7Dp8QGPEBL3rm8+acupR2sdo1bqT0LO4Yh&#xA;ElcXbWzqWAPE8ld0B+0AehwflzV3y/VaeMIXyz540fV7mz0+x0wW9rdRBnV+KGIiH1PTeHj2UCm9&#xA;CpBGxGSy6eUQSTuiEwVaz83aNey6dZ3GmelZ61D6mnOwjdHt5waeog3j51UFf8of5XESwyFkHePN&#xA;RMGvNmAAAoOmYrY7FXYq7FXYq7FXYq7FUk19wNY8tJvVtQlYGhpQafdDdqUHXpiqd4q0zhSoNasa&#xA;CgJ7E706dO+Kt4qknmFwmp+WyakHUnX4QWNWsLsDYA+O57YqneKuxV2KuxV4t+bn5Y39tqJ87+U1&#xA;eO9hb6xqNrbfDNzSrC5t6K9GqT6ihTWrNxblLHMGQLKfyq/NrTfOdilrdGO18xxRlrmzU/BKq0rN&#xA;Bu3w/EpZORK1G7IyO5QQ9AxQ7FXYq7FXYqhtS02x1Own0+/hW4s7pDHPC/RlbqP7R0yUZGJsc0EW&#xA;KKG1vy/Yaxp8Vhc8o7aKaCdUi4gE28gkRCGVhxqoqB2yWPIYmwiUbWaZ5a0zTdSvtRt0/wBIvynK&#xA;qoBGscUcIji4qpVOMKVFeoxnlMgAeiiIBtMDaWrXK3TQxm6ReCzlR6gU7lQ1K09shxGqZKMuj6TN&#xA;erfS2UEl4hQpcvGrSAx8ghDEVBXm1PnhE5AVeyKCgnlvQ1klk+pRs8rc3Ljn8Xq+v8PKvH99+82/&#xA;a365LxZd68IU5vKPliZIUl0y3ZYEEUQ9MDiiqEC7duA4/LCM0x1RwhfD5Y8vwXKXMFhDDNHJ6qtG&#xA;oT46MASFoDT1GpXoST1wHLIiiU8ITPK0uxV2KuxV2KuxV2KuxVJNfcDWPLSb1bUJWBoaUGn3Q3al&#xA;B16YqneKuxV4f5M/OfWNR0fzJ/ifUbTy9eW6+rp1zcxA+kQGN1AsRaP1XtVCUUnlyccq1pgSyvy9&#xA;5outT8oeRdf1aeO+u57ljdz6bDLMjyCyvI24RxK7sQwo3AFa1I+HCh6LirsVdirsVdirxv8AM78l&#xA;Lq5uT5k8kSNZazE/1iSwR/TV5VYuJbZuSLFLyZjxJCsSd05OXFMgVX8tPz1g1G4Ty75xT9F+YIm9&#xA;AXMq+lFNIpC+nKrBPRnqQCpUKxIpxZhGG1IejfWtOg8x3bTyrE4tIWLuxVAA8gfcniCA0de+48cg&#xA;K4z7mMYmUqAspwrKyhlIZWFQRuCDlikN4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;Ug1+7iHmDy3acZPVN7JKG9KT0uIsLtaerx9Pl/k8uXelMVT/ABV2KrGhhYEMikNXkCAQa9a4qk2v&#xA;GGDUfLQ+GKMakyqNlFWsLtVA+ZNBiqeYq7FXYq7FXYq7FWEfmN+Unlfzxbl7xPqmrInCDU4R8dAC&#xA;AkyVUSx7nYkEAniy1JxSC838pr568ia9LoHmv6tPol1C9paeZLslIowIqwxpdFa/EKr6TiuwVSEQ&#xA;VhEDibtPEHJfdXx3ezeVvN/l/wA0aebzR76C8EZCXUcMgcwyd0cbMOnwkj4huNsm1TjwyITJdQsG&#xA;ujaLcxG7UVa3DqZAOu6V5ZHjF1e68Bq62V8kxdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VSTX5EGseWoywEjahKypXchdPugSB7chiqd4q7FXYqknmGRE1Py2zsFB1J1BY0FWsLtVG/iTQYqn&#xA;eKuxV2KuxV2KuxV2KoXVbEX+nXFk3p8biNo29VPVSjChqlVr9+LPFIRkCejx7zN/zjs1nqK+YPy2&#xA;1Z/LWux1b6tyf6nITSqj7bxqx3KtzU7LxAwItT0z8z/MXlSYah+Z9hcW09ukenX9/bQw/V09R+UM&#xA;4WKWRpFfi3MoNm2C9QKAf3u/d+P0t0ccvCkelj7L/WPm9T0zzp5e1jT7fUNDu49Xs7iRYRLZyROE&#xA;dhULIGdSjU6qRyHhl0pU45TzJK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUk1+RBrHlqMsB&#xA;I2oSsqV3IXT7oEge3IYqneKuxV2KpJ5hkRNT8ts7BQdSdQWNBVrC7VRv4k0GKp3irsVdirsVdirs&#xA;VdirsVdiqS6hpWj3uqi3vNOjuobq2mS8Ett6kMgLxFVlZkMbfYNAx7ZUQOPl0/U5ER+6O/8AEOvk&#xA;ejzXzB+Qvl/Q55/MPkcHQ9QKgTqHlkt44+fJpYogeaunX4HooHwrXYx1Ebj7kaaPFkiD3/jntvyS&#xA;k+cPz08q2H1HzrpK6po0qhY/NelGT61ADuGuLWIhy4Gx+woPViOpmTwdzVn2Jo37mYeX/wA8fJvm&#xA;XSZx5euHfV7aIrLZXMbo8MwDBEk9YxF+bJQFSfffbBky8I82ePCZRMukfx+Nwz3RL9tQ0i0vm4cr&#xA;iNZCIySo5dt9wR3HY7ZZjnxRB70ZsfBMx7vgpHW1GpfUPqk/L1BF637n06sjSA/3nOnFCfs5OW1e&#xA;bVaZYpdirsVdirsVdirsVdirsVdirsVdiqSa/Ig1jy1GWAkbUJWVK7kLp90CQPbkMVTvFXYq7FUk&#xA;8wyImp+W2dgoOpOoLGgq1hdqo38SaDFU7xV2KuxV2KuxV2KuxV2KuxV2KqV1bQ3VtJbTAmGVSkgV&#xA;mQlT1HJSrD6DglEEUWUJmMhIcwvjRY0VFJIUUBYljt4sxJP04gUgmzbHPNfkTR9et7iqfV7qdR6s&#xA;0J9Fpim8YnkjAldUYAgcsry4uJvw6iWMEDr13se7zYPJ+WP5j6c1x/hnzdf2uoTSNeG61CSO9sWl&#xA;faS2+rSLyVGPx+oAWB8euV44zEt+VORnzY5wJ/i4u7evfyod39jAtcuvzA0p/Ndx5h03Sxqqzae9&#xA;zd2Uc0tvcMI2VOEcqEAujljyI+IHvm4xyJOKJ5erq6iRokvQdI/P/wAuT3slldJPYTJCEtrTULf6&#xA;lPJdoeLwn97MqVpVKqFP821Ti5sfDj4/f+OTl6fH4mQQur/H4+xnPkzz15c832Ml3otz64t2Ed0n&#xA;CRTHIRXj8apyHgRmPCfEGzU6aWKVFMb3W7K1trmf4pzaFUlhhAMhdyAqKGKgsaigrgllABPcuPTS&#xA;lIDlxdTyRkMqTQpLGQ0cih0YEEEMKggioP0ZMGxbRKJBo9F+FDsVdirsVdirsVdirsVSTX5EGseW&#xA;oywEjahKypXchdPugSB7chiqd4q7FXk/kz87LvzJoHmjUP0dFb3Wi2/16yt3kZBLC8crrG5ozGSM&#xA;QHmVFDUbLgVk1tr41PRPImv3vp2p1FobyccuMaNcaTcuVDMenJ6CuFWZYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FWN+YvLVjqVxHFcRTzwXsyNeKCGiVYonVDRqgfEV7YfFlExroxIQXmb8sdF1ya6&#xA;unYJe3ZtvVmkiSQcbU0oOPpSVeMsjEv3qN1XjfHOQOEi47/ayiTE8QNF59rX/OOtrHHeS6KnGaSe&#xA;eSFvrRE3ovGPRi+KEIeE45/E32CVLE0YW6bPjx8hX49/cyz5J5TcjZ/Hcl7eRvzc0+0vJkuZIvSs&#xA;XNxLdSRXENwEAdrcxrM0gLGoST2+IUb4ap48UpS7pSHy6/j8HL/Ny4MdfVC/n0P4/YEovPf5pHT4&#xA;ryTTJIYmntBJqokeOOQsKLEsJAaSv+7PTfYg126V/k4kmUZ2NzQ/o/Hr+N27x4xIhKHlvX8XwoVy&#xA;7h7mR6x+fF7o2pTWWraTPZxxWUshuJbW4h53IQmIxKfWcwu5VORT4TUnYZPTYuPEJy2N04WqhGGQ&#xA;xgbj38/tRnl/8/PLl6mgQT3lq11fRzHVzHMn+iPCvL96rNGycx9kcTXovI5ZLTi5UfpLQCzjyp5z&#xA;0zzGs4tT++tzV1VZinpsSI39SSKFfjAqFG9Ou9QKsuEw5pZBlKuxV2KuxV2KpHr08P6b8tweovrG&#xA;/kcRVHLj+j7scuPWle+Kp5irsVSSTyR5NkMhfQ7EtKZjI31eKpNwAJjXjX94FAbxxVC6po2k2jeV&#xA;9LtrOGLTYb90is1RRCqrp92QAlONAcVZLirsVUP0hYDY3MX/AAa/1xVVjkjkQPGwdD0ZSCD26jFW&#xA;Hf8AK1vLkcaXt5BdWWgTtKtn5hnSMWM5hR5G4FJHmUFYn4NJEoenwk1FVW738yWs9Mh1GbyxrIgu&#xA;ZYYoBxsVZhdSxwQOeV2qoJJZ0UK5DjqVCgkKptoPm2y1YX6S21xpV5pbBdQsr8RpJErKXSQvE8sL&#xA;RuoJDpIRse4OKo+w1vRtRLDT7+2vCiLIwt5o5aI5ZVY8CfhLRsAfY+GKpPpnn/SNR1u00uGC5Qah&#xA;bSXmm38iILa5jjkKfuyHMlWUeonJByT4hXfFV+i+drLWdG1DV7CxvJLSwmngjHCIyXItzRpLdFkY&#xA;sjU+DlxZuw3FVUReedvJ1jZWN9f65YWNpqUfrafNdXMVus8dFblH6rJyoHWtOlRiqG1nz7oWnWNp&#xA;ewF9WgvI5bmFtNMU4NrbAGe4B9RFaOIMK8CWNaKpO2Ko3UPMtpZX2iWrQyzx67M9va3kPpmFJFt3&#xA;uVEnJ1ekkcL8SiMNt6VFVUpvvzH06y097qbTr0zLfTaaLIfVvVaW3ied3DtOsAT0Y2cVkBPSnLbF&#xA;Uz0nzTaalrF1pcdtcQy29paags0yoqSwX3qCMoA7SKVaB1dZEUgjuN8VTOC8triW5iiflJaSCG4W&#xA;hHFzGkoG43+CVTt44qx/SvzB0LUIL65KzWlpY236QFzcKgjnsfj/ANKhKPJWP9032uLdCVoRVVAS&#xA;/mvokMbevp+oQ3MKyzXtm0cPrW9pAkUsl5LxlKGFUuYz8DM+9OPIMAqmzeb1K6wINLvLibRZEjmg&#xA;RrRTMskayrLC8lxHHw4NX43VvbFUxsjp2qW9jq4tQJJYUmtnniCzxrKobieQ5I1G+IYeI8lQWt+R&#xA;/KGuS+tq2jWd7NSglngjkb5/EprTtXCJEK8417/nH/Q7u4uU02zWFT9Xa3uri5lJDAuLk0T4yWR0&#xA;41NOSV7sGzBq7A4vNjwoe3/JvzrpUF5+i9bmtuReWCLT7+7tw7qymJDHN60Sqy8g5JJ6EHY8jLPj&#xA;lVhQCERc+WfzxtzSDX7q/WzEX1YyfUYWfkoMleIUS8GHH999ofFWuzRxywjn1XdGa1rP52aRZT3V&#xA;6NMe2h4GS4gpBUO6qghWQ3FZN/3nMBepUnYZXihCRA96UW35hfmPbatDZXnk+JpJInljsLPUbe4u&#xA;Z44zRpopJfqkQUcl+BgGP7IO/GsQHAZeaVbT/wA6La5j9SXyn5ijjqQZYNPa9jBArQtaNMa7+GRy&#xA;QMTSpx+mNH1658saxp6SFH1GaJZLi2mtZwFsLsMhjuEilA5DuKHIJZbih2KuxVJPMMaPqfltXUMB&#xA;qTsAwqKrYXbKd/AioxVO8VdiqAOj2xJPLr/xXB/1TxVFwQrDEsS7qtabKvU16KFH4Yq8q1T8rNYu&#xA;YtP8n37DUfy6gMgtobZY4b2AlXSFbqSWQLJDAJKo0S8ywXkppUqsi1TyZ521LQ4tMufMto729zZz&#xA;xTnTGoy2NxHdJ6qi7UtI0kCAsjIvHkOFSGVVfL+XD6hpPmW31zUzd6j5ogW1vL22gFskUMSMsMcM&#xA;ReZuKGRm+ORiSTviqUXPkfzfpmtPqOm3xvTr95bnzJHawWtonoJGLckNOZ3WNIviEcfxluR5/Fsq&#xA;rW35e69qNhp1tq97FZDSoLW0ha2hJnZrItG1xFcesQiXVtLLGUMXJOf2jT4lUFFo35neXPMUMemm&#xA;TVdCkkur64gsorCxtjLO5ZLaQ3c1zdALWvqRbUCrx3ZlVZVYeRbQeXdJ0zUbq7M+nQlXl0+9vdPR&#xA;5JKNIaWk0BZeQ+DnXiPmcVWeYfIh1C2s4tN1GSxmtba6083Nx6t/K1nfBBcL6k0vqerWFCkjs1CN&#xA;1YbYqraj5W1K6udAeK/ggttAv/rkUP1Z3aSEW0losJc3AowjuHq9DU8fh2IKqT6r+XGs6jY3dtJr&#xA;FoRcapLqSRS6e0lvxkiMaxzRG6DSNEeMiSK6UdQ3HYYqnOkeVdQsfMU+q3Gpi8in0uz0to3gInLW&#xA;TSuJ3m9RkZpGuZOS+kO3gaqpb5P/ACm8v+VdYl1WwmaS4lVlZWs9JgA5Kq/C9nZWsqikY+FXCk1J&#xA;BJriqnYflk9vp91pk+pJcabPYDRIrf6uyGLSgsq+iGEx5Tn1VBmIpxUDhWpxVDXX5W6peC4nudfD&#xA;ajqMM9hqlwloUSTT7mGGF4oY/XJhl42qsJSzfEW+GhAVVM7vyTqsreYES806W01trfjZ32nSXUMc&#xA;UEIhaORfrcXrcgikH4aHseyrItB0mPR9EsNJileaOwt47ZJZTV2ESBAW+7FUdirsVdirsVdirsVQ&#xA;mmaVY6ZbNbWSNHC0kkxVneT95M5kkNXZj8TsW+ZyUpmRsql+vxodY8tSFQZF1CVVem4DafdEgH34&#xA;jIqneKuxV2KsS89XBN75etLO+srfWzftcadZ34do7kx2s6MtI/iBQSeoD4rirv8AkLP/AGof+nzF&#xA;Xf8AIWf+1D/0+Yq0v/K26fEdAJqegvRtXbxxVx/5W3UUOgAV+KovTUU7Yq4/8rb24nQBvvUXp2+8&#xA;Yq7/AJC3yG+gcaGope1r23xVqn5u0HxeX6132vfs16devviqX6rr35iaQ9mmpXvlu2bULlLSzR/r&#xA;vKWaU8Y40AJPIsRv0wJUfLfmLz/rFtLHp2p+XdUl09hbXs6fWwTKooXKqFWjkEgqOJ349MVTj/kL&#xA;P/ah/wCnzChr/kLfIb6Bxoail7WvbfFW/wDkLP8A2of+nzFWl/5W3xHI6AWpuQL0Cvy3xVqn5u8A&#xA;OXl/nQVal7Svfav8cVb/AOQt8hvoHGhqKXta9t8VS7W9f/MTQbD9IazeeXLOyVhG0zi9ALuQEVaF&#xA;jU+FDgSk11+YHmrTtQ1IX/mDy0p09IIbqypefupiz8mTirSSM/NVdVLcOO9DyxVlEM35pzwxzQye&#xA;X5YZVDxSobtlZWFVZWGxBHQ4VXEfm0QQp0BSejEXjAHxpVa/fihMl/xxxHI6YWpuQLgCvy3xVoDz&#xA;1zJJ0vhQcVpcVB3qSa/LtirgPPXMknS+FBxWlxUHepJr8u2KrSPPvGTi+lBj/dErcELsPtDkOXxb&#xA;7U8PfFVl3N52gglnebSYIIo3eSSUXHFeIrzY8l+FQDy/WMUsbf8AMKe6S1Nt5h0SFLyBL+2kpP8A&#xA;FbRM8spLP8IWSK3lArRqK7CvHYKiLD8xPr91ZWlpq+jS3OoF1tIf9JDs0ZdWVgwHBqwuArUJ4mmK&#xA;sj/53b/tWf8ATxhQh10rzLd6zp95qb2At9OleaIW6S+sS8EsDLzc04n1Q2w/Z+5VkeKuxV2KsW81&#xA;eT77WvM3lbWYLyK3j8u3UtzJA8TO0wmhMDKHDrxorkjY74qynFXYq7FXYq7FXYq7FWL+ffKN95li&#xA;0VLS8iszpOq2urEyxNKHa0YssdFeOgau5xVLPyu/Kq18hfpT0b5739IGFE5Jw9OG29T0lPxNyf8A&#xA;fNybavhiqzXvOnmO4/MWPyL5ZNjb3kWlvq+oahqMU1xGqGUQxQxwwy2xLMxBZi9AvYnbFUptPzg1&#xA;TUfyd1Hzja2UFtrmmStZ3NtLzltfrMU6Quy8Wido2D8gOQI6VNKlVSk/NDzRPqnmW3tLrRLOx8mC&#xA;2ttUvdUEtrHfX0w+JIZGuOFlHyHBTIZfiI64qi7L88/LOoazZ+UrO8gfzTfWieleRGK40xL+W2My&#xA;xFop/VkWo6x1X9nnyOKqHknz75881adpcMdzpVj5g9bUofMVpJYXLrZtYssSoE+uo3MSyJWrfGrV&#xA;HEoeSrMPy18y6h5n8jaRr2opFHe38RknS3VkiDCRk+BXaRgPh7scVa/Mjyld+bvKV1oFtdx2TXUl&#xA;u73EkZlAW3nSegVXj3LRgVrirzvXP+cbLXVdZ1HV21toru7uJLu3UQco45LpzJcBx6gLqWY8OnHv&#xA;XAr1zQdIg0bQ9O0eB2kg021htInf7TJBGI1Le5C4VR2KuxV2KuxV2KqF9DNNZXEMLKk0kTpE7gso&#xA;ZlIUsAQSK9d8VeLW3/OMtubGztL3XC6w2AsrgwwFC7xW93bQyLWRuIC35LL3KjxOKo3y/wD845WG&#xA;k+Y9O1xtaknltbtdQuoRDwWSaKSeSIITI3poPrNGG9ePauyr2PFXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FWA/mR+Xeta1cxeY/J+rHQfOtrbNYw37UaCazkfm1vOjJKKBjzRghKt9FFUuT8stWj/&#xA;ACZuPJNpa2Gn6m6qAy3c9xBNKJkmknmna2il5ysrVHpmmwG3RVMdS/KTS9XudS1Ga6vNEu/Mdqlt&#xA;5o0/S54pLS7onAhmuLcvUKSnqRrExHgScVTLSPy20TRvM02u6TdXlkLqG2gvNMjkQ2kwsoTBbs/N&#xA;Gm5JHt8MoDU+IHFUXY+UrDQr/wAw61oVqjaxrzx3FzDNKYIHmhi9NBzjjlaMNuzNwY8mJxVT/LXy&#xA;1qHljyNpGg6i8Ul7YRGOd7dmeIsZGf4GdY2I+LuoxVkuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.102;PS 2.000;hotconv 1.0.67;makeotf.lib2.5.33168</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Symbol</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>001.008</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Symbo; Symbol</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Roman</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>10.0d1e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Times-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Times</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>10.0d1e1</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times.dfont</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 3.05</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Standard-Farbfeldgruppe</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -369.372 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 369.372 li
564.742 369.372 li
564.742 0 li
cp
clp
gsave
24.5741 -.000305176 mo
558.906 -.000305176 li
558.906 360.999 li
24.5741 360.999 li
cp
clp
[.962761 0 0 -.909319 5.31885 540.135 ]gset
[
] set_spot_normalization_ary
%%BeginDocument: /Users/siggi-new/Documents/as2015curves.1181.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 197 575 594
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, November 19, 2015 8:12:21 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
774 551 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
774.000 0 l
774.000 551.000 l
0 551.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 774 551 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 764 541 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
53.0000 9.01423 709.999 486.985 rc
newpath
80.0909 10.9381 m
80.1616 11.2745 l
80.2323 11.6104 l
80.3030 11.9457 l
80.3737 12.2806 l
80.4444 12.6150 l
80.5151 12.9489 l
80.5858 13.2822 l
80.6565 13.6151 l
80.7272 13.9475 l
80.7979 14.2794 l
80.8686 14.6108 l
80.9393 14.9417 l
81.0100 15.2721 l
81.0808 15.6021 l
81.1515 15.9315 l
81.2222 16.2605 l
81.2929 16.5890 l
81.3636 16.9170 l
81.4343 17.2446 l
81.5050 17.5716 l
81.5757 17.8981 l
81.6464 18.2243 l
81.7171 18.5499 l
81.7878 18.8750 l
81.8585 19.1997 l
81.9292 19.5239 l
81.9999 19.8476 l
82.0707 20.1709 l
82.1414 20.4936 l
82.2121 20.8159 l
82.2828 21.1378 l
82.3535 21.4592 l
82.4242 21.7801 l
82.4949 22.1005 l
82.5656 22.4205 l
82.6363 22.7401 l
82.7070 23.0591 l
82.7777 23.3777 l
82.8484 23.6959 l
82.9191 24.0136 l
82.9898 24.3308 l
83.0606 24.6476 l
83.1313 24.9639 l
83.2020 25.2798 l
83.2727 25.5952 l
83.3434 25.9102 l
83.4141 26.2247 l
83.4848 26.5388 l
83.5555 26.8525 l
83.6262 27.1657 l
83.6969 27.4784 l
83.7676 27.7907 l
83.8383 28.1026 l
83.9090 28.4140 l
83.9797 28.7249 l
84.0505 29.0354 l
84.1212 29.3455 l
84.1919 29.6552 l
84.2626 29.9644 l
84.3333 30.2732 l
84.4040 30.5816 l
84.4747 30.8895 l
84.5454 31.1970 l
84.6161 31.5040 l
84.6868 31.8106 l
84.7575 32.1168 l
84.8282 32.4226 l
84.8989 32.7279 l
84.9696 33.0328 l
85.0404 33.3373 l
85.1111 33.6414 l
85.1818 33.9450 l
85.2525 34.2482 l
85.3232 34.5510 l
85.3939 34.8534 l
85.4646 35.1554 l
85.5353 35.4569 l
85.6060 35.7580 l
85.6767 36.0587 l
85.7474 36.3590 l
85.8181 36.6589 l
85.8888 36.9583 l
85.9595 37.2573 l
86.0302 37.5560 l
86.1010 37.8542 l
86.1717 38.1520 l
86.2424 38.4494 l
86.3131 38.7464 l
86.3838 39.0430 l
86.4545 39.3392 l
86.5252 39.6349 l
86.5959 39.9303 l
86.6666 40.2253 l
86.7373 40.5199 l
86.8080 40.8140 l
86.8787 41.1078 l
86.9494 41.4011 l
87.0202 41.6941 l
87.0909 41.9867 l
87.1616 42.2789 l
87.2323 42.5706 l
87.3030 42.8620 l
87.3737 43.1530 l
87.4444 43.4436 l
87.5151 43.7338 l
87.5858 44.0236 l
87.6565 44.3130 l
87.7272 44.6021 l
87.7979 44.8907 l
87.8686 45.1789 l
87.9393 45.4668 l
88.0100 45.7543 l
88.0808 46.0414 l
88.1515 46.3281 l
88.2222 46.6144 l
88.2929 46.9004 l
88.3636 47.1859 l
88.4343 47.4711 l
88.5050 47.7559 l
88.5757 48.0403 l
88.6464 48.3244 l
88.7171 48.6080 l
88.7878 48.8913 l
88.8585 49.1742 l
88.9292 49.4568 l
88.9999 49.7389 l
89.0706 50.0207 l
89.1414 50.3021 l
89.2121 50.5832 l
89.2828 50.8639 l
89.3535 51.1442 l
89.4242 51.4241 l
89.4949 51.7037 l
89.5656 51.9829 l
89.6363 52.2617 l
89.7070 52.5401 l
89.7777 52.8183 l
89.8484 53.0960 l
89.9191 53.3734 l
90.0605 53.9270 l
90.1313 54.2033 l
90.2727 54.7548 l
90.3434 55.0300 l
90.4141 55.3048 l
90.4848 55.5793 l
90.5555 55.8535 l
90.6262 56.1273 l
90.6969 56.4007 l
90.7676 56.6738 l
90.8383 56.9465 l
90.9090 57.2188 l
90.9797 57.4908 l
91.0504 57.7625 l
91.1212 58.0338 l
91.1919 58.3048 l
91.2626 58.5754 l
91.3333 58.8457 l
91.4040 59.1156 l
91.4747 59.3851 l
91.5454 59.6543 l
91.6161 59.9232 l
91.6868 60.1918 l
91.7575 53.0992 l
91.8282 53.3434 l
91.8989 53.5874 l
91.9696 53.8310 l
92.0403 54.0744 l
92.1111 54.3176 l
92.1818 54.5604 l
92.2525 54.8030 l
92.3232 55.0453 l
92.3939 55.2874 l
92.5353 55.7707 l
92.6060 56.0119 l
92.6767 56.2529 l
92.7474 56.4936 l
92.8181 56.7341 l
92.8888 56.9742 l
93.0302 57.4538 l
93.1010 57.6932 l
93.1717 57.9323 l
93.2424 58.1712 l
93.3131 58.4097 l
93.4545 58.8862 l
93.5252 59.1240 l
93.6666 59.5988 l
93.7373 59.8358 l
93.8787 60.3091 l
93.9494 60.5454 l
94.0201 60.7813 l
94.0909 61.0171 l
94.1616 61.2525 l
94.2323 61.4878 l
94.3030 61.7228 l
94.3737 61.9574 l
94.5151 62.4261 l
94.6565 62.8938 l
94.7272 63.1272 l
94.8686 63.5933 l
94.9393 63.8260 l
95.0100 64.0584 l
95.1515 64.5225 l
95.2222 64.7542 l
95.3636 65.2168 l
95.4343 65.4477 l
95.5050 65.6784 l
95.5757 65.9088 l
95.7171 66.3689 l
95.7878 66.5986 l
95.8585 66.8281 l
95.9292 67.0573 l
96.0706 67.5149 l
96.2121 67.9716 l
96.3535 68.4273 l
96.4242 68.6548 l
96.4949 68.8821 l
96.6363 69.3358 l
96.7777 69.7886 l
96.9191 70.2405 l
96.9898 70.4660 l
97.0605 70.6914 l
97.2020 71.1413 l
97.2727 71.3659 l
97.4141 71.8144 l
97.5555 72.2619 l
97.6969 72.7086 l
97.8383 73.1543 l
97.9090 73.3768 l
97.9797 73.5990 l
98.0504 73.8210 l
98.1919 74.2643 l
98.3333 74.7068 l
98.4040 74.9276 l
98.4747 75.1483 l
98.5454 75.3687 l
98.6868 75.8088 l
98.8282 76.2479 l
98.9696 76.6862 l
99.1111 77.1236 l
99.2525 77.5600 l
99.3939 77.9956 l
99.4646 78.2130 l
99.5353 78.4303 l
99.6767 78.8640 l
99.7474 79.0805 l
99.8888 79.5129 l
99.9595 79.7288 l
100.030 79.9445 l
100.171 80.3751 l
100.242 80.5901 l
100.313 80.8048 l
100.454 81.2337 l
100.525 81.4478 l
100.595 81.6617 l
100.737 82.0888 l
100.808 82.3020 l
100.878 82.5150 l
100.949 82.7278 l
101.090 83.1528 l
101.232 83.5768 l
101.373 84.0000 l
101.444 84.2113 l
101.515 84.4224 l
101.585 84.6332 l
101.656 84.8439 l
101.727 85.0543 l
101.868 85.4745 l
102.010 85.8939 l
102.080 86.1032 l
102.222 86.5213 l
102.292 86.7301 l
102.434 87.1469 l
102.505 87.3550 l
102.575 87.5629 l
102.717 87.9780 l
102.787 88.1853 l
102.858 88.3924 l
103.000 88.8058 l
103.141 89.2185 l
103.282 89.6303 l
103.353 89.8360 l
103.494 90.2465 l
103.636 90.6563 l
103.777 91.0653 l
103.919 91.4735 l
104.060 91.8808 l
104.131 92.0842 l
104.272 92.4903 l
104.343 92.6931 l
104.484 93.0980 l
104.626 93.5022 l
104.697 93.7039 l
104.838 94.1069 l
104.909 94.3081 l
105.050 94.7098 l
105.191 95.1108 l
105.262 95.3110 l
105.404 95.7107 l
105.474 95.9103 l
105.616 96.3089 l
105.757 96.7068 l
105.899 97.1039 l
106.040 97.5001 l
106.181 97.8956 l
106.323 98.2904 l
106.464 98.6844 l
106.606 99.0776 l
106.676 99.2739 l
106.818 99.6660 l
106.888 99.8617 l
107.030 100.252 l
107.101 100.447 l
107.242 100.837 l
107.313 101.032 l
107.383 101.226 l
107.525 101.615 l
107.595 101.808 l
107.737 102.196 l
107.808 102.389 l
107.949 102.775 l
108.020 102.968 l
108.161 103.353 l
108.303 103.737 l
108.444 104.120 l
108.585 104.503 l
108.727 104.885 l
108.868 105.267 l
108.939 105.457 l
109.080 105.837 l
109.222 106.217 l
109.363 106.595 l
109.434 106.785 l
109.575 107.162 l
109.717 107.539 l
109.858 107.916 l
110.000 108.291 l
110.141 108.666 l
110.282 109.040 l
110.424 109.414 l
110.565 109.786 l
110.707 110.159 l
110.777 110.344 l
110.919 110.715 l
111.060 111.086 l
111.202 111.455 l
111.343 111.824 l
111.414 112.009 l
111.555 112.376 l
111.697 112.744 l
111.838 113.110 l
111.979 113.476 l
112.121 113.841 l
112.262 114.206 l
112.333 114.388 l
112.404 114.570 l
112.545 114.933 l
112.616 115.114 l
112.757 115.476 l
112.899 115.838 l
113.040 116.199 l
113.181 116.559 l
113.323 116.919 l
113.464 117.277 l
113.535 117.457 l
113.676 117.815 l
113.818 118.172 l
113.959 118.528 l
114.030 118.706 l
114.171 119.062 l
114.242 119.240 l
114.383 119.594 l
114.525 119.948 l
114.595 120.125 l
114.737 120.478 l
114.878 120.831 l
115.020 121.182 l
115.161 121.533 l
115.303 121.884 l
115.444 122.234 l
115.585 122.583 l
115.727 122.932 l
115.868 123.280 l
116.010 123.627 l
116.151 123.974 l
116.222 124.147 l
116.363 124.493 l
116.505 124.838 l
116.646 125.183 l
116.717 125.355 l
116.858 125.698 l
116.929 125.870 l
117.070 126.213 l
117.212 126.555 l
117.353 126.896 l
117.494 127.237 l
117.565 127.408 l
117.707 127.748 l
117.848 128.087 l
117.919 128.257 l
118.060 128.595 l
118.202 128.933 l
118.343 129.270 l
118.414 129.439 l
118.626 129.943 l
118.767 130.279 l
118.909 130.614 l
118.979 130.781 l
119.121 131.115 l
119.333 131.615 l
119.404 131.782 l
119.616 132.280 l
119.757 132.612 l
119.828 132.777 l
119.969 133.108 l
120.111 133.438 l
120.252 133.767 l
120.393 134.096 l
120.535 134.425 l
120.676 134.752 l
120.818 135.080 l
120.888 135.243 l
121.030 135.569 l
121.171 135.895 l
121.313 136.220 l
121.454 136.545 l
121.595 136.869 l
121.737 137.193 l
121.878 137.516 l
121.949 137.677 l
122.090 137.999 l
122.232 138.321 l
122.373 138.642 l
122.515 138.963 l
122.656 139.283 l
122.798 139.602 l
122.939 139.921 l
123.080 140.240 l
123.222 140.557 l
123.363 140.875 l
123.434 141.033 l
123.575 141.350 l
123.646 141.508 l
123.787 141.823 l
123.929 142.139 l
124.070 142.453 l
124.212 142.767 l
124.353 143.081 l
124.424 143.238 l
124.565 143.550 l
124.707 143.863 l
124.848 144.174 l
125.060 144.641 l
125.202 144.952 l
125.343 145.262 l
125.484 145.571 l
125.626 145.880 l
125.838 146.342 l
125.979 146.650 l
126.121 146.957 l
126.333 147.417 l
126.474 147.723 l
126.616 148.028 l
126.757 148.333 l
126.899 148.637 l
127.040 148.941 l
127.181 149.244 l
127.323 149.547 l
127.464 149.850 l
127.606 150.151 l
127.747 150.453 l
127.888 150.754 l
127.959 150.904 l
128.101 151.204 l
128.171 151.354 l
128.313 151.653 l
128.454 151.952 l
128.595 152.251 l
128.737 152.549 l
128.878 152.846 l
129.020 153.143 l
129.161 153.439 l
129.303 153.735 l
129.444 154.031 l
129.585 154.326 l
129.727 154.621 l
129.868 154.915 l
130.080 155.355 l
130.151 155.502 l
130.292 155.794 l
130.505 156.232 l
130.646 156.524 l
130.787 156.815 l
130.929 157.106 l
131.070 157.396 l
131.212 157.685 l
131.282 157.830 l
131.424 158.119 l
131.494 158.263 l
131.636 158.551 l
131.777 158.839 l
131.919 159.127 l
132.060 159.414 l
132.202 159.700 l
132.343 159.986 l
132.484 160.272 l
132.696 160.699 l
132.767 160.841 l
132.909 161.125 l
133.050 161.409 l
133.191 161.692 l
133.333 161.975 l
133.404 162.117 l
133.545 162.399 l
133.686 162.681 l
133.828 162.962 l
134.040 163.383 l
134.181 163.663 l
134.393 164.083 l
134.535 164.362 l
134.676 164.640 l
134.818 164.919 l
135.030 165.335 l
135.242 165.751 l
135.383 166.027 l
135.595 166.441 l
135.737 166.717 l
135.878 166.992 l
136.020 167.266 l
136.161 167.540 l
136.303 167.814 l
136.444 168.087 l
136.585 168.360 l
136.798 168.769 l
137.010 169.177 l
137.151 169.448 l
137.292 169.719 l
137.434 169.989 l
137.646 170.394 l
137.858 170.798 l
138.000 171.067 l
138.141 171.335 l
138.282 171.603 l
138.494 172.004 l
138.636 172.271 l
138.707 172.404 l
138.919 172.803 l
139.060 173.069 l
139.202 173.335 l
139.343 173.599 l
139.484 173.864 l
139.626 174.128 l
139.767 174.392 l
139.979 174.787 l
140.121 175.049 l
140.333 175.443 l
140.474 175.704 l
140.686 176.096 l
140.828 176.357 l
140.969 176.617 l
141.111 176.877 l
141.252 177.137 l
141.393 177.396 l
141.535 177.655 l
141.676 177.913 l
141.888 178.300 l
142.101 178.686 l
142.313 179.072 l
142.525 179.456 l
142.666 179.712 l
142.808 179.967 l
143.020 180.350 l
143.161 180.604 l
143.373 180.985 l
143.585 181.365 l
143.727 181.618 l
143.939 181.997 l
144.151 182.375 l
144.363 182.752 l
144.505 183.003 l
144.575 183.128 l
144.787 183.503 l
144.929 183.753 l
145.141 184.127 l
145.282 184.376 l
145.424 184.625 l
145.565 184.873 l
145.707 185.121 l
145.848 185.368 l
145.989 185.616 l
146.131 185.862 l
146.272 186.109 l
146.484 186.478 l
146.626 186.723 l
146.838 187.091 l
146.979 187.335 l
147.191 187.702 l
147.333 187.946 l
147.474 188.189 l
147.616 188.432 l
147.757 188.675 l
147.899 188.917 l
148.040 189.159 l
148.181 189.401 l
148.323 189.642 l
148.464 189.883 l
148.606 190.124 l
148.818 190.484 l
149.030 190.844 l
149.171 191.083 l
149.313 191.322 l
149.525 191.680 l
149.737 192.037 l
149.878 192.274 l
150.020 192.512 l
150.161 192.749 l
150.373 193.103 l
150.515 193.339 l
150.656 193.575 l
150.797 193.811 l
150.939 194.046 l
151.151 194.398 l
151.222 194.515 l
151.434 194.866 l
151.575 195.100 l
151.787 195.449 l
152.000 195.799 l
152.070 195.915 l
152.212 196.147 l
152.424 196.495 l
152.565 196.726 l
152.707 196.957 l
152.919 197.303 l
153.060 197.533 l
153.202 197.763 l
153.484 198.222 l
153.767 198.680 l
153.838 198.794 l
154.050 199.136 l
154.191 199.364 l
154.333 199.591 l
154.474 199.818 l
154.616 200.045 l
154.828 200.384 l
155.040 200.723 l
155.252 201.062 l
155.464 201.399 l
155.606 201.624 l
155.818 201.960 l
156.030 202.296 l
156.242 202.631 l
156.454 202.965 l
156.595 203.187 l
156.737 203.409 l
156.878 203.631 l
157.020 203.853 l
157.232 204.185 l
157.373 204.406 l
157.585 204.736 l
157.868 205.176 l
158.080 205.505 l
158.151 205.615 l
158.363 205.943 l
158.505 206.162 l
158.646 206.380 l
158.787 206.598 l
158.929 206.815 l
159.141 207.141 l
159.282 207.358 l
159.424 207.574 l
159.565 207.791 l
159.777 208.115 l
159.989 208.438 l
160.272 208.868 l
160.484 209.189 l
160.696 209.511 l
160.909 209.831 l
161.121 210.151 l
161.333 210.470 l
161.474 210.683 l
161.686 211.001 l
161.828 211.212 l
161.969 211.424 l
162.181 211.741 l
162.393 212.057 l
162.606 212.372 l
162.818 212.687 l
162.959 212.896 l
163.101 213.106 l
163.242 213.315 l
163.454 213.628 l
163.595 213.836 l
163.808 214.148 l
164.020 214.459 l
164.161 214.666 l
164.373 214.977 l
164.585 215.286 l
164.727 215.493 l
164.939 215.801 l
165.151 216.109 l
165.292 216.314 l
165.505 216.622 l
165.717 216.928 l
165.858 217.132 l
166.070 217.438 l
166.282 217.743 l
166.494 218.047 l
166.636 218.250 l
166.848 218.553 l
166.989 218.755 l
167.202 219.057 l
167.414 219.359 l
167.555 219.560 l
167.767 219.861 l
168.050 220.261 l
168.191 220.461 l
168.404 220.760 l
168.545 220.959 l
168.757 221.258 l
168.969 221.555 l
169.111 221.753 l
169.323 222.050 l
169.535 222.346 l
169.747 222.642 l
169.959 222.937 l
170.171 223.231 l
170.383 223.525 l
170.525 223.721 l
170.737 224.014 l
170.949 224.307 l
171.161 224.598 l
171.373 224.890 l
171.585 225.181 l
171.797 225.471 l
171.939 225.664 l
172.080 225.857 l
172.222 226.050 l
172.363 226.242 l
172.505 226.435 l
172.717 226.722 l
172.929 227.010 l
173.141 227.297 l
173.353 227.583 l
173.565 227.869 l
173.707 228.059 l
173.989 228.439 l
174.131 228.628 l
174.272 228.818 l
174.484 229.101 l
174.626 229.290 l
174.767 229.478 l
174.979 229.761 l
175.191 230.043 l
175.404 230.324 l
175.616 230.605 l
175.899 230.978 l
176.040 231.165 l
176.181 231.351 l
176.393 231.630 l
176.535 231.815 l
176.747 232.093 l
176.959 232.371 l
177.171 232.648 l
177.313 232.832 l
177.525 233.108 l
177.666 233.292 l
177.808 233.476 l
178.020 233.751 l
178.161 233.934 l
178.373 234.208 l
178.585 234.482 l
178.656 234.573 l
178.797 234.755 l
179.010 235.028 l
179.222 235.300 l
179.434 235.572 l
179.575 235.753 l
179.717 235.933 l
179.929 236.204 l
180.070 236.384 l
180.212 236.564 l
180.494 236.923 l
180.707 237.192 l
180.777 237.281 l
180.919 237.460 l
181.131 237.728 l
181.343 237.995 l
181.484 238.173 l
181.626 238.351 l
181.838 238.618 l
181.979 238.795 l
182.121 238.972 l
182.404 239.325 l
182.616 239.590 l
182.757 239.766 l
182.969 240.030 l
183.181 240.293 l
183.323 240.468 l
183.464 240.643 l
183.676 240.906 l
183.818 241.080 l
184.030 241.342 l
184.313 241.689 l
184.525 241.950 l
184.666 242.123 l
184.878 242.383 l
185.161 242.728 l
185.444 243.073 l
185.656 243.331 l
185.727 243.417 l
185.939 243.674 l
186.151 243.931 l
186.363 244.188 l
186.575 244.444 l
186.787 244.699 l
186.929 244.869 l
187.070 245.039 l
187.282 245.294 l
187.565 245.633 l
187.777 245.886 l
187.989 246.139 l
188.202 246.392 l
188.484 246.728 l
188.696 246.980 l
188.838 247.147 l
189.121 247.482 l
189.262 247.649 l
189.545 247.982 l
189.757 248.232 l
189.969 248.481 l
190.111 248.646 l
190.393 248.978 l
190.606 249.225 l
190.747 249.390 l
190.888 249.555 l
191.101 249.802 l
191.242 249.966 l
191.454 250.212 l
191.737 250.540 l
192.020 250.867 l
192.232 251.111 l
192.444 251.355 l
192.656 251.599 l
192.868 251.843 l
193.010 252.005 l
193.151 252.166 l
193.363 252.409 l
193.575 252.651 l
193.717 252.812 l
193.929 253.053 l
194.141 253.294 l
194.353 253.535 l
194.565 253.775 l
194.777 254.015 l
195.060 254.334 l
195.272 254.572 l
195.414 254.731 l
195.626 254.969 l
195.838 255.207 l
196.050 255.445 l
196.333 255.760 l
196.545 255.997 l
196.757 256.233 l
197.111 256.625 l
197.323 256.860 l
197.464 257.017 l
197.676 257.251 l
197.888 257.485 l
197.959 256.746 l
198.171 256.956 l
198.454 257.236 l
198.737 257.515 l
198.878 257.655 l
199.232 258.002 l
199.515 258.280 l
199.797 258.557 l
200.010 258.765 l
200.292 259.041 l
200.575 259.317 l
200.858 259.592 l
201.000 259.729 l
201.212 259.935 l
201.565 260.278 l
201.777 260.483 l
201.919 260.619 l
202.131 260.824 l
202.414 261.096 l
202.555 261.232 l
202.767 261.436 l
203.050 261.707 l
203.262 261.910 l
203.404 262.045 l
203.757 262.383 l
204.040 262.652 l
204.323 262.921 l
204.535 263.122 l
204.747 263.323 l
204.959 263.524 l
205.171 263.724 l
205.525 264.058 l
205.737 264.257 l
205.949 264.457 l
206.161 264.656 l
206.444 264.921 l
206.727 265.186 l
207.080 265.516 l
207.222 265.647 l
207.363 265.779 l
207.646 266.042 l
207.858 266.239 l
208.070 266.436 l
208.282 266.632 l
208.494 266.828 l
208.707 267.024 l
208.989 267.285 l
209.131 267.415 l
209.414 267.675 l
209.626 267.869 l
209.909 268.128 l
210.050 268.258 l
210.333 268.516 l
210.474 268.645 l
210.686 268.839 l
210.969 269.096 l
211.252 269.353 l
211.393 269.481 l
211.606 269.673 l
211.818 269.865 l
212.030 270.057 l
212.313 270.312 l
212.454 270.439 l
212.737 270.693 l
213.020 270.947 l
213.161 271.074 l
213.373 271.264 l
213.585 271.454 l
213.939 271.769 l
214.151 271.958 l
214.505 272.273 l
214.858 272.586 l
215.212 272.899 l
215.424 273.087 l
215.636 273.274 l
215.848 273.461 l
216.202 273.772 l
216.414 273.958 l
216.626 274.144 l
216.909 274.392 l
217.121 274.578 l
217.545 274.948 l
217.828 275.194 l
218.111 275.440 l
218.464 275.746 l
218.818 276.052 l
219.101 276.296 l
219.242 276.418 l
219.454 276.601 l
219.737 276.844 l
219.878 276.966 l
220.161 277.208 l
220.373 277.390 l
220.515 277.511 l
220.797 277.753 l
221.010 277.933 l
221.292 278.174 l
221.646 278.475 l
221.787 278.595 l
222.000 278.775 l
222.282 279.014 l
222.494 279.193 l
222.777 279.432 l
223.131 279.730 l
223.414 279.967 l
223.626 280.145 l
223.838 280.323 l
224.121 280.560 l
224.333 280.737 l
224.616 280.973 l
224.757 281.091 l
224.969 281.267 l
225.111 281.385 l
225.393 281.620 l
225.747 281.912 l
225.959 282.088 l
226.242 282.321 l
226.383 282.438 l
226.666 282.671 l
226.949 282.904 l
227.232 283.136 l
227.585 283.425 l
227.797 283.599 l
228.151 283.887 l
228.434 284.118 l
228.717 284.348 l
228.858 284.463 l
229.070 284.635 l
229.353 284.864 l
229.494 284.978 l
229.707 285.150 l
230.060 285.435 l
230.272 285.606 l
230.555 285.833 l
230.696 285.947 l
230.979 286.174 l
231.333 286.457 l
231.616 286.683 l
231.828 286.852 l
232.181 287.134 l
232.535 287.415 l
232.959 287.751 l
233.313 288.031 l
233.525 288.199 l
233.878 288.477 l
234.232 288.755 l
234.444 288.922 l
234.727 289.144 l
235.080 289.421 l
235.292 289.586 l
235.505 289.752 l
235.717 289.917 l
236.000 290.137 l
236.282 290.357 l
236.424 290.467 l
236.494 290.522 l
236.565 290.577 l
236.848 290.796 l
236.989 290.905 l
237.202 291.069 l
237.484 291.287 l
237.696 291.450 l
238.050 291.722 l
238.262 291.885 l
238.404 291.994 l
238.616 292.156 l
238.969 292.426 l
239.323 292.696 l
239.606 292.912 l
239.818 293.073 l
240.101 293.288 l
240.383 293.502 l
240.595 293.663 l
240.878 293.877 l
241.161 294.090 l
241.515 294.357 l
241.797 294.570 l
242.010 294.729 l
242.292 294.941 l
242.646 295.206 l
243.000 295.470 l
243.212 295.628 l
243.424 295.786 l
243.707 295.996 l
244.060 296.259 l
244.414 296.521 l
244.555 296.625 l
244.838 296.834 l
245.050 296.991 l
245.333 297.199 l
245.686 297.459 l
245.969 297.667 l
246.252 297.874 l
246.606 298.132 l
246.818 298.287 l
247.030 298.442 l
247.242 298.597 l
247.595 298.854 l
247.737 298.956 l
247.808 299.008 l
247.878 299.059 l
248.161 299.264 l
248.515 299.520 l
248.868 299.775 l
249.222 300.030 l
249.575 300.284 l
249.858 300.487 l
250.212 300.741 l
250.565 300.993 l
250.777 301.145 l
251.060 301.346 l
251.414 301.598 l
251.626 301.749 l
251.909 301.949 l
252.121 302.100 l
252.474 302.350 l
252.616 302.450 l
253.040 302.749 l
253.393 302.998 l
253.747 303.246 l
253.959 303.395 l
254.030 303.444 l
254.101 303.494 l
254.313 303.642 l
254.666 303.889 l
255.020 304.136 l
255.303 304.332 l
255.585 304.529 l
255.797 304.676 l
256.080 304.872 l
256.222 304.970 l
256.575 305.215 l
256.999 305.507 l
257.141 305.605 l
257.494 305.848 l
257.636 305.945 l
257.777 306.042 l
257.919 306.139 l
257.989 306.187 l
258.060 306.236 l
258.272 306.381 l
258.555 306.574 l
258.696 306.671 l
258.979 306.864 l
259.121 306.960 l
259.474 307.200 l
259.686 307.344 l
259.757 307.392 l
259.898 307.488 l
260.111 307.632 l
260.393 307.823 l
260.676 308.014 l
260.818 308.110 l
261.101 308.300 l
261.313 308.443 l
261.595 308.633 l
261.949 308.870 l
262.232 309.060 l
262.515 309.249 l
262.797 309.438 l
262.868 309.485 l
262.939 309.532 l
263.080 309.626 l
263.151 309.674 l
263.222 309.721 l
263.575 309.956 l
263.929 310.190 l
263.999 310.237 l
264.212 310.378 l
264.565 310.612 l
264.919 310.845 l
265.272 311.078 l
265.555 311.264 l
265.696 311.357 l
265.909 311.496 l
266.191 311.681 l
266.474 311.866 l
266.757 312.051 l
266.898 312.144 l
266.969 312.190 l
267.040 312.236 l
267.393 312.466 l
267.535 312.558 l
267.676 312.650 l
267.818 312.742 l
268.101 312.925 l
268.313 313.063 l
268.454 313.154 l
268.878 313.428 l
268.949 313.474 l
269.020 313.520 l
269.373 313.747 l
269.656 313.929 l
269.797 314.020 l
270.151 314.247 l
270.222 314.292 l
270.292 314.338 l
270.363 314.383 l
270.575 314.519 l
270.858 314.700 l
271.141 314.880 l
271.353 315.015 l
271.707 315.240 l
271.848 315.330 l
271.989 315.420 l
272.202 315.554 l
272.343 315.644 l
272.555 315.778 l
272.696 315.868 l
272.909 316.002 l
273.191 316.181 l
273.474 316.359 l
273.757 316.537 l
274.040 316.715 l
274.393 316.936 l
274.747 317.158 l
274.959 317.290 l
275.101 317.379 l
275.313 317.511 l
275.595 317.687 l
276.020 317.951 l
276.373 318.171 l
276.797 318.434 l
277.080 318.608 l
277.151 318.652 l
277.292 318.739 l
277.575 318.914 l
277.717 319.001 l
277.929 319.132 l
277.999 319.175 l
278.070 319.219 l
278.353 319.392 l
278.494 319.479 l
278.777 319.652 l
279.060 319.825 l
279.343 319.998 l
279.555 320.128 l
279.626 320.171 l
279.696 320.214 l
279.909 320.343 l
280.191 320.515 l
280.474 320.687 l
280.616 320.773 l
280.898 320.944 l
281.111 321.073 l
281.393 321.244 l
281.535 321.329 l
281.888 321.542 l
282.313 321.798 l
282.383 321.840 l
282.454 321.883 l
282.808 322.095 l
282.949 322.180 l
283.020 322.222 l
283.090 322.265 l
283.161 322.307 l
283.232 322.349 l
283.373 322.434 l
283.515 322.518 l
283.797 322.687 l
284.010 322.814 l
284.292 322.982 l
284.646 323.192 l
284.929 323.360 l
285.212 323.528 l
285.353 323.612 l
285.636 323.779 l
285.707 323.821 l
285.777 323.863 l
286.060 324.030 l
286.272 324.155 l
286.555 324.321 l
286.838 324.487 l
286.979 324.570 l
287.262 324.736 l
287.616 324.943 l
287.898 325.109 l
288.040 325.191 l
288.252 325.315 l
288.535 325.480 l
288.888 325.686 l
289.171 325.850 l
289.454 326.014 l
289.525 326.055 l
289.595 326.096 l
289.949 326.301 l
290.090 326.382 l
290.515 326.627 l
290.797 326.790 l
290.939 326.871 l
291.010 326.912 l
291.151 326.994 l
291.222 327.034 l
291.292 327.075 l
291.505 327.197 l
291.717 327.318 l
291.858 327.399 l
292.212 327.601 l
292.353 327.682 l
292.494 327.763 l
292.707 327.884 l
293.060 328.085 l
293.343 328.246 l
293.626 328.407 l
294.050 328.647 l
294.191 328.728 l
294.262 328.768 l
294.333 328.808 l
294.757 329.047 l
295.111 329.247 l
295.252 329.326 l
295.393 329.406 l
295.535 329.485 l
295.818 329.644 l
295.959 329.724 l
296.313 329.922 l
296.737 330.159 l
297.020 330.317 l
297.373 330.514 l
297.444 330.554 l
297.515 330.593 l
297.868 330.790 l
298.151 330.947 l
298.222 330.986 l
298.292 331.025 l
298.575 331.182 l
298.787 331.299 l
298.929 331.377 l
299.353 331.612 l
299.494 331.690 l
299.777 331.846 l
299.989 331.962 l
300.060 332.001 l
300.272 332.118 l
300.555 332.273 l
300.909 332.467 l
301.050 332.544 l
301.121 332.583 l
301.191 332.621 l
301.404 332.737 l
301.686 332.892 l
301.828 332.969 l
301.898 333.007 l
302.040 333.084 l
302.252 333.200 l
302.676 333.430 l
302.747 333.468 l
302.818 333.507 l
303.030 333.622 l
303.101 333.660 l
303.171 333.698 l
303.313 333.775 l
303.595 333.928 l
303.949 334.119 l
304.232 334.271 l
304.444 334.385 l
304.656 334.499 l
304.727 334.537 l
304.797 334.575 l
305.151 334.765 l
305.292 334.841 l
305.434 334.917 l
305.787 335.106 l
306.070 335.257 l
306.141 335.295 l
306.212 335.332 l
306.282 335.370 l
306.353 335.408 l
306.777 335.634 l
307.131 335.822 l
307.414 335.972 l
307.838 336.196 l
308.121 336.346 l
308.333 336.458 l
308.404 336.495 l
308.474 336.533 l
308.545 336.570 l
308.616 336.607 l
308.686 336.645 l
308.757 336.682 l
309.040 336.831 l
309.393 337.017 l
309.676 337.165 l
309.888 337.276 l
310.030 337.350 l
310.242 337.461 l
310.525 337.609 l
310.878 337.794 l
311.090 337.904 l
311.232 337.978 l
311.585 338.162 l
311.868 338.309 l
312.151 338.456 l
312.222 338.492 l
312.646 338.712 l
312.787 338.785 l
313.141 338.968 l
313.494 339.150 l
313.919 339.368 l
314.272 339.550 l
314.626 339.731 l
314.979 339.912 l
315.050 339.948 l
315.191 340.020 l
315.262 340.056 l
315.333 340.093 l
315.545 340.201 l
315.898 340.381 l
316.111 340.489 l
316.393 340.633 l
316.606 340.741 l
316.888 340.884 l
317.101 340.991 l
317.171 341.027 l
317.242 341.063 l
317.595 341.242 l
317.949 341.420 l
318.161 341.527 l
318.232 341.563 l
318.302 341.598 l
318.656 341.776 l
318.939 341.918 l
319.080 341.989 l
319.151 342.025 l
319.575 342.237 l
319.929 342.414 l
320.141 342.520 l
320.494 342.696 l
320.636 342.767 l
320.848 342.872 l
321.131 343.013 l
321.414 343.154 l
321.767 343.329 l
322.050 343.469 l
322.333 343.609 l
322.545 343.713 l
322.686 343.783 l
323.040 343.957 l
323.464 344.166 l
323.747 344.305 l
323.959 344.409 l
324.101 344.479 l
324.171 344.513 l
324.242 344.548 l
324.525 344.686 l
324.595 344.721 l
324.666 344.755 l
324.878 344.859 l
325.161 344.997 l
325.373 345.100 l
325.797 345.307 l
326.222 345.513 l
326.575 345.684 l
326.858 345.821 l
327.282 346.026 l
327.636 346.197 l
327.919 346.333 l
328.131 346.435 l
328.414 346.571 l
328.696 346.707 l
328.767 346.741 l
328.838 346.775 l
329.050 346.877 l
329.262 346.978 l
329.474 347.080 l
329.686 347.181 l
330.111 347.383 l
330.181 347.417 l
330.252 347.451 l
330.535 347.586 l
330.959 347.787 l
331.030 347.821 l
331.171 347.888 l
331.242 347.921 l
331.595 348.089 l
331.808 348.189 l
331.878 348.223 l
332.020 348.290 l
332.161 348.356 l
332.232 348.390 l
332.515 348.523 l
332.868 348.690 l
333.292 348.889 l
333.575 349.022 l
333.646 349.055 l
333.717 349.089 l
334.070 349.254 l
334.141 349.287 l
334.212 349.320 l
334.424 349.420 l
334.494 349.453 l
334.565 349.486 l
334.989 349.684 l
335.131 349.750 l
335.484 349.914 l
335.696 350.013 l
335.979 350.144 l
336.191 350.243 l
336.545 350.406 l
336.757 350.505 l
336.898 350.570 l
336.969 350.603 l
337.040 350.635 l
337.252 350.733 l
337.676 350.929 l
337.747 350.962 l
337.818 350.994 l
338.100 351.124 l
338.171 351.157 l
338.242 351.189 l
338.525 351.319 l
338.595 351.352 l
338.666 351.384 l
339.161 351.611 l
339.373 351.708 l
339.727 351.869 l
339.939 351.966 l
340.080 352.031 l
340.151 352.063 l
340.222 352.095 l
340.575 352.256 l
340.717 352.320 l
340.787 352.352 l
340.858 352.384 l
341.141 352.513 l
341.424 352.641 l
341.565 352.705 l
341.919 352.865 l
342.272 353.025 l
342.767 353.248 l
343.050 353.375 l
343.262 353.470 l
343.333 353.502 l
343.404 353.534 l
343.616 353.629 l
343.686 353.661 l
343.757 353.693 l
343.828 353.724 l
343.969 353.788 l
344.040 353.819 l
344.181 353.883 l
344.606 354.072 l
344.888 354.199 l
344.959 354.230 l
345.030 354.262 l
345.242 354.356 l
345.313 354.388 l
345.383 354.419 l
345.878 354.639 l
345.949 354.671 l
346.020 354.702 l
346.515 354.922 l
346.868 355.078 l
347.222 355.234 l
347.434 355.328 l
347.717 355.453 l
347.999 355.577 l
348.282 355.702 l
348.494 355.795 l
348.565 355.826 l
348.636 355.857 l
348.919 355.981 l
349.343 356.167 l
349.484 356.229 l
349.555 356.260 l
349.626 356.291 l
349.838 356.383 l
349.909 356.414 l
349.979 356.445 l
350.262 356.568 l
350.545 356.691 l
350.757 356.784 l
350.828 356.814 l
350.898 356.845 l
350.969 356.876 l
351.040 356.907 l
351.393 357.060 l
351.676 357.183 l
351.747 357.213 l
351.818 357.244 l
352.242 357.427 l
352.525 357.549 l
352.666 357.610 l
352.737 357.641 l
352.808 357.671 l
352.878 357.702 l
352.949 357.732 l
353.020 357.763 l
353.090 357.793 l
353.161 357.824 l
353.232 357.854 l
353.373 357.915 l
353.444 357.945 l
353.585 358.006 l
353.656 358.036 l
354.080 358.218 l
354.222 358.279 l
354.505 358.400 l
354.575 358.430 l
354.646 358.461 l
354.999 358.612 l
355.070 358.642 l
355.141 358.672 l
355.424 358.793 l
355.565 358.853 l
355.707 358.913 l
355.777 358.943 l
355.848 358.973 l
355.989 359.033 l
356.060 359.063 l
356.131 359.094 l
356.272 359.154 l
356.343 359.184 l
356.414 359.214 l
356.555 359.274 l
356.909 359.423 l
356.979 359.453 l
357.262 359.573 l
357.404 359.633 l
357.474 359.663 l
357.828 359.812 l
357.898 359.842 l
358.252 359.991 l
358.393 360.050 l
358.464 360.080 l
358.888 360.258 l
358.959 360.288 l
359.100 360.347 l
359.171 360.377 l
359.242 360.407 l
359.454 360.496 l
359.737 360.614 l
359.808 360.643 l
359.878 360.673 l
359.949 360.703 l
360.090 360.762 l
360.161 360.791 l
360.302 360.850 l
360.373 360.880 l
360.444 360.909 l
360.797 361.057 l
360.868 361.086 l
361.010 361.145 l
361.080 361.174 l
361.151 361.204 l
361.222 361.233 l
361.292 361.263 l
361.363 361.292 l
361.434 361.321 l
361.505 361.351 l
361.646 361.409 l
361.717 361.439 l
361.787 361.468 l
361.858 361.497 l
362.141 361.615 l
362.212 361.644 l
362.282 361.673 l
362.353 361.702 l
362.424 361.732 l
362.777 361.878 l
363.060 361.995 l
363.131 362.024 l
363.201 362.053 l
363.343 362.111 l
363.414 362.140 l
363.484 362.169 l
363.838 362.315 l
364.191 362.460 l
364.333 362.518 l
364.686 362.663 l
365.040 362.808 l
365.111 362.837 l
365.181 362.866 l
365.323 362.924 l
365.393 362.952 l
365.464 362.981 l
365.606 363.039 l
365.676 363.068 l
365.747 363.097 l
366.030 363.212 l
366.313 363.327 l
366.666 363.471 l
366.949 363.586 l
367.090 363.643 l
367.232 363.701 l
367.302 363.729 l
367.373 363.758 l
367.515 363.815 l
367.585 363.844 l
367.797 363.930 l
368.010 364.015 l
368.080 364.044 l
368.222 364.101 l
368.292 364.130 l
368.363 364.158 l
368.434 364.187 l
368.858 364.358 l
369.282 364.528 l
369.424 364.585 l
369.777 364.727 l
369.848 364.755 l
369.919 364.784 l
370.272 364.925 l
370.484 365.010 l
370.555 365.038 l
370.626 365.067 l
370.838 365.151 l
370.909 365.180 l
370.979 365.208 l
371.121 365.264 l
371.191 365.293 l
371.333 365.349 l
371.404 365.377 l
371.474 365.405 l
371.616 365.462 l
371.757 365.518 l
371.828 365.546 l
371.898 365.574 l
372.040 365.630 l
372.393 365.771 l
372.535 365.827 l
372.606 365.855 l
372.676 365.883 l
372.747 365.911 l
372.959 365.995 l
373.030 366.023 l
373.171 366.079 l
373.383 366.163 l
373.454 366.190 l
373.525 366.218 l
373.595 366.246 l
373.878 366.358 l
374.161 366.469 l
374.515 366.609 l
374.656 366.664 l
374.727 366.692 l
374.797 366.720 l
374.868 366.747 l
375.292 366.914 l
375.505 366.997 l
375.787 367.108 l
376.070 367.218 l
376.353 367.329 l
376.565 367.412 l
376.848 367.522 l
376.989 367.577 l
377.060 367.604 l
377.201 367.659 l
377.272 367.687 l
377.343 367.715 l
377.414 367.742 l
377.484 367.769 l
377.767 367.879 l
377.838 367.907 l
377.909 367.934 l
378.262 368.071 l
378.333 368.099 l
378.404 368.126 l
378.474 368.153 l
378.757 368.263 l
378.828 368.290 l
378.898 368.317 l
378.969 368.345 l
379.040 368.372 l
379.111 368.399 l
379.181 368.427 l
379.252 368.454 l
379.323 368.481 l
379.393 368.508 l
379.464 368.536 l
379.818 368.672 l
380.030 368.753 l
380.100 368.781 l
380.171 368.808 l
380.383 368.889 l
380.454 368.916 l
380.525 368.944 l
380.595 368.971 l
380.666 368.998 l
381.020 369.133 l
381.161 369.187 l
381.232 369.214 l
381.373 369.269 l
381.444 369.296 l
381.515 369.323 l
381.585 369.350 l
381.656 369.377 l
381.797 369.431 l
382.010 369.512 l
382.080 369.539 l
382.151 369.566 l
382.434 369.673 l
382.717 369.781 l
382.787 369.808 l
382.858 369.835 l
382.929 369.862 l
382.999 369.888 l
383.141 369.942 l
383.212 369.969 l
383.282 369.996 l
383.353 370.023 l
383.424 370.050 l
383.494 370.076 l
383.565 370.103 l
383.707 370.157 l
383.777 370.184 l
383.848 370.210 l
384.343 370.398 l
384.555 370.478 l
384.626 370.504 l
384.696 370.531 l
384.767 370.558 l
385.050 370.664 l
385.121 370.691 l
385.262 370.744 l
385.404 370.797 l
385.474 370.824 l
385.757 370.930 l
386.040 371.037 l
386.181 371.090 l
386.252 371.116 l
386.393 371.169 l
386.464 371.196 l
386.535 371.222 l
386.747 371.302 l
386.818 371.328 l
386.959 371.381 l
387.171 371.460 l
387.525 371.592 l
387.737 371.671 l
387.808 371.698 l
387.878 371.724 l
388.020 371.777 l
388.232 371.856 l
388.302 371.882 l
388.373 371.908 l
388.444 371.935 l
388.797 372.066 l
389.151 372.197 l
389.222 372.223 l
389.292 372.249 l
389.363 372.276 l
389.434 372.302 l
389.575 372.354 l
389.646 372.380 l
390.141 372.563 l
390.424 372.668 l
390.989 372.876 l
391.272 372.980 l
391.484 373.058 l
391.555 373.084 l
391.696 373.136 l
391.767 373.162 l
391.838 373.188 l
391.909 373.214 l
392.191 373.317 l
392.474 373.421 l
392.545 373.447 l
392.616 373.472 l
393.040 373.627 l
393.111 373.653 l
393.181 373.679 l
393.252 373.705 l
393.323 373.731 l
393.464 373.782 l
393.606 373.834 l
393.676 373.859 l
393.747 373.885 l
393.959 373.962 l
394.313 374.091 l
394.666 374.219 l
394.878 374.296 l
395.161 374.398 l
395.302 374.450 l
395.373 374.475 l
395.444 374.501 l
395.515 374.526 l
396.151 374.756 l
396.363 374.832 l
396.434 374.858 l
396.504 374.883 l
396.575 374.909 l
396.787 374.985 l
396.858 375.011 l
396.929 375.036 l
396.999 375.061 l
397.070 375.087 l
397.282 375.163 l
397.424 375.214 l
397.494 375.239 l
397.848 375.366 l
397.919 375.391 l
397.989 375.416 l
398.201 375.492 l
398.272 375.518 l
398.484 375.593 l
398.555 375.619 l
398.626 375.644 l
398.838 375.720 l
398.909 375.745 l
398.979 375.770 l
399.050 375.795 l
399.121 375.821 l
399.191 375.846 l
399.545 375.972 l
399.686 376.022 l
399.757 376.047 l
399.828 376.072 l
400.111 376.173 l
400.181 376.198 l
400.252 376.223 l
400.676 376.373 l
400.747 376.398 l
400.818 376.423 l
400.959 376.473 l
401.030 376.498 l
401.100 376.523 l
401.383 376.623 l
401.666 376.723 l
402.020 376.848 l
402.232 376.923 l
402.302 376.947 l
402.373 376.972 l
402.656 377.072 l
402.939 377.171 l
403.222 377.270 l
403.292 377.295 l
403.363 377.320 l
403.504 377.370 l
403.575 377.394 l
403.646 377.419 l
404.141 377.592 l
404.282 377.642 l
404.353 377.666 l
404.494 377.716 l
404.919 377.864 l
405.060 377.913 l
405.131 377.938 l
405.201 377.962 l
405.272 377.987 l
405.343 378.011 l
405.626 378.110 l
405.767 378.159 l
405.909 378.208 l
405.979 378.232 l
406.050 378.257 l
406.121 378.282 l
406.191 378.306 l
406.474 378.404 l
406.828 378.526 l
407.111 378.624 l
407.464 378.746 l
407.747 378.844 l
408.100 378.966 l
408.242 379.014 l
408.313 379.039 l
408.383 379.063 l
408.737 379.184 l
408.808 379.209 l
408.878 379.233 l
408.949 379.257 l
409.232 379.354 l
409.727 379.524 l
409.868 379.572 l
409.939 379.596 l
410.010 379.620 l
410.151 379.669 l
410.292 379.717 l
410.363 379.741 l
410.434 379.765 l
410.717 379.862 l
410.787 379.886 l
410.858 379.910 l
411.141 380.006 l
411.282 380.054 l
411.353 380.078 l
411.494 380.126 l
411.777 380.222 l
411.989 380.294 l
412.060 380.318 l
412.201 380.366 l
412.272 380.390 l
412.414 380.438 l
412.767 380.558 l
413.050 380.653 l
413.474 380.796 l
413.757 380.892 l
414.040 380.987 l
414.111 381.011 l
414.393 381.106 l
414.888 381.272 l
415.100 381.343 l
415.525 381.485 l
415.595 381.509 l
415.666 381.533 l
415.737 381.556 l
415.808 381.580 l
416.161 381.698 l
416.444 381.792 l
416.515 381.816 l
416.585 381.840 l
416.868 381.934 l
417.151 382.028 l
417.222 382.051 l
417.292 382.075 l
417.434 382.122 l
417.504 382.145 l
417.575 382.169 l
417.787 382.239 l
417.858 382.263 l
417.929 382.286 l
418.141 382.356 l
418.212 382.380 l
418.282 382.403 l
418.565 382.497 l
418.919 382.614 l
419.201 382.707 l
419.343 382.754 l
419.414 382.777 l
419.484 382.800 l
419.555 382.824 l
419.626 382.847 l
419.767 382.894 l
419.838 382.917 l
419.909 382.940 l
419.979 382.964 l
420.262 383.057 l
420.333 383.080 l
420.404 383.103 l
420.616 383.173 l
420.686 383.196 l
420.757 383.219 l
420.898 383.265 l
420.969 383.289 l
421.040 383.312 l
421.323 383.404 l
421.393 383.428 l
421.464 383.451 l
421.676 383.520 l
421.818 383.566 l
422.100 383.659 l
422.525 383.797 l
422.666 383.843 l
422.737 383.866 l
422.808 383.889 l
423.161 384.004 l
423.444 384.096 l
423.939 384.257 l
424.080 384.303 l
424.151 384.326 l
424.292 384.371 l
424.504 384.440 l
424.575 384.463 l
424.646 384.486 l
424.858 384.554 l
424.929 384.577 l
424.999 384.600 l
425.212 384.669 l
425.282 384.691 l
425.353 384.714 l
425.636 384.805 l
426.060 384.942 l
426.414 385.056 l
426.767 385.169 l
426.979 385.237 l
427.050 385.260 l
427.121 385.283 l
427.191 385.305 l
427.404 385.373 l
427.474 385.396 l
427.545 385.418 l
427.828 385.509 l
428.323 385.667 l
428.535 385.735 l
428.959 385.870 l
429.171 385.937 l
429.242 385.960 l
429.313 385.982 l
429.383 386.005 l
429.454 386.027 l
429.666 386.094 l
429.737 386.117 l
429.808 386.139 l
429.949 386.184 l
430.020 386.207 l
430.090 386.229 l
430.161 386.251 l
430.232 386.274 l
430.302 386.296 l
430.373 386.319 l
430.444 386.341 l
430.868 386.475 l
431.151 386.565 l
431.292 386.609 l
431.363 386.632 l
431.434 386.654 l
431.575 386.698 l
431.929 386.810 l
432.282 386.921 l
432.424 386.966 l
432.494 386.988 l
432.565 387.010 l
432.636 387.032 l
432.707 387.054 l
432.777 387.077 l
433.060 387.165 l
433.484 387.298 l
433.767 387.387 l
433.838 387.409 l
433.909 387.431 l
434.121 387.497 l
434.262 387.541 l
434.333 387.563 l
434.474 387.608 l
434.545 387.630 l
434.686 387.674 l
434.898 387.740 l
434.969 387.762 l
435.040 387.784 l
435.181 387.828 l
435.252 387.850 l
435.393 387.894 l
435.676 387.982 l
435.818 388.026 l
435.888 388.048 l
436.100 388.113 l
436.595 388.267 l
436.808 388.332 l
436.949 388.376 l
437.020 388.398 l
437.090 388.420 l
437.161 388.442 l
437.302 388.485 l
437.585 388.573 l
437.656 388.594 l
437.727 388.616 l
437.939 388.682 l
438.010 388.703 l
438.080 388.725 l
438.363 388.812 l
438.504 388.856 l
438.575 388.877 l
438.717 388.921 l
438.787 388.943 l
438.858 388.964 l
439.282 389.094 l
439.494 389.159 l
439.565 389.181 l
439.636 389.203 l
439.777 389.246 l
439.919 389.289 l
440.343 389.419 l
440.484 389.462 l
440.555 389.484 l
440.626 389.505 l
440.696 389.527 l
440.767 389.548 l
440.838 389.570 l
440.909 389.592 l
441.121 389.656 l
441.191 389.678 l
441.262 389.699 l
441.545 389.785 l
441.969 389.914 l
442.252 390.000 l
442.323 390.021 l
442.393 390.043 l
442.747 390.150 l
443.100 390.257 l
443.171 390.278 l
443.242 390.300 l
443.454 390.364 l
443.525 390.385 l
443.666 390.428 l
443.878 390.492 l
443.949 390.513 l
444.020 390.534 l
444.302 390.620 l
444.373 390.641 l
444.444 390.662 l
444.585 390.705 l
444.656 390.726 l
444.797 390.769 l
445.080 390.853 l
445.151 390.875 l
445.222 390.896 l
445.646 391.023 l
445.858 391.087 l
445.929 391.108 l
445.999 391.129 l
446.353 391.235 l
446.848 391.383 l
447.131 391.467 l
447.201 391.488 l
447.272 391.509 l
447.555 391.593 l
447.696 391.635 l
447.767 391.656 l
447.838 391.677 l
447.979 391.719 l
448.050 391.740 l
448.121 391.761 l
448.262 391.803 l
448.333 391.824 l
448.474 391.866 l
448.686 391.929 l
448.757 391.950 l
448.969 392.013 l
449.040 392.034 l
449.111 392.055 l
449.181 392.076 l
449.252 392.097 l
449.676 392.222 l
450.030 392.327 l
450.454 392.452 l
450.595 392.493 l
450.949 392.597 l
451.232 392.681 l
451.373 392.722 l
451.444 392.743 l
451.585 392.784 l
451.656 392.805 l
451.797 392.847 l
451.868 392.867 l
451.939 392.888 l
452.080 392.929 l
452.222 392.971 l
452.292 392.992 l
452.434 393.033 l
452.505 393.054 l
452.575 393.074 l
452.717 393.116 l
452.787 393.136 l
452.858 393.157 l
452.999 393.198 l
453.353 393.301 l
453.424 393.322 l
453.494 393.343 l
453.707 393.404 l
453.777 393.425 l
453.919 393.466 l
454.131 393.528 l
454.201 393.548 l
454.272 393.569 l
454.626 393.672 l
454.696 393.692 l
454.767 393.713 l
454.979 393.774 l
455.050 393.795 l
455.191 393.836 l
455.333 393.877 l
455.403 393.897 l
455.545 393.938 l
455.757 393.999 l
455.969 394.061 l
456.323 394.163 l
456.393 394.183 l
456.464 394.204 l
456.747 394.285 l
456.888 394.326 l
456.959 394.346 l
457.100 394.387 l
457.171 394.407 l
457.313 394.448 l
457.595 394.529 l
457.666 394.550 l
457.737 394.570 l
458.020 394.651 l
458.090 394.671 l
458.161 394.692 l
458.515 394.793 l
458.656 394.833 l
458.727 394.854 l
458.797 394.874 l
458.939 394.914 l
459.080 394.955 l
459.151 394.975 l
459.292 395.015 l
459.363 395.036 l
459.434 395.056 l
459.575 395.096 l
459.646 395.116 l
459.717 395.137 l
459.858 395.177 l
460.282 395.298 l
460.707 395.418 l
461.131 395.539 l
461.272 395.579 l
461.343 395.599 l
461.626 395.679 l
461.979 395.779 l
462.050 395.799 l
462.121 395.819 l
462.403 395.899 l
462.474 395.919 l
462.545 395.939 l
462.828 396.019 l
462.898 396.039 l
463.040 396.079 l
463.111 396.099 l
463.181 396.119 l
463.252 396.139 l
463.464 396.198 l
463.818 396.298 l
464.242 396.417 l
464.666 396.536 l
464.737 396.556 l
464.808 396.576 l
465.090 396.655 l
465.161 396.675 l
465.232 396.695 l
465.585 396.793 l
466.010 396.912 l
466.151 396.951 l
466.222 396.971 l
466.363 397.011 l
466.434 397.030 l
466.575 397.070 l
466.858 397.148 l
466.929 397.168 l
466.999 397.188 l
467.070 397.207 l
467.141 397.227 l
467.212 397.247 l
467.282 397.266 l
467.424 397.306 l
467.848 397.423 l
467.919 397.443 l
467.989 397.463 l
468.201 397.521 l
468.272 397.541 l
468.343 397.560 l
468.484 397.600 l
468.767 397.678 l
468.838 397.697 l
468.909 397.717 l
469.050 397.756 l
469.121 397.776 l
469.191 397.795 l
469.262 397.815 l
469.333 397.834 l
469.686 397.932 l
469.828 397.971 l
469.898 397.990 l
469.969 398.009 l
470.040 398.029 l
470.181 398.068 l
470.535 398.165 l
470.605 398.184 l
470.676 398.204 l
470.747 398.223 l
470.818 398.243 l
470.888 398.262 l
470.959 398.282 l
471.030 398.301 l
471.100 398.320 l
471.171 398.340 l
471.525 398.437 l
471.595 398.456 l
471.666 398.475 l
471.878 398.533 l
471.949 398.553 l
472.020 398.572 l
472.090 398.591 l
472.161 398.611 l
472.232 398.630 l
472.302 398.649 l
472.373 398.669 l
472.444 398.688 l
472.515 398.707 l
472.585 398.727 l
472.868 398.804 l
472.939 398.823 l
473.010 398.842 l
473.363 398.939 l
473.504 398.977 l
473.575 398.996 l
473.717 399.035 l
473.787 399.054 l
473.929 399.092 l
474.353 399.208 l
474.777 399.323 l
474.848 399.342 l
474.919 399.361 l
475.201 399.437 l
475.272 399.456 l
475.343 399.476 l
475.555 399.533 l
475.767 399.590 l
475.909 399.628 l
475.979 399.647 l
476.050 399.667 l
476.191 399.705 l
476.262 399.724 l
476.333 399.743 l
476.686 399.838 l
476.757 399.857 l
476.828 399.876 l
477.111 399.952 l
477.181 399.971 l
477.252 399.990 l
477.464 400.047 l
477.605 400.085 l
477.676 400.104 l
477.747 400.123 l
478.171 400.237 l
478.595 400.350 l
478.737 400.388 l
478.808 400.407 l
478.949 400.445 l
479.020 400.464 l
479.161 400.501 l
479.373 400.558 l
479.585 400.614 l
479.727 400.652 l
479.797 400.671 l
479.939 400.709 l
480.010 400.727 l
480.080 400.746 l
480.151 400.765 l
480.222 400.784 l
480.434 400.840 l
480.504 400.859 l
480.575 400.878 l
480.646 400.897 l
480.717 400.915 l
480.929 400.972 l
480.999 400.990 l
481.070 401.009 l
481.141 401.028 l
481.212 401.047 l
481.353 401.084 l
481.424 401.103 l
481.565 401.140 l
481.707 401.178 l
481.777 401.197 l
481.848 401.215 l
482.060 401.271 l
482.272 401.327 l
482.343 401.346 l
482.414 401.365 l
482.484 401.383 l
482.555 401.402 l
482.626 401.421 l
482.909 401.495 l
482.979 401.514 l
483.050 401.533 l
483.121 401.551 l
483.262 401.588 l
483.333 401.607 l
483.403 401.626 l
483.474 401.644 l
483.545 401.663 l
483.616 401.681 l
483.969 401.774 l
484.040 401.793 l
484.111 401.812 l
484.393 401.886 l
484.464 401.904 l
484.535 401.923 l
484.605 401.941 l
484.676 401.960 l
484.747 401.978 l
484.818 401.997 l
484.888 402.015 l
485.030 402.053 l
485.454 402.163 l
485.595 402.200 l
485.666 402.219 l
485.949 402.293 l
486.090 402.330 l
486.161 402.348 l
486.302 402.385 l
486.373 402.403 l
486.444 402.422 l
486.515 402.440 l
486.656 402.477 l
486.727 402.495 l
486.797 402.514 l
486.939 402.551 l
487.010 402.569 l
487.151 402.606 l
487.292 402.643 l
487.363 402.661 l
487.504 402.698 l
487.717 402.753 l
487.787 402.771 l
487.858 402.789 l
487.999 402.826 l
488.141 402.863 l
488.212 402.881 l
488.565 402.973 l
488.919 403.064 l
488.989 403.082 l
489.060 403.100 l
489.555 403.228 l
489.979 403.338 l
490.050 403.356 l
490.121 403.374 l
490.474 403.465 l
490.545 403.483 l
490.616 403.501 l
490.757 403.538 l
490.828 403.556 l
490.898 403.574 l
491.040 403.610 l
491.181 403.646 l
491.252 403.665 l
491.393 403.701 l
491.464 403.719 l
491.605 403.755 l
491.747 403.791 l
491.818 403.809 l
491.888 403.828 l
492.030 403.864 l
492.100 403.882 l
492.242 403.918 l
492.525 403.990 l
492.595 404.008 l
492.666 404.026 l
492.808 404.062 l
492.878 404.080 l
492.949 404.098 l
493.090 404.135 l
493.161 404.153 l
493.232 404.171 l
493.585 404.261 l
493.656 404.279 l
493.727 404.297 l
494.010 404.369 l
494.080 404.386 l
494.151 404.404 l
494.222 404.422 l
494.646 404.530 l
494.787 404.566 l
494.858 404.584 l
495.070 404.638 l
495.141 404.655 l
495.212 404.673 l
495.282 404.691 l
495.424 404.727 l
495.565 404.763 l
495.636 404.781 l
495.777 404.816 l
496.201 404.924 l
496.272 404.941 l
496.343 404.959 l
496.696 405.048 l
496.767 405.066 l
496.838 405.084 l
496.979 405.120 l
497.050 405.137 l
497.121 405.155 l
497.403 405.226 l
497.757 405.315 l
497.828 405.333 l
497.898 405.351 l
498.040 405.386 l
498.111 405.404 l
498.181 405.421 l
498.323 405.457 l
498.393 405.475 l
498.464 405.492 l
498.605 405.528 l
498.676 405.546 l
498.747 405.563 l
498.818 405.581 l
498.888 405.599 l
499.030 405.634 l
499.171 405.669 l
499.313 405.705 l
499.383 405.722 l
499.454 405.740 l
499.525 405.758 l
499.595 405.775 l
499.808 405.828 l
499.878 405.846 l
499.949 405.863 l
500.020 405.881 l
500.090 405.899 l
500.373 405.969 l
500.444 405.987 l
500.585 406.022 l
500.939 406.110 l
501.010 406.127 l
501.222 406.180 l
501.363 406.215 l
501.434 406.233 l
501.575 406.268 l
501.646 406.285 l
501.717 406.303 l
501.999 406.373 l
502.070 406.390 l
502.212 406.425 l
502.565 406.513 l
502.636 406.530 l
502.706 406.548 l
502.919 406.600 l
502.989 406.618 l
503.060 406.635 l
503.201 406.670 l
503.343 406.705 l
503.414 406.722 l
503.696 406.792 l
503.838 406.827 l
503.909 406.844 l
504.191 406.914 l
504.262 406.931 l
504.474 406.983 l
504.686 407.035 l
504.757 407.053 l
504.898 407.087 l
505.393 407.209 l
505.535 407.243 l
505.606 407.261 l
505.747 407.295 l
505.818 407.313 l
505.959 407.347 l
506.525 407.485 l
506.666 407.520 l
506.737 407.537 l
506.808 407.554 l
506.878 407.572 l
506.949 407.589 l
507.090 407.623 l
507.585 407.744 l
507.727 407.778 l
507.797 407.795 l
508.080 407.864 l
508.151 407.881 l
508.222 407.898 l
508.363 407.933 l
508.434 407.950 l
508.504 407.967 l
508.575 407.984 l
508.717 408.019 l
508.787 408.036 l
508.858 408.053 l
509.141 408.121 l
509.212 408.138 l
509.353 408.173 l
509.777 408.275 l
509.848 408.292 l
509.919 408.309 l
509.989 408.326 l
510.060 408.343 l
510.131 408.360 l
510.201 408.378 l
510.272 408.395 l
510.414 408.429 l
510.626 408.480 l
510.696 408.497 l
510.767 408.514 l
510.838 408.531 l
510.979 408.565 l
511.121 408.599 l
511.191 408.616 l
511.403 408.667 l
511.474 408.684 l
511.545 408.701 l
511.616 408.718 l
511.686 408.735 l
512.040 408.820 l
512.181 408.854 l
512.606 408.955 l
512.676 408.972 l
512.818 409.006 l
513.100 409.074 l
513.171 409.091 l
513.242 409.107 l
513.313 409.124 l
513.383 409.141 l
513.808 409.242 l
514.090 409.310 l
514.161 409.327 l
514.232 409.344 l
514.302 409.360 l
514.444 409.394 l
514.656 409.445 l
514.727 409.461 l
514.939 409.512 l
515.010 409.529 l
515.080 409.545 l
515.504 409.646 l
515.646 409.680 l
515.717 409.696 l
515.999 409.763 l
516.353 409.847 l
516.636 409.914 l
516.777 409.947 l
516.848 409.964 l
516.919 409.981 l
516.989 409.998 l
517.201 410.048 l
517.272 410.064 l
517.767 410.181 l
517.838 410.198 l
517.979 410.231 l
518.403 410.331 l
518.616 410.381 l
518.828 410.430 l
518.898 410.447 l
518.969 410.464 l
519.040 410.480 l
519.111 410.497 l
519.181 410.513 l
519.252 410.530 l
519.323 410.546 l
519.393 410.563 l
519.464 410.580 l
519.535 410.596 l
519.676 410.629 l
520.242 410.762 l
520.454 410.811 l
520.525 410.828 l
520.595 410.844 l
520.878 410.910 l
520.949 410.927 l
521.020 410.943 l
521.090 410.960 l
521.302 411.009 l
521.373 411.025 l
521.444 411.042 l
521.656 411.091 l
521.797 411.124 l
521.868 411.141 l
521.939 411.157 l
522.080 411.190 l
522.151 411.206 l
522.504 411.289 l
522.575 411.305 l
522.717 411.338 l
523.141 411.436 l
523.282 411.469 l
523.353 411.485 l
523.424 411.502 l
523.494 411.518 l
523.565 411.534 l
523.706 411.567 l
523.777 411.583 l
523.919 411.616 l
524.343 411.714 l
524.414 411.730 l
524.484 411.747 l
524.626 411.779 l
524.696 411.796 l
524.767 411.812 l
524.908 411.844 l
524.979 411.861 l
525.121 411.893 l
525.545 411.991 l
525.616 412.007 l
525.686 412.023 l
525.757 412.040 l
525.828 412.056 l
525.898 412.072 l
525.969 412.088 l
526.040 412.104 l
526.181 412.137 l
526.252 412.153 l
526.323 412.169 l
526.464 412.202 l
526.535 412.218 l
526.606 412.234 l
526.747 412.267 l
526.818 412.283 l
526.959 412.315 l
527.383 412.412 l
527.525 412.445 l
527.595 412.461 l
527.949 412.541 l
528.020 412.558 l
528.161 412.590 l
528.232 412.606 l
528.585 412.687 l
528.656 412.703 l
528.727 412.719 l
528.868 412.751 l
528.939 412.767 l
529.080 412.799 l
529.151 412.815 l
529.292 412.847 l
529.363 412.863 l
529.434 412.880 l
529.787 412.960 l
529.858 412.976 l
529.929 412.992 l
529.999 413.008 l
530.424 413.104 l
530.494 413.120 l
530.636 413.152 l
531.060 413.248 l
531.131 413.264 l
531.201 413.280 l
531.272 413.296 l
531.343 413.312 l
531.626 413.376 l
531.696 413.392 l
531.767 413.408 l
531.838 413.424 l
531.908 413.440 l
532.333 413.535 l
532.474 413.567 l
532.545 413.583 l
532.969 413.678 l
533.040 413.694 l
533.111 413.710 l
533.181 413.726 l
533.252 413.742 l
533.393 413.774 l
533.464 413.789 l
533.606 413.821 l
533.676 413.837 l
533.747 413.853 l
533.888 413.884 l
533.959 413.900 l
534.030 413.916 l
534.100 413.932 l
534.171 413.948 l
534.313 413.980 l
534.949 414.122 l
535.020 414.138 l
535.090 414.153 l
535.232 414.185 l
535.302 414.201 l
535.373 414.216 l
535.515 414.248 l
535.585 414.264 l
535.656 414.280 l
535.727 414.295 l
535.797 414.311 l
535.939 414.343 l
536.010 414.358 l
536.151 414.390 l
536.222 414.405 l
536.292 414.421 l
536.434 414.453 l
536.504 414.468 l
536.575 414.484 l
536.787 414.531 l
536.858 414.547 l
536.929 414.563 l
537.141 414.610 l
537.212 414.625 l
537.424 414.672 l
537.565 414.704 l
537.636 414.719 l
538.060 414.813 l
538.201 414.845 l
538.272 414.860 l
538.414 414.892 l
538.484 414.907 l
538.555 414.923 l
538.626 414.938 l
538.767 414.970 l
538.838 414.985 l
539.050 415.032 l
539.121 415.048 l
539.191 415.063 l
539.262 415.079 l
539.403 415.110 l
539.545 415.141 l
539.616 415.157 l
539.898 415.219 l
539.969 415.235 l
540.111 415.266 l
540.252 415.297 l
540.323 415.312 l
540.393 415.328 l
540.464 415.343 l
540.535 415.359 l
540.676 415.390 l
540.747 415.405 l
541.030 415.467 l
541.242 415.514 l
541.313 415.529 l
541.454 415.560 l
541.878 415.653 l
541.949 415.669 l
542.090 415.700 l
542.585 415.808 l
542.656 415.823 l
542.727 415.839 l
542.939 415.885 l
543.010 415.900 l
543.080 415.916 l
543.151 415.931 l
543.222 415.947 l
543.292 415.962 l
543.363 415.977 l
543.434 415.993 l
543.929 416.100 l
543.999 416.116 l
544.070 416.131 l
544.282 416.177 l
544.353 416.193 l
544.424 416.208 l
544.565 416.239 l
544.636 416.254 l
544.777 416.285 l
545.201 416.377 l
545.343 416.407 l
545.414 416.422 l
545.555 416.453 l
545.626 416.468 l
545.767 416.499 l
545.838 416.514 l
545.979 416.545 l
546.050 416.560 l
546.121 416.575 l
546.474 416.652 l
546.545 416.667 l
546.686 416.697 l
546.828 416.728 l
546.898 416.743 l
546.969 416.758 l
547.040 416.773 l
547.111 416.789 l
547.181 416.804 l
547.323 416.834 l
547.464 416.865 l
547.747 416.926 l
547.818 416.941 l
547.888 416.956 l
547.959 416.971 l
548.030 416.986 l
548.100 417.002 l
548.242 417.032 l
548.313 417.047 l
548.383 417.062 l
548.595 417.108 l
548.666 417.123 l
548.737 417.138 l
548.808 417.153 l
548.878 417.168 l
549.090 417.214 l
549.161 417.229 l
549.373 417.274 l
549.515 417.304 l
549.585 417.320 l
549.656 417.335 l
549.727 417.350 l
549.797 417.365 l
549.939 417.395 l
550.010 417.410 l
550.151 417.440 l
550.575 417.531 l
550.646 417.546 l
550.717 417.561 l
550.787 417.576 l
550.858 417.591 l
551.212 417.666 l
551.282 417.681 l
551.353 417.696 l
551.424 417.711 l
551.494 417.726 l
551.636 417.756 l
551.706 417.771 l
551.848 417.801 l
551.919 417.816 l
551.989 417.831 l
552.060 417.846 l
552.201 417.877 l
552.555 417.951 l
552.626 417.966 l
552.696 417.981 l
552.767 417.996 l
552.979 418.041 l
553.333 418.116 l
553.474 418.146 l
553.545 418.161 l
553.686 418.191 l
553.757 418.206 l
553.828 418.220 l
553.898 418.235 l
553.969 418.250 l
554.111 418.280 l
554.181 418.295 l
554.252 418.310 l
554.676 418.399 l
554.818 418.429 l
554.888 418.444 l
555.030 418.474 l
555.100 418.489 l
555.171 418.503 l
555.242 418.518 l
555.313 418.533 l
555.454 418.563 l
555.525 418.578 l
555.595 418.593 l
555.666 418.607 l
555.737 418.622 l
556.020 418.682 l
556.090 418.696 l
556.161 418.711 l
556.232 418.726 l
556.302 418.741 l
556.444 418.770 l
556.515 418.785 l
556.585 418.800 l
556.656 418.815 l
556.727 418.830 l
556.797 418.844 l
556.868 418.859 l
557.080 418.904 l
557.151 418.918 l
557.363 418.963 l
557.434 418.977 l
557.575 419.007 l
557.646 419.022 l
557.717 419.037 l
557.858 419.066 l
557.929 419.081 l
557.999 419.095 l
558.070 419.110 l
558.141 419.125 l
558.282 419.154 l
558.353 419.169 l
558.424 419.184 l
558.494 419.199 l
558.565 419.213 l
558.636 419.228 l
558.706 419.243 l
558.848 419.272 l
558.919 419.287 l
558.989 419.302 l
559.131 419.331 l
559.626 419.434 l
559.696 419.448 l
559.767 419.463 l
559.908 419.492 l
559.979 419.507 l
560.262 419.566 l
560.333 419.580 l
560.474 419.610 l
560.545 419.624 l
560.828 419.683 l
560.969 419.712 l
561.040 419.726 l
561.181 419.756 l
561.323 419.785 l
561.393 419.800 l
561.606 419.843 l
561.676 419.858 l
561.888 419.902 l
562.030 419.931 l
562.100 419.945 l
562.383 420.004 l
562.454 420.018 l
562.525 420.033 l
562.666 420.062 l
562.737 420.076 l
563.161 420.163 l
563.232 420.178 l
563.373 420.207 l
563.515 420.236 l
563.585 420.250 l
563.727 420.279 l
563.797 420.294 l
564.009 420.337 l
564.080 420.352 l
564.151 420.366 l
564.717 420.482 l
564.858 420.511 l
564.929 420.525 l
565.353 420.612 l
565.424 420.626 l
565.494 420.641 l
565.565 420.655 l
565.636 420.670 l
565.707 420.684 l
565.777 420.699 l
566.131 420.771 l
566.201 420.785 l
566.272 420.799 l
566.343 420.814 l
566.414 420.828 l
566.484 420.842 l
566.555 420.857 l
566.696 420.886 l
566.767 420.900 l
566.909 420.929 l
566.979 420.943 l
567.050 420.957 l
567.121 420.972 l
567.191 420.986 l
567.403 421.029 l
567.474 421.043 l
567.616 421.072 l
567.686 421.086 l
567.757 421.101 l
567.898 421.129 l
567.969 421.144 l
568.464 421.244 l
569.100 421.372 l
569.171 421.387 l
569.242 421.401 l
569.313 421.415 l
569.383 421.430 l
569.454 421.444 l
569.525 421.458 l
569.595 421.472 l
569.666 421.487 l
569.737 421.501 l
569.878 421.529 l
570.020 421.558 l
570.090 421.572 l
570.515 421.657 l
570.585 421.671 l
570.656 421.686 l
570.797 421.714 l
570.868 421.728 l
571.292 421.813 l
571.363 421.828 l
571.434 421.842 l
571.504 421.856 l
571.575 421.870 l
571.929 421.941 l
571.999 421.955 l
572.282 422.012 l
572.707 422.096 l
572.777 422.111 l
572.919 422.139 l
573.131 422.181 l
573.201 422.195 l
573.343 422.223 l
573.414 422.238 l
573.626 422.280 l
573.696 422.294 l
573.767 422.308 l
574.262 422.406 l
574.333 422.421 l
574.474 422.449 l
575.111 422.575 l
575.252 422.603 l
575.323 422.617 l
575.818 422.715 l
575.888 422.729 l
575.959 422.743 l
576.030 422.757 l
576.100 422.771 l
576.454 422.841 l
576.525 422.855 l
576.737 422.897 l
577.020 422.953 l
577.090 422.967 l
577.161 422.981 l
577.444 423.036 l
577.656 423.078 l
577.727 423.092 l
578.009 423.148 l
578.080 423.162 l
578.222 423.189 l
578.363 423.217 l
578.434 423.231 l
578.858 423.314 l
578.999 423.342 l
579.070 423.356 l
579.141 423.370 l
579.636 423.467 l
579.707 423.481 l
579.777 423.495 l
579.848 423.508 l
579.919 423.522 l
580.343 423.605 l
580.414 423.619 l
580.555 423.647 l
580.696 423.674 l
580.767 423.688 l
581.050 423.743 l
581.121 423.757 l
581.191 423.771 l
581.333 423.798 l
581.474 423.826 l
581.545 423.840 l
581.969 423.922 l
582.040 423.936 l
582.111 423.950 l
582.181 423.963 l
582.252 423.977 l
582.747 424.073 l
582.818 424.087 l
582.888 424.101 l
582.959 424.114 l
583.030 424.128 l
583.595 424.238 l
583.737 424.265 l
583.807 424.279 l
583.878 424.293 l
583.949 424.306 l
584.090 424.334 l
584.161 424.347 l
584.232 424.361 l
584.302 424.375 l
584.373 424.388 l
584.444 424.402 l
584.515 424.416 l
584.656 424.443 l
584.727 424.457 l
584.868 424.484 l
584.939 424.497 l
585.009 424.511 l
585.080 424.525 l
585.151 424.538 l
585.292 424.566 l
585.363 424.579 l
585.434 424.593 l
585.504 424.606 l
585.858 424.675 l
585.999 424.702 l
586.141 424.729 l
586.282 424.756 l
586.353 424.770 l
586.494 424.797 l
586.565 424.810 l
586.636 424.824 l
586.707 424.838 l
586.777 424.851 l
586.848 424.865 l
586.919 424.878 l
587.201 424.932 l
587.272 424.946 l
587.343 424.960 l
587.414 424.973 l
587.626 425.014 l
587.767 425.041 l
587.838 425.054 l
588.050 425.095 l
588.121 425.108 l
588.262 425.135 l
588.333 425.149 l
588.474 425.176 l
588.616 425.203 l
588.686 425.216 l
589.040 425.284 l
589.111 425.297 l
589.252 425.324 l
589.323 425.338 l
589.393 425.351 l
589.959 425.459 l
590.030 425.472 l
590.100 425.486 l
590.242 425.513 l
590.313 425.526 l
590.666 425.593 l
590.737 425.607 l
590.878 425.634 l
591.020 425.660 l
591.090 425.674 l
591.515 425.754 l
591.585 425.768 l
591.727 425.794 l
591.868 425.821 l
592.009 425.848 l
592.222 425.888 l
592.292 425.901 l
592.504 425.941 l
592.646 425.968 l
592.717 425.981 l
593.141 426.061 l
593.212 426.075 l
593.353 426.101 l
593.494 426.128 l
593.565 426.141 l
593.919 426.208 l
593.989 426.221 l
594.131 426.248 l
594.201 426.261 l
594.272 426.274 l
594.484 426.314 l
594.555 426.327 l
594.626 426.341 l
594.696 426.354 l
594.767 426.367 l
594.908 426.394 l
595.050 426.420 l
595.121 426.434 l
595.191 426.447 l
595.262 426.460 l
595.545 426.513 l
595.616 426.526 l
595.686 426.540 l
595.757 426.553 l
595.828 426.566 l
595.898 426.579 l
596.040 426.606 l
596.111 426.619 l
596.181 426.632 l
596.252 426.645 l
596.323 426.659 l
596.535 426.698 l
596.605 426.711 l
596.676 426.725 l
596.747 426.738 l
596.818 426.751 l
597.030 426.791 l
597.100 426.804 l
597.313 426.843 l
597.383 426.856 l
597.525 426.883 l
597.595 425.644 l
597.666 425.656 l
597.737 425.668 l
598.161 425.740 l
598.232 425.752 l
598.373 425.776 l
598.444 425.789 l
598.515 425.801 l
598.585 425.813 l
598.656 425.825 l
598.868 425.861 l
598.939 425.873 l
599.009 425.885 l
599.080 425.897 l
599.151 425.909 l
599.292 425.933 l
599.363 425.945 l
599.504 425.969 l
599.646 425.993 l
599.717 426.006 l
599.858 426.030 l
599.929 426.042 l
600.070 426.066 l
600.141 426.078 l
600.353 426.114 l
600.424 426.126 l
600.494 426.138 l
600.636 426.162 l
600.706 426.174 l
600.848 426.198 l
600.919 426.210 l
601.060 426.234 l
601.131 426.246 l
601.201 426.258 l
601.272 426.270 l
601.414 426.294 l
601.484 426.306 l
601.555 426.318 l
601.626 426.330 l
601.696 426.342 l
602.403 426.461 l
602.474 426.473 l
602.545 426.485 l
602.616 426.497 l
602.686 426.509 l
602.828 426.533 l
602.898 426.545 l
602.969 426.557 l
603.040 426.569 l
603.111 426.581 l
603.181 426.593 l
603.252 426.604 l
603.393 426.628 l
603.464 426.640 l
603.605 426.664 l
603.747 426.688 l
603.818 426.700 l
604.030 426.736 l
604.100 426.747 l
604.171 426.759 l
604.383 426.795 l
604.454 426.807 l
604.595 426.831 l
604.666 426.843 l
604.737 426.854 l
604.949 426.890 l
605.020 426.902 l
605.090 426.914 l
605.161 426.926 l
605.232 426.938 l
605.302 426.950 l
605.373 426.961 l
605.515 426.985 l
605.585 426.997 l
605.656 427.009 l
605.727 427.021 l
605.797 427.033 l
606.575 427.163 l
606.646 427.175 l
606.717 427.186 l
606.858 427.210 l
606.929 427.222 l
607.494 427.316 l
607.565 427.328 l
607.636 427.340 l
607.706 427.352 l
607.919 427.387 l
608.201 427.434 l
608.272 427.446 l
608.343 427.458 l
608.626 427.505 l
608.696 427.517 l
608.767 427.528 l
608.838 427.540 l
608.908 427.552 l
609.050 427.575 l
609.121 427.587 l
609.545 427.658 l
609.616 427.669 l
609.686 427.681 l
609.757 427.693 l
609.828 427.705 l
609.898 427.716 l
609.969 427.728 l
610.040 427.740 l
610.111 427.752 l
610.605 427.834 l
610.676 427.845 l
610.747 427.857 l
610.818 427.869 l
610.959 427.892 l
611.100 427.916 l
611.171 427.927 l
611.595 427.997 l
611.666 428.009 l
611.737 428.021 l
611.807 428.032 l
611.878 428.044 l
612.020 428.067 l
612.161 428.091 l
612.232 428.102 l
612.656 428.172 l
612.727 428.184 l
612.939 428.219 l
613.009 428.231 l
613.080 428.242 l
613.292 428.277 l
613.363 428.289 l
613.646 428.335 l
613.717 428.347 l
613.787 428.359 l
613.858 428.370 l
613.999 428.393 l
614.070 428.405 l
614.141 428.417 l
614.212 428.428 l
614.282 428.440 l
614.919 428.544 l
614.989 428.556 l
615.060 428.567 l
615.131 428.579 l
615.201 428.591 l
615.343 428.614 l
615.414 428.625 l
615.555 428.648 l
615.626 428.660 l
615.696 428.672 l
615.767 428.683 l
615.838 428.695 l
616.050 428.729 l
616.121 428.741 l
616.191 428.753 l
616.262 428.764 l
616.333 428.776 l
616.403 428.787 l
616.474 428.799 l
616.828 428.856 l
616.898 428.868 l
617.111 428.903 l
617.181 428.914 l
617.252 428.926 l
617.323 428.937 l
617.393 428.949 l
617.535 428.972 l
617.605 428.983 l
618.171 429.075 l
618.313 429.098 l
618.454 429.121 l
618.666 429.156 l
618.737 429.167 l
619.232 429.247 l
619.302 429.259 l
619.444 429.282 l
619.585 429.305 l
619.656 429.316 l
619.797 429.339 l
619.868 429.351 l
620.292 429.419 l
620.363 429.431 l
620.504 429.454 l
620.646 429.476 l
620.717 429.488 l
620.787 429.499 l
620.858 429.511 l
621.353 429.591 l
621.424 429.602 l
621.565 429.625 l
621.636 429.636 l
621.706 429.648 l
621.848 429.670 l
621.919 429.682 l
622.060 429.705 l
622.131 429.716 l
622.201 429.727 l
622.272 429.739 l
622.343 429.750 l
622.626 429.796 l
622.696 429.807 l
622.767 429.818 l
622.838 429.830 l
622.908 429.841 l
623.121 429.875 l
623.191 429.886 l
623.474 429.932 l
623.545 429.943 l
623.828 429.989 l
623.969 430.011 l
624.040 430.023 l
624.181 430.045 l
624.252 430.057 l
624.464 430.091 l
624.535 430.102 l
624.676 430.125 l
624.747 430.136 l
624.888 430.158 l
624.959 430.170 l
625.030 430.181 l
625.100 430.192 l
625.171 430.204 l
625.949 430.328 l
626.020 430.339 l
626.090 430.350 l
626.161 430.362 l
626.232 430.373 l
626.373 430.396 l
626.444 430.407 l
626.868 430.474 l
626.939 430.486 l
627.009 430.497 l
627.151 430.519 l
627.292 430.542 l
627.504 430.576 l
627.575 430.587 l
628.141 430.677 l
628.212 430.688 l
628.282 430.699 l
628.353 430.710 l
628.424 430.722 l
628.494 430.733 l
628.565 430.744 l
628.706 430.766 l
628.777 430.778 l
628.848 430.789 l
628.919 430.800 l
628.989 430.811 l
629.060 430.822 l
629.131 430.834 l
629.272 430.856 l
629.343 430.867 l
629.484 430.890 l
629.626 430.912 l
629.696 430.923 l
629.767 430.934 l
629.838 430.945 l
630.262 431.012 l
630.333 431.024 l
630.474 431.046 l
630.545 431.057 l
630.616 431.068 l
630.686 431.079 l
630.757 431.091 l
630.828 431.102 l
630.898 431.113 l
631.464 431.202 l
631.535 431.213 l
631.676 431.235 l
631.747 431.246 l
631.818 431.258 l
631.888 431.269 l
631.959 431.280 l
632.737 431.402 l
632.807 431.413 l
632.878 431.424 l
632.949 431.435 l
633.020 431.446 l
633.161 431.469 l
633.232 431.480 l
633.444 431.513 l
633.515 431.524 l
633.797 431.568 l
633.868 431.579 l
634.009 431.602 l
634.151 431.624 l
634.222 431.635 l
634.363 431.657 l
634.434 431.668 l
634.929 431.745 l
634.999 431.756 l
635.070 431.767 l
635.141 431.778 l
635.282 431.800 l
635.424 431.822 l
635.494 431.833 l
636.060 431.922 l
636.131 431.933 l
636.272 431.955 l
636.343 431.966 l
636.484 431.988 l
636.626 432.010 l
636.696 432.021 l
636.767 432.032 l
636.838 432.043 l
637.121 432.087 l
637.191 432.098 l
637.403 432.130 l
637.474 432.141 l
637.545 432.152 l
637.616 432.163 l
637.686 432.174 l
637.828 432.196 l
637.898 432.207 l
638.323 432.273 l
638.393 432.284 l
638.535 432.306 l
638.605 432.317 l
638.747 432.339 l
638.888 432.361 l
638.959 432.371 l
639.100 432.393 l
639.171 432.404 l
639.383 432.437 l
639.454 432.448 l
639.666 432.481 l
639.737 432.492 l
639.878 432.513 l
640.020 432.535 l
640.090 432.546 l
640.232 432.568 l
640.302 432.579 l
640.444 432.601 l
640.515 432.612 l
640.585 432.622 l
640.656 432.633 l
640.868 432.666 l
640.939 432.677 l
641.080 432.699 l
641.222 432.720 l
641.292 432.731 l
641.575 432.775 l
641.646 432.786 l
641.717 432.796 l
642.070 432.851 l
642.141 432.862 l
642.212 432.873 l
642.282 432.883 l
642.353 432.894 l
642.424 432.905 l
642.494 432.916 l
643.201 433.024 l
643.272 433.035 l
643.343 433.046 l
643.414 433.057 l
643.484 433.068 l
643.555 433.078 l
643.626 433.089 l
643.908 433.132 l
643.979 433.143 l
644.121 433.165 l
644.191 433.176 l
644.474 433.219 l
644.545 433.230 l
644.616 433.240 l
644.686 433.251 l
644.757 433.262 l
644.898 433.283 l
644.969 433.294 l
645.535 433.380 l
645.606 433.391 l
645.676 433.402 l
645.747 433.413 l
645.818 433.424 l
645.888 433.434 l
646.030 433.456 l
646.100 433.467 l
646.807 433.574 l
646.878 433.585 l
646.949 433.595 l
647.020 433.606 l
647.090 433.617 l
647.161 433.628 l
647.232 433.638 l
647.444 433.670 l
647.515 433.681 l
647.797 433.724 l
647.868 433.735 l
648.080 433.767 l
648.151 433.778 l
648.222 433.788 l
648.292 433.799 l
648.363 433.810 l
648.504 433.831 l
648.575 433.842 l
649.141 433.927 l
649.212 433.938 l
649.353 433.959 l
649.424 433.970 l
649.494 433.981 l
649.565 433.991 l
649.636 434.002 l
649.848 434.034 l
649.919 434.044 l
650.201 434.087 l
650.272 434.098 l
650.484 434.130 l
650.555 434.140 l
650.626 434.151 l
650.696 434.162 l
650.767 434.172 l
650.838 434.183 l
650.908 434.193 l
651.121 434.225 l
651.191 434.236 l
651.262 434.247 l
651.333 434.257 l
651.403 434.268 l
651.474 434.278 l
651.757 434.321 l
651.898 434.342 l
652.040 434.363 l
652.181 434.384 l
652.252 434.395 l
652.747 434.469 l
652.818 434.480 l
653.030 434.512 l
653.171 434.533 l
653.242 434.543 l
653.312 434.554 l
653.383 434.564 l
654.161 434.681 l
654.232 434.691 l
654.302 434.702 l
654.373 434.712 l
654.444 434.723 l
654.515 434.733 l
654.585 434.744 l
654.797 434.775 l
654.868 434.786 l
655.151 434.828 l
655.222 434.839 l
655.363 434.860 l
655.434 434.870 l
655.575 434.891 l
655.646 434.902 l
655.717 434.912 l
655.858 434.933 l
655.929 434.944 l
656.424 435.017 l
656.494 435.028 l
656.565 435.038 l
656.636 435.049 l
656.777 435.070 l
656.848 435.080 l
656.919 435.091 l
656.989 435.101 l
657.060 435.112 l
657.272 435.143 l
657.343 435.154 l
657.414 435.164 l
657.484 435.174 l
657.555 435.185 l
657.626 435.195 l
657.696 435.206 l
657.908 435.237 l
657.979 435.248 l
658.050 435.258 l
658.121 435.269 l
658.191 435.279 l
658.262 435.289 l
658.333 435.300 l
658.616 435.342 l
658.686 435.352 l
658.828 435.373 l
658.898 435.383 l
659.181 435.425 l
659.252 435.436 l
659.323 435.446 l
659.393 435.456 l
659.464 435.467 l
659.605 435.488 l
659.676 435.498 l
659.959 435.540 l
660.030 435.550 l
660.100 435.561 l
660.383 435.602 l
660.454 435.613 l
660.595 435.633 l
660.737 435.654 l
660.807 435.665 l
660.878 435.675 l
660.949 435.685 l
661.585 435.779 l
661.656 435.789 l
661.797 435.810 l
661.868 435.820 l
661.939 435.831 l
662.009 435.841 l
662.080 435.851 l
662.222 435.872 l
662.292 435.882 l
662.363 435.893 l
662.787 435.955 l
662.858 435.965 l
662.999 435.986 l
663.070 435.996 l
663.141 436.006 l
663.212 436.017 l
663.282 436.027 l
663.353 436.037 l
663.424 436.048 l
663.706 436.089 l
663.777 436.099 l
663.919 436.120 l
663.989 436.130 l
664.201 436.161 l
664.272 436.171 l
664.414 436.192 l
664.555 436.213 l
664.626 436.223 l
664.696 436.233 l
664.767 436.244 l
665.403 436.336 l
665.474 436.346 l
665.545 436.357 l
665.616 436.367 l
665.686 436.377 l
665.828 436.398 l
665.969 436.418 l
666.040 436.429 l
666.747 436.531 l
666.818 436.541 l
666.959 436.562 l
667.030 436.572 l
667.100 436.582 l
667.171 436.593 l
667.242 436.603 l
667.525 436.644 l
667.595 436.654 l
667.878 436.695 l
667.949 436.705 l
668.090 436.726 l
668.161 436.736 l
668.302 436.756 l
668.373 436.766 l
668.444 436.777 l
668.585 436.797 l
668.656 436.807 l
669.222 436.889 l
669.292 436.899 l
669.363 436.909 l
669.434 436.919 l
669.504 436.929 l
669.575 436.940 l
669.717 436.960 l
669.858 436.980 l
669.929 436.991 l
670.636 437.092 l
670.706 437.102 l
670.848 437.123 l
670.919 437.133 l
670.989 437.143 l
671.060 437.153 l
671.131 437.163 l
671.272 437.183 l
671.343 437.194 l
671.838 437.265 l
671.908 437.275 l
672.121 437.305 l
672.191 437.315 l
672.262 437.325 l
672.333 437.335 l
672.403 437.345 l
672.545 437.366 l
672.616 437.376 l
673.040 437.436 l
673.110 437.447 l
673.252 437.467 l
673.323 437.477 l
673.464 437.497 l
673.535 437.507 l
673.605 437.517 l
673.676 437.527 l
673.747 437.537 l
673.888 437.558 l
673.959 437.568 l
674.595 437.658 l
674.666 437.668 l
674.807 437.688 l
674.878 437.698 l
674.949 437.709 l
675.090 437.729 l
675.161 437.739 l
675.302 437.759 l
675.373 437.769 l
675.797 437.829 l
675.868 437.839 l
676.080 437.869 l
676.151 437.879 l
676.222 437.889 l
676.292 437.899 l
676.363 437.909 l
676.434 437.919 l
676.504 437.929 l
677.282 438.039 l
677.353 438.049 l
677.494 438.069 l
677.565 438.079 l
677.636 438.089 l
677.706 438.099 l
677.777 438.109 l
677.989 438.139 l
678.060 438.149 l
678.201 438.169 l
678.272 438.179 l
678.484 438.209 l
678.555 438.219 l
678.767 438.249 l
678.838 438.259 l
678.908 438.269 l
678.979 438.279 l
679.050 438.289 l
679.121 438.299 l
679.191 438.309 l
680.040 438.428 l
680.111 438.438 l
680.181 438.448 l
680.252 438.458 l
680.323 438.468 l
680.393 438.478 l
680.464 438.488 l
680.535 438.498 l
680.605 438.508 l
681.313 438.607 l
681.383 438.617 l
681.525 438.637 l
681.595 438.647 l
681.666 438.657 l
681.737 438.666 l
681.807 438.676 l
681.949 438.696 l
682.020 438.706 l
682.090 438.716 l
682.656 438.795 l
682.727 438.805 l
682.868 438.825 l
682.939 438.834 l
683.009 438.844 l
683.080 438.854 l
683.151 438.864 l
683.292 438.884 l
683.363 438.894 l
683.646 438.933 l
683.717 438.943 l
683.787 438.953 l
684.070 438.992 l
684.141 439.002 l
684.282 439.022 l
684.353 439.032 l
684.424 439.042 l
684.494 439.051 l
684.565 439.061 l
684.706 439.081 l
684.777 439.091 l
685.201 439.150 l
685.272 439.159 l
685.343 439.169 l
685.413 439.179 l
685.626 439.209 l
685.696 439.218 l
685.767 439.228 l
685.838 439.238 l
685.908 439.248 l
686.050 439.267 l
686.121 439.277 l
686.828 439.375 l
686.898 439.385 l
687.040 439.405 l
687.111 439.414 l
687.181 439.424 l
687.252 439.434 l
687.323 439.444 l
687.535 439.473 l
687.605 439.483 l
688.100 439.551 l
688.171 439.561 l
688.383 439.590 l
688.454 439.600 l
688.525 439.610 l
688.595 439.619 l
688.666 439.629 l
688.807 439.649 l
688.878 439.658 l
689.020 439.678 l
689.090 439.688 l
689.656 439.766 l
689.727 439.775 l
689.797 439.785 l
689.868 439.795 l
690.009 439.814 l
690.151 439.834 l
690.222 439.843 l
690.434 439.872 l
690.504 439.882 l
690.858 439.931 l
690.929 439.940 l
690.999 439.950 l
691.070 439.960 l
691.141 439.969 l
691.282 439.989 l
691.353 439.998 l
691.424 440.008 l
691.494 440.018 l
691.565 440.028 l
691.848 440.066 l
691.919 440.076 l
692.201 440.115 l
692.272 440.124 l
692.555 440.163 l
692.626 440.173 l
692.696 440.182 l
692.767 440.192 l
692.838 440.202 l
692.979 440.221 l
693.050 440.231 l
693.191 440.250 l
693.262 440.260 l
693.686 440.317 l
693.757 440.327 l
693.898 440.346 l
693.969 440.356 l
694.111 440.375 l
694.181 440.385 l
694.252 440.394 l
694.323 440.404 l
694.393 440.414 l
694.676 440.452 l
694.747 440.462 l
695.030 440.500 l
695.100 440.510 l
695.383 440.548 l
695.454 440.558 l
695.525 440.568 l
695.595 440.577 l
695.666 440.587 l
695.737 440.596 l
695.807 440.606 l
695.949 440.625 l
696.020 440.635 l
696.585 440.711 l
696.656 440.721 l
696.797 440.740 l
696.868 440.750 l
697.009 440.769 l
697.080 440.778 l
697.151 440.788 l
697.292 440.807 l
697.363 440.817 l
697.999 440.903 l
698.070 440.912 l
698.141 440.922 l
698.212 440.931 l
698.353 440.950 l
698.424 440.960 l
698.494 440.969 l
698.565 440.979 l
698.636 440.988 l
698.777 441.007 l
698.848 441.017 l
699.555 441.112 l
699.626 441.122 l
699.767 441.141 l
699.838 441.150 l
699.908 441.160 l
699.979 441.169 l
700.050 441.179 l
700.191 441.198 l
700.262 441.207 l
700.545 441.245 l
700.616 441.255 l
700.686 441.264 l
700.757 441.274 l
700.828 441.283 l
701.111 441.321 l
701.181 441.331 l
701.252 441.340 l
701.323 441.350 l
701.393 441.359 l
701.464 441.369 l
701.535 441.378 l
701.605 441.388 l
701.676 441.397 l
701.818 441.416 l
701.888 441.425 l
702.525 441.511 l
702.595 441.520 l
702.666 441.529 l
702.737 441.539 l
702.878 441.558 l
703.020 441.577 l
703.090 441.586 l
703.232 441.605 l
703.302 441.614 l
703.868 441.690 l
703.939 441.699 l
704.080 441.718 l
704.151 441.728 l
704.222 441.737 l
704.292 441.746 l
704.363 441.756 l
704.434 441.765 l
704.504 441.775 l
704.646 441.793 l
704.717 441.803 l
704.999 441.840 l
705.070 441.850 l
705.424 441.897 l
705.494 441.906 l
705.565 441.916 l
705.636 441.925 l
705.777 441.944 l
705.919 441.963 l
705.989 441.972 l
706.131 441.991 l
706.201 442.000 l
706.908 442.094 l
706.979 442.103 l
707.050 442.112 l
707.121 442.122 l
707.191 442.131 l
707.262 442.141 l
707.333 442.150 l
707.403 442.159 l
707.616 442.187 l
707.686 442.197 l
708.323 442.281 l
708.393 442.290 l
708.605 442.318 l
708.676 442.327 l
708.747 442.337 l
708.818 442.346 l
708.888 442.355 l
709.030 442.374 l
709.100 442.383 l
709.878 442.486 l
709.949 442.495 l
710.090 442.513 l
710.161 442.523 l
710.232 442.532 l
710.302 442.541 l
710.373 442.551 l
710.444 442.560 l
710.515 442.569 l
710.797 442.606 l
710.868 442.616 l
710.939 442.625 l
711.009 442.634 l
711.080 442.643 l
711.434 442.690 l
711.504 442.699 l
711.646 442.718 l
711.717 442.727 l
711.787 442.736 l
711.929 442.755 l
711.999 442.764 l
712.141 442.782 l
712.211 442.792 l
712.777 442.866 l
712.848 442.875 l
713.060 442.903 l
713.131 442.912 l
713.201 442.921 l
713.272 442.930 l
713.343 442.940 l
713.413 442.949 l
713.484 442.958 l
713.696 442.986 l
713.767 442.995 l
713.979 443.023 l
714.050 443.032 l
714.262 443.059 l
714.333 443.069 l
714.545 443.096 l
714.616 443.105 l
714.686 443.115 l
714.757 443.124 l
714.828 443.133 l
714.898 443.142 l
714.969 443.151 l
715.040 443.161 l
715.111 443.170 l
715.959 443.280 l
716.030 443.289 l
716.171 443.308 l
716.242 443.317 l
716.313 443.326 l
716.383 443.335 l
716.454 443.344 l
716.666 443.372 l
716.737 443.381 l
717.444 443.473 l
717.515 443.482 l
717.656 443.500 l
717.727 443.509 l
717.797 443.518 l
717.868 443.527 l
717.939 443.537 l
718.009 443.546 l
718.080 443.555 l
718.292 443.582 l
718.363 443.591 l
718.929 443.664 l
718.999 443.673 l
719.141 443.692 l
719.211 443.701 l
719.282 443.710 l
719.353 443.719 l
719.424 443.728 l
719.494 443.737 l
719.565 443.746 l
719.706 443.765 l
719.777 443.774 l
720.626 443.883 l
720.696 443.892 l
720.767 443.901 l
720.838 443.910 l
720.908 443.919 l
720.979 443.928 l
721.050 443.937 l
721.121 443.946 l
721.191 443.955 l
721.474 443.992 l
721.545 444.001 l
721.969 444.055 l
722.040 444.064 l
722.181 444.082 l
722.252 444.091 l
722.393 444.109 l
722.464 444.119 l
722.535 444.128 l
722.605 444.137 l
722.676 444.146 l
722.888 444.173 l
722.959 444.182 l
723.030 444.191 l
723.595 444.263 l
723.666 444.272 l
723.878 444.299 l
723.949 444.308 l
724.020 444.317 l
724.090 444.326 l
724.161 444.335 l
724.302 444.353 l
724.373 444.362 l
724.515 444.380 l
724.585 444.389 l
725.009 444.443 l
725.080 444.452 l
725.363 444.488 l
725.434 444.497 l
725.504 444.506 l
725.575 444.515 l
725.646 444.524 l
725.717 444.533 l
725.787 444.542 l
725.858 444.551 l
725.929 444.560 l
726.777 444.668 l
726.848 444.677 l
726.919 444.686 l
726.989 444.695 l
727.060 444.704 l
727.131 444.713 l
727.201 444.722 l
727.272 444.731 l
727.343 444.740 l
727.414 444.749 l
727.484 444.758 l
727.767 444.793 l
727.838 444.802 l
728.262 444.856 l
728.333 444.865 l
728.474 444.883 l
728.545 444.892 l
728.686 444.910 l
728.757 444.918 l
728.828 444.927 l
728.898 444.936 l
728.969 444.945 l
729.111 444.963 l
729.181 444.972 l
729.605 445.025 l
729.676 445.034 l
729.747 445.043 l
730.030 445.079 l
730.100 445.088 l
730.242 445.106 l
730.312 445.115 l
730.383 445.123 l
730.454 445.132 l
730.525 445.141 l
730.595 445.150 l
730.666 445.159 l
730.737 445.168 l
730.878 445.186 l
730.949 445.195 l
731.373 445.248 l
731.444 445.257 l
731.727 445.292 l
731.797 445.301 l
731.868 445.310 l
731.939 445.319 l
732.009 445.328 l
732.080 445.337 l
732.151 445.345 l
732.222 445.354 l
732.292 445.363 l
732.575 445.399 l
732.646 445.407 l
732.929 445.443 l
732.999 445.452 l
733.282 445.487 l
733.353 445.496 l
733.494 445.514 l
733.565 445.522 l
733.636 445.531 l
733.706 445.540 l
733.777 445.549 l
733.848 445.558 l
733.919 445.567 l
733.989 445.575 l
734.343 445.619 l
734.414 445.628 l
734.484 445.637 l
734.555 445.646 l
734.626 445.655 l
734.908 445.690 l
734.979 445.699 l
735.121 445.716 l
735.262 445.734 l
735.403 445.752 l
735.616 445.778 l
735.686 445.787 l
736.464 445.884 l
736.535 445.892 l
736.676 445.910 l
736.747 445.919 l
736.818 445.927 l
736.888 445.936 l
736.959 445.945 l
737.030 445.954 l
737.100 445.963 l
737.312 445.989 l
737.383 445.998 l
738.090 446.085 l
738.161 446.094 l
738.302 446.111 l
738.373 446.120 l
738.444 446.129 l
738.515 446.138 l
738.585 446.146 l
738.656 446.155 l
738.727 446.164 l
738.868 446.181 l
738.939 446.190 l
739.575 446.269 l
739.646 446.277 l
739.717 446.286 l
739.787 446.295 l
739.929 446.312 l
739.999 446.321 l
740.141 446.338 l
740.282 446.356 l
740.353 446.365 l
740.494 446.382 l
740.565 446.391 l
740.706 446.408 l
740.777 446.417 l
741.201 446.469 l
741.272 446.478 l
741.484 446.504 l
741.555 446.512 l
741.626 446.521 l
741.696 446.530 l
741.838 446.547 l
741.979 446.564 l
742.050 446.573 l
742.121 446.582 l
742.191 446.591 l
742.757 446.660 l
742.828 446.669 l
743.111 446.703 l
743.181 446.712 l
743.323 446.729 l
743.393 446.738 l
743.464 446.746 l
743.535 446.755 l
743.605 446.764 l
743.676 446.772 l
743.747 446.781 l
744.030 446.816 l
744.100 446.824 l
744.666 446.893 l
744.737 446.902 l
744.878 446.919 l
744.949 446.928 l
745.090 446.945 l
745.232 446.962 l
745.302 446.971 l
745.373 446.980 l
745.444 446.988 l
745.585 447.005 l
745.656 447.014 l
746.363 447.100 l
746.434 447.109 l
746.575 447.126 l
746.646 447.135 l
746.717 447.143 l
746.787 447.152 l
746.929 447.169 l
747.070 447.186 l
747.141 447.195 l
747.282 447.212 l
747.353 447.220 l
748.060 447.306 l
748.131 447.315 l
748.272 447.332 l
748.343 447.340 l
748.484 447.358 l
748.626 447.375 l
748.696 447.383 l
748.767 447.392 l
748.838 447.400 l
749.121 447.435 l
749.191 447.443 l
749.616 447.494 l
749.686 447.503 l
749.969 447.537 l
750.040 447.546 l
750.110 447.554 l
750.181 447.563 l
750.252 447.571 l
750.323 447.580 l
750.393 447.588 l
750.464 447.597 l
750.535 447.605 l
750.818 447.639 l
750.888 447.648 l
751.454 447.716 l
751.525 447.725 l
751.666 447.742 l
751.737 447.750 l
751.878 447.767 l
752.020 447.784 l
752.090 447.793 l
752.161 447.801 l
752.232 447.810 l
752.444 447.835 l
752.515 447.844 l
753.151 447.920 l
753.222 447.928 l
753.434 447.954 l
753.504 447.962 l
753.575 447.971 l
753.646 447.979 l
753.717 447.988 l
753.787 447.996 l
753.858 448.005 l
753.929 448.013 l
753.999 448.022 l
754.282 448.055 l
754.353 448.064 l
754.424 448.072 l
754.494 448.081 l
754.636 448.098 l
754.706 448.106 l
754.777 448.115 l
754.848 448.123 l
754.989 448.140 l
755.060 448.148 l
755.201 448.165 l
755.272 448.174 l
755.413 448.191 l
755.555 448.207 l
755.626 448.216 l
755.696 448.224 l
755.767 448.233 l
756.050 448.266 l
756.121 448.275 l
756.474 448.317 l
756.545 448.325 l
756.828 448.359 l
756.898 448.367 l
756.969 448.376 l
757.040 448.384 l
757.181 448.401 l
757.323 448.418 l
757.393 448.426 l
757.535 448.443 l
757.605 448.452 l
758.454 448.552 l
758.525 448.561 l
758.666 448.577 l
758.737 448.586 l
758.878 448.603 l
759.020 448.619 l
759.090 448.628 l
759.161 448.636 l
759.232 448.644 l
759.373 448.661 l
759.444 448.669 l
759.515 448.678 l
759.585 448.686 l
759.939 448.728 l
760.009 448.736 l
760.292 448.770 l
760.363 448.778 l
760.504 448.795 l
760.575 448.803 l
760.646 448.812 l
760.717 448.820 l
760.787 448.828 l
760.858 448.837 l
760.929 448.845 l
760.999 448.853 l
S
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
q
53.0000 9.01423 709.999 486.985 rc
newpath
74.9292 11.0086 m
74.9999 11.3448 l
75.0707 11.6806 l
75.1414 12.0159 l
75.2121 12.3506 l
75.2828 12.6849 l
75.3535 13.0187 l
75.4242 13.3519 l
75.4949 13.6847 l
75.5656 14.0170 l
75.6363 14.3488 l
75.7070 14.6801 l
75.7777 15.0109 l
75.8484 15.3413 l
75.9191 15.6711 l
75.9898 16.0005 l
76.0606 16.3293 l
76.1313 16.6577 l
76.2020 16.9856 l
76.2727 17.3130 l
76.3434 17.6400 l
76.4141 17.9665 l
76.4848 18.2924 l
76.5555 18.6180 l
76.6262 18.9430 l
76.6969 19.2676 l
76.7676 19.5917 l
76.8383 19.9153 l
76.9090 20.2384 l
76.9797 20.5611 l
77.0505 20.8833 l
77.1212 21.2051 l
77.1919 21.5264 l
77.2626 21.8472 l
77.3333 22.1676 l
77.4040 22.4874 l
77.4747 22.8069 l
77.5454 23.1258 l
77.6161 23.4444 l
77.6868 23.7624 l
77.7575 24.0800 l
77.8282 24.3972 l
77.8989 24.7139 l
77.9696 25.0301 l
78.0404 25.3459 l
78.1111 25.6612 l
78.1818 25.9761 l
78.2525 26.2905 l
78.3232 26.6045 l
78.3939 26.9180 l
78.4646 27.2311 l
78.5353 27.5438 l
78.6060 27.8560 l
78.6767 28.1678 l
78.7474 28.4791 l
78.8181 28.7900 l
78.8888 29.1004 l
78.9595 29.4104 l
79.0303 29.7200 l
79.1010 30.0291 l
79.1717 30.3378 l
79.2424 30.6460 l
79.3131 30.9539 l
79.3838 31.2613 l
79.4545 31.5682 l
79.5252 31.8747 l
79.5959 32.1808 l
79.6666 32.4865 l
79.7373 32.7918 l
79.8080 33.0966 l
79.8787 33.4010 l
79.9494 33.7050 l
80.0202 34.0085 l
80.0909 34.3116 l
80.1616 34.6143 l
80.2323 34.9166 l
80.3030 35.2185 l
80.3737 35.5199 l
80.4444 35.8210 l
80.5151 36.1216 l
80.5858 36.4218 l
80.6565 36.7216 l
80.7272 37.0209 l
80.7979 37.3199 l
80.8686 37.6184 l
80.9393 37.9166 l
81.0100 38.2143 l
81.0808 38.5116 l
81.1515 38.8085 l
81.2222 39.1050 l
81.2929 39.4011 l
81.3636 39.6968 l
81.4343 39.9921 l
81.5050 40.2870 l
81.5757 40.5815 l
81.6464 40.8755 l
81.7171 41.1692 l
81.7878 41.4625 l
81.8585 41.7554 l
81.9292 42.0479 l
81.9999 42.3400 l
82.0707 42.6317 l
82.1414 42.9230 l
82.2121 43.2139 l
82.2828 43.5044 l
82.3535 43.7945 l
82.4242 44.0842 l
82.4949 44.3736 l
82.5656 44.6625 l
82.6363 44.9511 l
82.7070 45.2392 l
82.7777 45.5270 l
82.8484 45.8144 l
82.9191 46.1014 l
82.9898 46.3881 l
83.0606 46.6743 l
83.1313 46.9602 l
83.2020 47.2457 l
83.2727 47.5307 l
83.3434 47.8155 l
83.4141 48.0998 l
83.4848 48.3838 l
83.5555 48.6674 l
83.6262 48.9506 l
83.6969 49.2334 l
83.7676 49.5159 l
83.8383 49.7980 l
83.9090 50.0797 l
83.9797 50.3610 l
84.0505 50.6420 l
84.1212 50.9226 l
84.1919 51.2028 l
84.2626 51.4827 l
84.3333 51.7621 l
84.4040 52.0412 l
84.4747 52.3200 l
84.5454 52.5984 l
84.6161 52.8764 l
84.6868 53.1541 l
84.7575 53.4314 l
84.8282 53.7083 l
84.8989 53.9849 l
84.9696 54.2611 l
85.0404 54.5369 l
85.1111 54.8124 l
85.1818 55.0876 l
85.2525 55.3623 l
85.3232 55.6368 l
85.3939 55.9108 l
85.4646 56.1845 l
85.5353 56.4579 l
85.6060 56.7309 l
85.6767 57.0035 l
85.7474 57.2758 l
85.8181 57.5477 l
85.8888 57.8193 l
85.9595 58.0906 l
86.0302 58.3614 l
86.1010 58.6320 l
86.1717 58.9021 l
86.2424 59.1720 l
86.3131 59.4415 l
86.3838 59.7106 l
86.4545 59.9794 l
86.5252 60.2479 l
86.5959 60.5160 l
86.6666 60.7838 l
86.7373 61.0512 l
86.8080 61.3183 l
86.8787 61.5851 l
86.9494 61.8515 l
87.0202 62.1176 l
87.0909 62.3833 l
87.1616 62.6487 l
87.2323 62.9138 l
87.3030 63.1785 l
87.3737 63.4429 l
87.4444 63.7069 l
87.5151 63.9706 l
87.5858 64.2340 l
87.6565 64.4971 l
87.7272 64.7598 l
87.7979 65.0222 l
87.8686 65.2843 l
87.9393 65.5460 l
88.0100 65.8074 l
88.0808 66.0684 l
88.1515 66.3292 l
88.2222 66.5896 l
88.2929 66.8497 l
88.3636 67.1095 l
88.4343 67.3689 l
88.5050 67.6280 l
88.5757 67.8868 l
88.6464 68.1452 l
88.7171 68.4034 l
88.7878 68.6612 l
88.9292 69.1759 l
88.9999 69.4328 l
89.0706 69.6893 l
89.1414 69.9456 l
89.2121 70.2015 l
89.2828 70.4570 l
89.3535 70.7123 l
89.4242 70.9673 l
89.4949 71.2219 l
89.5656 71.4762 l
89.6363 71.7303 l
89.7070 71.9840 l
89.7777 72.2374 l
89.9191 72.7432 l
89.9898 72.9957 l
90.0605 73.2478 l
90.1313 73.4996 l
90.2020 73.7512 l
90.2727 74.0024 l
90.3434 74.2533 l
90.4141 74.5039 l
90.4848 74.7542 l
90.5555 75.0042 l
90.6262 75.2539 l
90.6969 75.5033 l
90.7676 75.7524 l
90.9090 76.2496 l
90.9797 76.4978 l
91.0504 76.7457 l
91.1212 76.9932 l
91.1919 77.2405 l
91.2626 77.4875 l
91.3333 77.7342 l
91.4040 77.9806 l
91.4747 78.2266 l
91.5454 78.4724 l
91.6161 78.7179 l
91.6868 78.9631 l
91.7575 73.4748 l
91.8989 73.9188 l
92.0403 74.3620 l
92.1111 74.5832 l
92.2525 75.0249 l
92.3939 75.4657 l
92.5353 75.9057 l
92.6767 76.3447 l
92.8181 76.7827 l
92.8888 77.0014 l
93.0302 77.4381 l
93.1010 77.6561 l
93.2424 78.0915 l
93.3131 78.3088 l
93.4545 78.7428 l
93.5959 79.1759 l
93.7373 79.6082 l
93.8787 80.0395 l
93.9494 80.2548 l
94.0909 80.6848 l
94.2323 81.1139 l
94.3737 81.5421 l
94.4444 81.7559 l
94.5151 81.9695 l
94.6565 82.3960 l
94.7979 82.8216 l
94.8686 83.0341 l
94.9393 83.2463 l
95.0100 83.4584 l
95.1515 83.8818 l
95.2222 84.0932 l
95.2929 84.3044 l
95.4343 84.7261 l
95.5050 84.9367 l
95.6464 85.3571 l
95.7171 85.5670 l
95.8585 85.9862 l
95.9292 86.1955 l
96.0706 86.6134 l
96.2121 87.0304 l
96.2828 87.2387 l
96.4242 87.6544 l
96.4949 87.8620 l
96.6363 88.2766 l
96.7070 88.4836 l
96.7777 88.6903 l
96.9191 89.1032 l
96.9898 89.3093 l
97.1313 89.7210 l
97.2020 89.9265 l
97.3434 90.3369 l
97.4141 90.5419 l
97.4848 90.7466 l
97.5555 90.9511 l
97.6969 91.3595 l
97.8383 91.7670 l
97.9797 92.1738 l
98.1212 92.5798 l
98.2626 92.9849 l
98.4040 93.3893 l
98.5454 93.7928 l
98.6161 93.9943 l
98.7575 94.3967 l
98.8282 94.5976 l
98.9696 94.9988 l
99.0403 95.1991 l
99.1818 95.5991 l
99.3232 95.9983 l
99.4646 96.3967 l
99.6060 96.7944 l
99.7474 97.1913 l
99.8888 97.5874 l
99.9595 97.7852 l
100.030 97.9827 l
100.171 98.3773 l
100.242 98.5743 l
100.383 98.9678 l
100.525 99.3604 l
100.595 99.5564 l
100.737 99.9480 l
100.808 100.143 l
100.878 100.338 l
101.020 100.728 l
101.090 100.923 l
101.232 101.312 l
101.303 101.506 l
101.444 101.894 l
101.585 102.281 l
101.727 102.667 l
101.868 103.053 l
101.939 103.245 l
102.080 103.630 l
102.222 104.013 l
102.363 104.396 l
102.434 104.588 l
102.575 104.969 l
102.646 105.160 l
102.787 105.541 l
102.929 105.921 l
103.000 106.111 l
103.141 106.490 l
103.282 106.868 l
103.353 107.057 l
103.494 107.434 l
103.565 107.622 l
103.707 107.998 l
103.777 108.186 l
103.919 108.561 l
104.060 108.936 l
104.202 109.309 l
104.343 109.682 l
104.414 109.869 l
104.555 110.240 l
104.697 110.612 l
104.838 110.982 l
104.979 111.352 l
105.121 111.721 l
105.262 112.090 l
105.333 112.274 l
105.474 112.641 l
105.616 113.008 l
105.757 113.374 l
105.899 113.739 l
105.969 113.922 l
106.111 114.286 l
106.252 114.650 l
106.393 115.013 l
106.535 115.375 l
106.606 115.556 l
106.747 115.918 l
106.818 116.098 l
106.888 116.278 l
107.030 116.638 l
107.101 116.818 l
107.242 117.177 l
107.313 117.357 l
107.454 117.715 l
107.525 117.893 l
107.595 118.072 l
107.737 118.429 l
107.808 118.607 l
107.949 118.963 l
108.020 119.140 l
108.161 119.495 l
108.303 119.849 l
108.444 120.203 l
108.585 120.556 l
108.727 120.908 l
108.868 121.260 l
108.939 121.435 l
109.080 121.786 l
109.222 122.136 l
109.363 122.486 l
109.505 122.834 l
109.646 123.183 l
109.787 123.530 l
109.929 123.877 l
110.070 124.223 l
110.141 124.396 l
110.282 124.742 l
110.424 125.086 l
110.565 125.431 l
110.707 125.774 l
110.848 126.117 l
110.989 126.459 l
111.131 126.801 l
111.272 127.142 l
111.343 127.312 l
111.484 127.653 l
111.555 127.823 l
111.697 128.162 l
111.838 128.501 l
111.979 128.839 l
112.050 129.008 l
112.191 129.345 l
112.333 129.681 l
112.474 130.017 l
112.616 130.353 l
112.757 130.688 l
112.899 131.022 l
113.040 131.356 l
113.181 131.689 l
113.252 131.855 l
113.393 132.187 l
113.535 132.519 l
113.676 132.850 l
113.818 133.181 l
113.959 133.511 l
114.101 133.840 l
114.242 134.169 l
114.383 134.497 l
114.525 134.825 l
114.666 135.152 l
114.808 135.478 l
114.949 135.804 l
115.020 135.967 l
115.161 136.292 l
115.303 136.617 l
115.444 136.941 l
115.656 137.426 l
115.798 137.748 l
115.939 138.070 l
116.080 138.392 l
116.222 138.713 l
116.292 138.873 l
116.505 139.353 l
116.646 139.673 l
116.787 139.991 l
116.929 140.310 l
117.070 140.627 l
117.212 140.945 l
117.353 141.261 l
117.494 141.577 l
117.565 141.735 l
117.707 142.051 l
117.848 142.365 l
117.989 142.680 l
118.131 142.993 l
118.272 143.307 l
118.414 143.619 l
118.555 143.931 l
118.626 144.087 l
118.767 144.399 l
118.909 144.710 l
119.050 145.020 l
119.191 145.330 l
119.333 145.639 l
119.545 146.102 l
119.757 146.564 l
119.899 146.871 l
120.040 147.178 l
120.181 147.484 l
120.323 147.790 l
120.393 147.943 l
120.535 148.248 l
120.676 148.552 l
120.888 149.008 l
121.030 149.311 l
121.171 149.614 l
121.242 149.765 l
121.383 150.067 l
121.525 150.369 l
121.666 150.670 l
121.808 150.970 l
121.949 151.270 l
122.090 151.570 l
122.161 151.719 l
122.303 152.018 l
122.444 152.316 l
122.515 152.465 l
122.656 152.763 l
122.798 153.060 l
122.939 153.357 l
123.080 153.653 l
123.151 153.801 l
123.363 154.244 l
123.505 154.538 l
123.646 154.833 l
123.787 155.126 l
123.929 155.420 l
124.070 155.712 l
124.212 156.005 l
124.353 156.297 l
124.494 156.588 l
124.707 157.024 l
124.848 157.315 l
124.919 157.460 l
125.131 157.894 l
125.272 158.183 l
125.484 158.615 l
125.626 158.903 l
125.767 159.190 l
125.909 159.477 l
126.050 159.763 l
126.191 160.049 l
126.333 160.334 l
126.474 160.619 l
126.616 160.904 l
126.757 161.188 l
126.969 161.613 l
127.111 161.896 l
127.252 162.179 l
127.393 162.461 l
127.535 162.743 l
127.676 163.024 l
127.818 163.305 l
127.959 163.585 l
128.101 163.865 l
128.313 164.284 l
128.454 164.563 l
128.595 164.841 l
128.808 165.258 l
129.020 165.673 l
129.161 165.950 l
129.303 166.226 l
129.444 166.502 l
129.585 166.777 l
129.727 167.052 l
129.868 167.327 l
130.080 167.738 l
130.222 168.011 l
130.363 168.284 l
130.575 168.693 l
130.717 168.965 l
130.858 169.236 l
131.000 169.508 l
131.141 169.778 l
131.282 170.049 l
131.424 170.318 l
131.565 170.588 l
131.707 170.857 l
131.848 171.126 l
131.989 171.394 l
132.131 171.662 l
132.272 171.929 l
132.484 172.330 l
132.696 172.729 l
132.909 173.128 l
133.121 173.525 l
133.262 173.790 l
133.474 174.186 l
133.616 174.450 l
133.757 174.713 l
133.969 175.107 l
134.111 175.369 l
134.252 175.631 l
134.393 175.893 l
134.535 176.154 l
134.676 176.414 l
134.818 176.675 l
135.030 177.064 l
135.171 177.324 l
135.313 177.583 l
135.454 177.841 l
135.595 178.099 l
135.737 178.357 l
135.878 178.615 l
136.090 179.000 l
136.303 179.384 l
136.373 179.512 l
136.515 179.768 l
136.727 180.151 l
136.939 180.533 l
137.080 180.787 l
137.222 181.041 l
137.363 181.294 l
137.505 181.547 l
137.646 181.800 l
137.858 182.178 l
138.000 182.430 l
138.141 182.682 l
138.353 183.058 l
138.494 183.309 l
138.707 183.684 l
138.919 184.058 l
139.060 184.307 l
139.202 184.555 l
139.343 184.804 l
139.555 185.176 l
139.626 185.299 l
139.838 185.670 l
139.979 185.917 l
140.121 186.163 l
140.333 186.532 l
140.545 186.900 l
140.686 187.145 l
140.828 187.389 l
141.040 187.756 l
141.181 187.999 l
141.393 188.364 l
141.535 188.607 l
141.747 188.971 l
141.888 189.212 l
142.101 189.575 l
142.171 189.695 l
142.313 189.936 l
142.525 190.297 l
142.737 190.657 l
142.878 190.897 l
143.020 191.136 l
143.232 191.494 l
143.444 191.851 l
143.585 192.089 l
143.798 192.445 l
144.010 192.801 l
144.151 193.037 l
144.363 193.391 l
144.575 193.745 l
144.717 193.980 l
144.858 194.215 l
145.070 194.567 l
145.282 194.918 l
145.494 195.268 l
145.707 195.617 l
145.848 195.850 l
145.989 196.082 l
146.202 196.430 l
146.343 196.661 l
146.484 196.892 l
146.626 197.123 l
146.696 197.239 l
146.838 197.469 l
146.979 197.699 l
147.121 197.929 l
147.262 198.158 l
147.404 198.387 l
147.616 198.730 l
147.828 199.072 l
147.969 199.300 l
148.111 199.527 l
148.323 199.868 l
148.535 200.208 l
148.606 200.321 l
148.818 200.660 l
149.030 200.999 l
149.101 201.111 l
149.313 201.449 l
149.454 201.673 l
149.595 201.897 l
149.808 202.233 l
149.949 202.457 l
150.090 202.680 l
150.303 203.014 l
150.444 203.236 l
150.656 203.569 l
150.797 203.791 l
151.010 204.123 l
151.222 204.454 l
151.363 204.675 l
151.575 205.005 l
151.787 205.334 l
151.929 205.554 l
152.141 205.882 l
152.353 206.210 l
152.494 206.428 l
152.636 206.646 l
152.848 206.972 l
153.060 207.297 l
153.202 207.514 l
153.414 207.838 l
153.555 208.054 l
153.696 208.270 l
153.909 208.593 l
154.050 208.808 l
154.262 209.130 l
154.474 209.451 l
154.686 209.771 l
154.899 210.091 l
155.040 210.304 l
155.181 210.517 l
155.323 210.729 l
155.535 211.047 l
155.747 211.365 l
155.888 211.576 l
156.101 211.892 l
156.242 212.103 l
156.383 212.313 l
156.595 212.628 l
156.737 212.838 l
156.878 213.047 l
157.090 213.361 l
157.303 213.674 l
157.515 213.986 l
157.656 214.194 l
157.797 214.401 l
158.010 214.712 l
158.151 214.919 l
158.292 215.126 l
158.505 215.435 l
158.717 215.744 l
158.787 215.847 l
159.000 216.155 l
159.212 216.462 l
159.424 216.769 l
159.636 217.075 l
159.777 217.279 l
159.919 217.483 l
160.131 217.787 l
160.343 218.092 l
160.555 218.395 l
160.767 218.699 l
160.909 218.900 l
161.050 219.102 l
161.262 219.404 l
161.474 219.705 l
161.686 220.005 l
161.828 220.206 l
162.040 220.505 l
162.181 220.705 l
162.323 220.904 l
162.464 221.103 l
162.676 221.401 l
162.888 221.698 l
163.101 221.995 l
163.313 222.291 l
163.454 222.488 l
163.737 222.882 l
163.949 223.177 l
164.161 223.471 l
164.373 223.764 l
164.585 224.057 l
164.797 224.349 l
164.939 224.544 l
165.151 224.836 l
165.292 225.030 l
165.505 225.320 l
165.717 225.610 l
165.929 225.900 l
166.141 226.189 l
166.424 226.573 l
166.636 226.861 l
166.777 227.052 l
166.989 227.339 l
167.202 227.625 l
167.414 227.911 l
167.626 228.196 l
167.767 228.386 l
167.979 228.670 l
168.121 228.859 l
168.404 229.237 l
168.616 229.520 l
168.828 229.802 l
169.040 230.084 l
169.181 230.271 l
169.464 230.646 l
169.676 230.926 l
169.888 231.206 l
170.030 231.392 l
170.313 231.763 l
170.595 232.134 l
170.737 232.319 l
170.949 232.596 l
171.232 232.965 l
171.444 233.241 l
171.585 233.425 l
171.868 233.791 l
172.151 234.157 l
172.434 234.522 l
172.505 234.613 l
172.717 234.886 l
172.787 234.977 l
173.000 235.249 l
173.212 235.521 l
173.494 235.883 l
173.707 236.153 l
173.848 236.334 l
174.060 236.604 l
174.272 236.873 l
174.484 237.142 l
174.696 237.410 l
174.838 237.589 l
174.979 237.767 l
175.191 238.035 l
175.404 238.302 l
175.616 238.568 l
175.828 238.834 l
175.969 239.011 l
176.181 239.276 l
176.464 239.629 l
176.747 239.981 l
176.959 240.244 l
177.101 240.419 l
177.313 240.682 l
177.454 240.857 l
177.666 241.119 l
177.878 241.380 l
178.090 241.641 l
178.303 241.901 l
178.444 242.075 l
178.656 242.335 l
178.868 242.594 l
179.080 242.853 l
179.222 243.025 l
179.434 243.283 l
179.646 243.541 l
179.858 243.798 l
180.070 244.054 l
180.212 244.225 l
180.353 244.396 l
180.565 244.652 l
180.777 244.907 l
180.989 245.162 l
181.131 245.331 l
181.343 245.585 l
181.626 245.923 l
181.838 246.176 l
182.121 246.513 l
182.333 246.765 l
182.474 246.933 l
182.616 247.100 l
182.757 247.268 l
183.040 247.602 l
183.252 247.852 l
183.535 248.185 l
183.747 248.434 l
183.888 248.600 l
184.030 248.766 l
184.313 249.097 l
184.525 249.344 l
184.666 249.509 l
184.949 249.838 l
185.232 250.167 l
185.515 250.494 l
185.656 250.658 l
185.868 250.903 l
186.080 251.147 l
186.292 251.391 l
186.575 251.716 l
186.858 252.040 l
187.070 252.283 l
187.282 252.525 l
187.424 252.686 l
187.636 252.928 l
187.848 253.169 l
188.060 253.410 l
188.272 253.650 l
188.484 253.890 l
188.767 254.209 l
188.979 254.448 l
189.191 254.687 l
189.404 254.925 l
189.616 255.163 l
189.828 255.400 l
190.040 255.637 l
190.252 255.874 l
190.464 256.110 l
190.676 256.346 l
190.888 256.582 l
191.101 256.817 l
191.313 257.051 l
191.595 257.364 l
191.808 257.597 l
192.020 257.831 l
192.161 257.986 l
192.444 258.296 l
192.515 258.374 l
192.727 258.606 l
192.939 258.838 l
193.222 259.146 l
193.434 259.377 l
193.717 259.684 l
193.929 259.914 l
194.212 260.220 l
194.424 260.449 l
194.565 260.602 l
194.777 260.830 l
194.919 260.983 l
195.131 261.210 l
195.272 261.362 l
195.414 261.514 l
195.626 261.741 l
195.838 261.967 l
196.050 262.194 l
196.333 262.495 l
196.474 262.645 l
196.757 262.945 l
196.899 263.095 l
197.181 263.394 l
197.464 263.693 l
197.606 263.842 l
197.818 264.065 l
197.888 264.140 l
197.959 263.182 l
198.101 263.316 l
198.242 263.450 l
198.525 263.717 l
198.666 263.851 l
198.808 263.984 l
198.949 264.117 l
199.303 264.450 l
199.515 264.649 l
199.797 264.914 l
200.151 265.245 l
200.505 265.575 l
200.787 265.838 l
201.000 266.035 l
201.282 266.298 l
201.494 266.494 l
201.777 266.756 l
202.060 267.017 l
202.272 267.213 l
202.555 267.473 l
202.838 267.733 l
203.050 267.927 l
203.262 268.122 l
203.474 268.316 l
203.686 268.509 l
203.828 268.639 l
204.111 268.896 l
204.393 269.153 l
204.606 269.346 l
204.959 269.666 l
205.242 269.922 l
205.454 270.114 l
205.808 270.432 l
206.161 270.750 l
206.444 271.004 l
206.585 271.131 l
206.868 271.384 l
207.222 271.700 l
207.363 271.826 l
207.646 272.078 l
207.929 272.329 l
208.141 272.517 l
208.353 272.705 l
208.565 272.893 l
208.919 273.205 l
209.202 273.455 l
209.484 273.703 l
209.626 273.828 l
209.909 274.076 l
210.121 274.262 l
210.404 274.509 l
210.616 274.695 l
210.898 274.941 l
211.181 275.187 l
211.393 275.372 l
211.818 275.740 l
212.171 276.046 l
212.313 276.168 l
212.666 276.473 l
213.020 276.777 l
213.161 276.899 l
213.373 277.081 l
213.585 277.263 l
213.727 277.384 l
214.010 277.625 l
214.151 277.746 l
214.292 277.867 l
214.363 277.927 l
214.434 277.987 l
214.787 278.288 l
214.929 278.409 l
215.141 278.589 l
215.353 278.768 l
215.494 278.888 l
215.848 279.187 l
216.131 279.426 l
216.343 279.604 l
216.555 279.783 l
216.767 279.961 l
217.121 280.258 l
217.262 280.376 l
217.616 280.672 l
217.757 280.790 l
217.898 280.908 l
218.111 281.085 l
218.464 281.379 l
218.535 281.437 l
218.747 281.613 l
218.959 281.789 l
219.171 281.965 l
219.454 282.199 l
219.737 282.432 l
219.878 282.549 l
220.090 282.723 l
220.373 282.956 l
220.515 283.072 l
220.656 283.188 l
220.797 283.304 l
221.080 283.535 l
221.363 283.766 l
221.575 283.939 l
221.717 284.054 l
222.070 284.342 l
222.353 284.572 l
222.707 284.858 l
223.060 285.144 l
223.343 285.372 l
223.626 285.600 l
223.838 285.771 l
223.979 285.884 l
224.191 286.055 l
224.474 286.281 l
224.616 286.395 l
224.828 286.564 l
225.111 286.790 l
225.323 286.959 l
225.676 287.241 l
225.959 287.465 l
226.242 287.689 l
226.525 287.913 l
226.666 288.025 l
226.878 288.193 l
227.020 288.304 l
227.232 288.471 l
227.515 288.694 l
227.656 288.805 l
227.939 289.027 l
228.151 289.193 l
228.434 289.415 l
228.505 289.470 l
228.575 289.525 l
228.787 289.691 l
229.141 289.967 l
229.424 290.187 l
229.777 290.461 l
229.989 290.626 l
230.202 290.790 l
230.555 291.063 l
230.767 291.227 l
231.121 291.499 l
231.333 291.662 l
231.474 291.771 l
231.545 291.825 l
231.616 291.879 l
231.898 292.096 l
232.181 292.313 l
232.323 292.421 l
232.606 292.637 l
232.818 292.799 l
233.030 292.960 l
233.242 293.121 l
233.383 293.229 l
233.666 293.443 l
233.949 293.658 l
234.232 293.871 l
234.515 294.085 l
234.797 294.298 l
235.080 294.511 l
235.151 294.564 l
235.222 294.617 l
235.505 294.829 l
235.787 295.041 l
236.070 295.253 l
236.424 295.517 l
236.707 295.728 l
236.848 295.833 l
237.131 296.043 l
237.414 296.253 l
237.767 296.515 l
238.050 296.724 l
238.333 296.933 l
238.757 297.246 l
239.111 297.506 l
239.393 297.713 l
239.676 297.920 l
239.959 298.127 l
240.242 298.334 l
240.525 298.540 l
240.808 298.746 l
241.020 298.900 l
241.373 299.156 l
241.656 299.361 l
241.939 299.566 l
242.363 299.872 l
242.505 299.974 l
242.646 300.076 l
242.929 300.279 l
243.282 300.533 l
243.353 300.583 l
243.424 300.634 l
243.777 300.887 l
243.919 300.988 l
244.202 301.190 l
244.414 301.341 l
244.767 301.593 l
245.050 301.794 l
245.191 301.894 l
245.474 302.094 l
245.828 302.345 l
246.040 302.494 l
246.323 302.694 l
246.676 302.943 l
246.818 303.042 l
246.888 303.092 l
246.959 303.141 l
247.030 303.191 l
247.383 303.439 l
247.666 303.637 l
247.878 303.785 l
248.232 304.032 l
248.373 304.131 l
248.727 304.377 l
249.080 304.622 l
249.292 304.769 l
249.505 304.916 l
249.858 305.161 l
250.282 305.453 l
250.494 305.599 l
250.919 305.891 l
251.202 306.085 l
251.414 306.231 l
251.767 306.473 l
252.121 306.714 l
252.333 306.859 l
252.686 307.099 l
252.757 307.147 l
252.828 307.195 l
253.181 307.435 l
253.323 307.531 l
253.747 307.818 l
253.959 307.962 l
254.101 308.057 l
254.454 308.295 l
254.737 308.486 l
254.808 308.533 l
255.090 308.723 l
255.373 308.913 l
255.585 309.055 l
255.939 309.291 l
256.080 309.386 l
256.292 309.527 l
256.575 309.716 l
256.858 309.904 l
256.999 309.998 l
257.212 310.139 l
257.494 310.326 l
257.636 310.420 l
257.777 310.513 l
258.060 310.700 l
258.414 310.933 l
258.555 311.026 l
258.838 311.213 l
258.979 311.306 l
259.262 311.491 l
259.474 311.630 l
259.757 311.815 l
259.898 311.908 l
260.111 312.046 l
260.393 312.231 l
260.676 312.415 l
261.030 312.645 l
261.313 312.829 l
261.454 312.921 l
261.595 313.012 l
261.949 313.241 l
262.090 313.332 l
262.303 313.469 l
262.656 313.697 l
262.939 313.879 l
263.434 314.197 l
263.575 314.288 l
263.929 314.514 l
263.999 314.559 l
264.070 314.604 l
264.212 314.695 l
264.282 314.740 l
264.353 314.785 l
264.636 314.965 l
264.919 315.146 l
265.272 315.370 l
265.343 315.415 l
265.414 315.460 l
265.838 315.729 l
266.191 315.953 l
266.474 316.131 l
266.757 316.310 l
267.040 316.488 l
267.252 316.621 l
267.535 316.799 l
267.676 316.887 l
267.959 317.065 l
268.101 317.153 l
268.454 317.374 l
268.737 317.551 l
268.949 317.683 l
269.232 317.859 l
269.444 317.991 l
269.515 318.034 l
269.585 318.078 l
269.656 318.122 l
269.939 318.298 l
270.080 318.385 l
270.292 318.516 l
270.717 318.779 l
270.787 318.822 l
270.858 318.866 l
271.212 319.084 l
271.494 319.257 l
271.636 319.344 l
271.919 319.518 l
272.060 319.605 l
272.131 319.648 l
272.202 319.691 l
272.555 319.907 l
272.838 320.080 l
272.979 320.166 l
273.333 320.382 l
273.616 320.554 l
273.898 320.726 l
274.323 320.983 l
274.535 321.111 l
274.818 321.282 l
274.888 321.325 l
274.959 321.367 l
275.171 321.495 l
275.454 321.666 l
275.737 321.836 l
276.020 322.006 l
276.161 322.091 l
276.373 322.218 l
276.444 322.260 l
276.515 322.302 l
276.797 322.472 l
277.080 322.641 l
277.363 322.809 l
277.646 322.978 l
277.999 323.188 l
278.353 323.398 l
278.636 323.566 l
278.919 323.733 l
279.272 323.942 l
279.626 324.150 l
279.909 324.317 l
280.191 324.483 l
280.404 324.608 l
280.616 324.732 l
280.757 324.815 l
281.111 325.022 l
281.535 325.270 l
281.818 325.434 l
281.959 325.517 l
282.030 325.558 l
282.101 325.599 l
282.242 325.681 l
282.595 325.887 l
283.020 326.133 l
283.090 326.174 l
283.161 326.215 l
283.373 326.337 l
283.515 326.419 l
284.010 326.704 l
284.151 326.786 l
284.222 326.827 l
284.292 326.867 l
284.646 327.071 l
284.858 327.192 l
285.070 327.314 l
285.212 327.395 l
285.494 327.557 l
285.777 327.718 l
285.848 327.759 l
285.919 327.799 l
286.131 327.920 l
286.414 328.081 l
286.484 328.121 l
286.555 328.162 l
286.838 328.322 l
287.050 328.443 l
287.333 328.603 l
287.616 328.763 l
287.757 328.843 l
287.969 328.963 l
288.181 329.083 l
288.393 329.203 l
288.464 329.242 l
288.535 329.282 l
288.606 329.322 l
288.676 329.362 l
288.747 329.402 l
288.818 329.442 l
289.030 329.561 l
289.101 329.600 l
289.171 329.640 l
289.454 329.799 l
289.808 329.997 l
290.090 330.155 l
290.373 330.313 l
290.656 330.471 l
290.727 330.510 l
290.797 330.550 l
291.151 330.746 l
291.434 330.903 l
291.575 330.982 l
291.787 331.099 l
291.929 331.178 l
291.999 331.217 l
292.212 331.334 l
292.282 331.373 l
292.424 331.452 l
292.565 331.530 l
292.636 331.569 l
292.777 331.647 l
293.060 331.803 l
293.272 331.919 l
293.343 331.958 l
293.414 331.997 l
293.484 332.036 l
293.555 332.075 l
293.838 332.230 l
294.050 332.346 l
294.191 332.424 l
294.474 332.579 l
294.757 332.733 l
295.111 332.926 l
295.464 333.119 l
295.747 333.272 l
296.030 333.426 l
296.171 333.503 l
296.242 333.541 l
296.313 333.580 l
296.454 333.656 l
296.525 333.694 l
296.595 333.733 l
296.666 333.771 l
296.737 333.809 l
296.949 333.924 l
297.090 334.000 l
297.161 334.038 l
297.232 334.077 l
297.515 334.229 l
297.727 334.343 l
298.151 334.571 l
298.575 334.799 l
298.858 334.951 l
299.282 335.177 l
299.494 335.291 l
299.707 335.404 l
300.131 335.630 l
300.272 335.705 l
300.343 335.742 l
300.414 335.780 l
300.909 336.043 l
301.333 336.267 l
301.757 336.491 l
302.040 336.641 l
302.111 336.678 l
302.181 336.715 l
302.393 336.827 l
302.818 337.050 l
303.171 337.235 l
303.313 337.309 l
303.595 337.458 l
303.878 337.605 l
304.161 337.753 l
304.515 337.937 l
304.868 338.121 l
305.151 338.268 l
305.292 338.342 l
305.434 338.415 l
305.575 338.488 l
305.858 338.635 l
306.070 338.745 l
306.353 338.891 l
306.565 339.000 l
306.636 339.037 l
306.989 339.219 l
307.272 339.364 l
307.626 339.546 l
307.909 339.691 l
308.191 339.836 l
308.474 339.981 l
308.757 340.125 l
309.040 340.269 l
309.464 340.485 l
309.888 340.701 l
310.242 340.880 l
310.454 340.988 l
310.737 341.131 l
310.808 341.167 l
310.878 341.202 l
311.232 341.381 l
311.303 341.417 l
311.585 341.559 l
311.797 341.666 l
311.939 341.737 l
312.010 341.773 l
312.080 341.808 l
312.151 341.844 l
312.292 341.915 l
312.363 341.950 l
312.646 342.092 l
312.858 342.198 l
312.999 342.269 l
313.070 342.304 l
313.282 342.410 l
313.353 342.446 l
313.424 342.481 l
313.636 342.587 l
313.919 342.728 l
314.060 342.798 l
314.484 343.009 l
314.838 343.185 l
314.979 343.255 l
315.404 343.465 l
315.757 343.640 l
315.969 343.745 l
316.040 343.780 l
316.111 343.814 l
316.323 343.919 l
316.464 343.989 l
316.747 344.128 l
317.030 344.267 l
317.383 344.440 l
317.525 344.510 l
317.595 344.544 l
317.878 344.683 l
317.949 344.717 l
318.020 344.752 l
318.232 344.855 l
318.302 344.890 l
318.373 344.924 l
318.656 345.062 l
318.939 345.200 l
319.222 345.338 l
319.575 345.509 l
319.787 345.612 l
319.858 345.647 l
319.929 345.681 l
320.141 345.784 l
320.212 345.818 l
320.282 345.852 l
320.565 345.989 l
320.919 346.159 l
321.131 346.262 l
321.414 346.398 l
321.626 346.500 l
321.767 346.568 l
321.838 346.602 l
321.909 346.636 l
322.050 346.704 l
322.474 346.907 l
322.545 346.941 l
322.686 347.009 l
322.757 347.042 l
322.828 347.076 l
322.898 347.110 l
322.969 347.144 l
323.040 347.178 l
323.393 347.346 l
323.747 347.515 l
324.030 347.649 l
324.101 347.683 l
324.171 347.717 l
324.383 347.817 l
324.595 347.918 l
324.737 347.985 l
324.808 348.018 l
324.949 348.085 l
325.232 348.219 l
325.373 348.286 l
325.585 348.386 l
325.797 348.486 l
326.151 348.653 l
326.717 348.919 l
326.858 348.986 l
326.929 349.019 l
326.999 349.052 l
327.070 349.085 l
327.141 349.118 l
327.494 349.284 l
327.777 349.416 l
327.989 349.515 l
328.484 349.746 l
328.838 349.911 l
329.050 350.009 l
329.474 350.206 l
329.828 350.370 l
329.898 350.403 l
329.969 350.436 l
330.111 350.501 l
330.606 350.730 l
330.888 350.860 l
331.101 350.958 l
331.313 351.056 l
331.525 351.153 l
331.808 351.283 l
332.232 351.478 l
332.656 351.672 l
333.080 351.866 l
333.363 351.995 l
333.858 352.220 l
334.212 352.381 l
334.565 352.542 l
334.848 352.670 l
334.919 352.702 l
334.989 352.734 l
335.272 352.862 l
335.626 353.021 l
335.909 353.149 l
336.262 353.308 l
336.616 353.467 l
337.040 353.658 l
337.323 353.784 l
337.535 353.879 l
337.747 353.974 l
338.100 354.132 l
338.242 354.195 l
338.313 354.227 l
338.525 354.322 l
338.878 354.479 l
339.090 354.573 l
339.232 354.636 l
339.302 354.668 l
339.515 354.762 l
339.727 354.856 l
339.868 354.918 l
339.939 354.950 l
340.010 354.981 l
340.080 355.012 l
340.292 355.106 l
340.646 355.262 l
340.858 355.356 l
340.999 355.418 l
341.070 355.450 l
341.141 355.481 l
341.212 355.512 l
341.494 355.636 l
341.565 355.667 l
341.636 355.698 l
341.848 355.792 l
342.272 355.978 l
342.343 356.009 l
342.414 356.040 l
342.484 356.071 l
342.555 356.102 l
342.767 356.195 l
342.838 356.225 l
342.909 356.256 l
343.262 356.411 l
343.333 356.442 l
343.404 356.473 l
343.757 356.627 l
343.898 356.688 l
344.111 356.780 l
344.252 356.842 l
344.676 357.026 l
344.959 357.149 l
345.242 357.271 l
345.595 357.424 l
345.666 357.455 l
345.737 357.485 l
345.878 357.546 l
345.949 357.577 l
346.020 357.607 l
346.090 357.638 l
346.373 357.760 l
346.444 357.790 l
346.515 357.820 l
346.585 357.851 l
346.656 357.881 l
346.939 358.003 l
347.010 358.033 l
347.151 358.094 l
347.363 358.185 l
347.505 358.246 l
347.575 358.276 l
347.717 358.336 l
347.858 358.397 l
347.929 358.427 l
347.999 358.457 l
348.070 358.488 l
348.282 358.578 l
348.353 358.608 l
348.424 358.639 l
348.494 358.669 l
348.636 358.729 l
348.707 358.759 l
348.777 358.789 l
348.989 358.880 l
349.272 359.000 l
349.414 359.060 l
349.484 359.090 l
349.555 359.120 l
349.626 359.150 l
349.696 359.180 l
349.909 359.270 l
350.262 359.420 l
350.333 359.450 l
350.404 359.480 l
350.616 359.570 l
350.757 359.630 l
350.828 359.660 l
350.969 359.719 l
351.040 359.749 l
351.323 359.868 l
351.393 359.898 l
351.464 359.928 l
351.535 359.958 l
351.606 359.988 l
351.747 360.047 l
351.959 360.136 l
352.030 360.166 l
352.171 360.226 l
352.313 360.285 l
352.595 360.404 l
352.737 360.463 l
352.808 360.492 l
352.878 360.522 l
352.949 360.552 l
353.090 360.611 l
353.302 360.700 l
353.585 360.818 l
353.656 360.847 l
353.727 360.877 l
353.868 360.936 l
353.939 360.965 l
354.292 361.112 l
354.363 361.142 l
354.434 361.171 l
354.575 361.230 l
354.646 361.260 l
354.717 361.289 l
354.858 361.348 l
355.141 361.465 l
355.212 361.494 l
355.353 361.553 l
355.494 361.612 l
355.777 361.729 l
355.989 361.816 l
356.060 361.846 l
356.131 361.875 l
356.201 361.904 l
356.272 361.933 l
356.484 362.021 l
356.555 362.050 l
356.626 362.079 l
356.696 362.108 l
356.767 362.137 l
356.909 362.196 l
356.979 362.225 l
357.050 362.254 l
357.191 362.312 l
357.262 362.341 l
357.474 362.428 l
357.969 362.631 l
358.252 362.747 l
358.535 362.863 l
358.676 362.921 l
358.888 363.007 l
358.959 363.036 l
359.313 363.180 l
359.454 363.238 l
359.595 363.295 l
359.666 363.324 l
359.878 363.411 l
359.949 363.439 l
360.090 363.497 l
360.161 363.525 l
360.232 363.554 l
360.515 363.669 l
360.797 363.784 l
361.010 363.869 l
361.292 363.984 l
361.575 364.098 l
361.646 364.127 l
361.717 364.155 l
361.858 364.212 l
361.929 364.241 l
362.141 364.326 l
362.212 364.355 l
362.353 364.412 l
362.636 364.525 l
362.777 364.582 l
362.848 364.611 l
363.060 364.696 l
363.343 364.809 l
363.626 364.922 l
363.696 364.951 l
363.767 364.979 l
363.838 365.007 l
363.909 365.035 l
363.979 365.064 l
364.121 365.120 l
364.191 365.148 l
364.262 365.177 l
364.333 365.205 l
364.404 365.233 l
364.616 365.318 l
364.686 365.346 l
364.757 365.374 l
364.828 365.402 l
364.969 365.459 l
365.323 365.599 l
365.393 365.627 l
365.464 365.655 l
365.606 365.712 l
365.676 365.740 l
365.818 365.796 l
365.888 365.824 l
366.030 365.880 l
366.101 365.908 l
366.242 365.964 l
366.454 366.048 l
366.808 366.188 l
366.878 366.215 l
366.949 366.243 l
367.020 366.271 l
367.090 366.299 l
367.161 366.327 l
367.232 366.355 l
367.373 366.411 l
367.444 366.439 l
367.585 366.494 l
367.797 366.578 l
368.080 366.689 l
368.363 366.800 l
368.434 366.828 l
368.505 366.856 l
368.787 366.967 l
368.858 366.994 l
369.141 367.105 l
369.424 367.216 l
369.636 367.298 l
369.989 367.436 l
370.060 367.464 l
370.131 367.491 l
370.272 367.547 l
370.343 367.574 l
370.414 367.602 l
370.626 367.684 l
371.050 367.849 l
371.333 367.959 l
371.545 368.041 l
371.616 368.068 l
371.686 368.096 l
371.757 368.123 l
371.898 368.178 l
372.111 368.260 l
372.535 368.424 l
372.959 368.587 l
373.171 368.669 l
373.242 368.696 l
373.313 368.723 l
373.454 368.778 l
373.525 368.805 l
373.595 368.832 l
373.666 368.859 l
373.737 368.886 l
373.808 368.914 l
373.949 368.968 l
374.020 368.995 l
374.373 369.130 l
374.444 369.158 l
374.515 369.185 l
374.585 369.212 l
374.656 369.239 l
374.868 369.320 l
375.010 369.374 l
375.434 369.536 l
375.717 369.644 l
376.070 369.778 l
376.212 369.832 l
376.282 369.859 l
376.424 369.913 l
376.494 369.939 l
376.565 369.966 l
376.989 370.127 l
377.060 370.154 l
377.201 370.207 l
377.272 370.234 l
377.414 370.288 l
377.696 370.395 l
377.838 370.448 l
377.909 370.475 l
378.333 370.635 l
378.474 370.688 l
378.545 370.715 l
378.616 370.741 l
378.969 370.874 l
379.040 370.901 l
379.111 370.928 l
379.181 370.954 l
379.252 370.981 l
379.323 371.007 l
379.393 371.034 l
379.676 371.140 l
379.818 371.193 l
379.888 371.219 l
379.959 371.246 l
380.030 371.272 l
380.313 371.378 l
380.525 371.457 l
380.666 371.510 l
380.737 371.537 l
380.808 371.563 l
380.878 371.589 l
381.161 371.695 l
381.373 371.774 l
381.444 371.800 l
381.515 371.827 l
382.010 372.011 l
382.080 372.037 l
382.151 372.063 l
382.222 372.089 l
382.292 372.116 l
382.363 372.142 l
382.434 372.168 l
382.858 372.325 l
382.929 372.351 l
382.999 372.378 l
383.070 372.404 l
383.141 372.430 l
383.212 372.456 l
383.494 372.560 l
383.777 372.665 l
384.060 372.769 l
384.414 372.899 l
384.838 373.055 l
384.909 373.081 l
384.979 373.107 l
385.191 373.185 l
385.262 373.211 l
385.333 373.237 l
385.474 373.289 l
385.545 373.314 l
385.616 373.340 l
385.828 373.418 l
385.898 373.444 l
385.969 373.470 l
386.040 373.496 l
386.181 373.547 l
386.464 373.651 l
386.747 373.754 l
387.030 373.857 l
387.383 373.985 l
387.525 374.037 l
387.595 374.062 l
387.737 374.114 l
387.808 374.139 l
387.878 374.165 l
388.090 374.242 l
388.161 374.268 l
388.232 374.293 l
388.302 374.319 l
388.515 374.396 l
388.868 374.524 l
388.939 374.549 l
389.010 374.575 l
389.080 374.600 l
389.222 374.651 l
389.363 374.702 l
389.434 374.728 l
389.504 374.753 l
389.999 374.932 l
390.070 374.957 l
390.141 374.983 l
390.565 375.135 l
390.636 375.160 l
390.848 375.236 l
390.919 375.262 l
390.989 375.287 l
391.060 375.313 l
391.131 375.338 l
391.201 375.363 l
391.272 375.388 l
391.343 375.414 l
391.414 375.439 l
391.838 375.591 l
391.909 375.616 l
391.979 375.641 l
392.191 375.717 l
392.262 375.742 l
392.333 375.767 l
392.616 375.868 l
392.686 375.893 l
392.757 375.919 l
392.898 375.969 l
393.111 376.044 l
393.181 376.070 l
393.252 376.095 l
393.393 376.145 l
393.464 376.170 l
393.747 376.270 l
393.959 376.346 l
394.030 376.371 l
394.171 376.421 l
394.383 376.496 l
394.737 376.621 l
395.020 376.721 l
395.090 376.746 l
395.161 376.770 l
395.232 376.795 l
395.373 376.845 l
395.727 376.970 l
395.797 376.995 l
395.868 377.020 l
395.939 377.044 l
396.010 377.069 l
396.292 377.169 l
396.363 377.193 l
396.434 377.218 l
396.646 377.293 l
396.929 377.392 l
397.070 377.441 l
397.141 377.466 l
397.212 377.491 l
397.353 377.540 l
397.494 377.590 l
397.636 377.639 l
397.848 377.713 l
398.272 377.861 l
398.484 377.935 l
398.555 377.960 l
398.626 377.984 l
398.838 378.058 l
399.191 378.181 l
399.474 378.279 l
399.545 378.304 l
399.757 378.377 l
399.898 378.426 l
399.969 378.451 l
400.040 378.475 l
400.111 378.499 l
400.323 378.573 l
400.747 378.719 l
400.818 378.744 l
400.888 378.768 l
401.100 378.841 l
401.171 378.866 l
401.313 378.914 l
401.525 378.987 l
401.595 379.012 l
401.737 379.060 l
401.878 379.109 l
401.949 379.133 l
402.020 379.158 l
402.232 379.230 l
402.444 379.303 l
402.727 379.400 l
402.797 379.424 l
402.868 379.449 l
403.080 379.521 l
403.504 379.666 l
403.575 379.690 l
403.646 379.714 l
404.070 379.859 l
404.141 379.883 l
404.212 379.907 l
404.353 379.955 l
404.424 379.980 l
404.494 380.004 l
404.636 380.052 l
404.777 380.100 l
404.848 380.124 l
404.989 380.172 l
405.060 380.196 l
405.201 380.244 l
405.343 380.292 l
405.484 380.340 l
405.555 380.364 l
406.050 380.531 l
406.121 380.555 l
406.191 380.579 l
406.474 380.675 l
406.616 380.722 l
406.686 380.746 l
406.757 380.770 l
406.828 380.794 l
406.898 380.818 l
407.040 380.866 l
407.111 380.889 l
407.181 380.913 l
407.393 380.985 l
407.676 381.080 l
407.747 381.103 l
407.888 381.151 l
408.100 381.222 l
408.595 381.388 l
408.737 381.436 l
408.878 381.483 l
408.949 381.507 l
409.232 381.601 l
409.444 381.672 l
409.515 381.696 l
409.585 381.719 l
409.939 381.837 l
410.080 381.884 l
410.151 381.908 l
410.222 381.931 l
410.504 382.025 l
410.575 382.049 l
410.646 382.072 l
410.787 382.119 l
410.929 382.166 l
411.070 382.213 l
411.141 382.237 l
411.565 382.377 l
411.636 382.401 l
411.707 382.424 l
411.777 382.448 l
411.919 382.494 l
412.343 382.635 l
412.414 382.658 l
412.484 382.681 l
412.555 382.705 l
412.626 382.728 l
412.838 382.798 l
412.909 382.821 l
412.979 382.845 l
413.333 382.961 l
413.616 383.054 l
413.686 383.077 l
413.757 383.101 l
413.969 383.170 l
414.111 383.217 l
414.181 383.240 l
414.393 383.309 l
414.747 383.425 l
415.030 383.518 l
415.100 383.541 l
415.171 383.564 l
415.313 383.610 l
415.383 383.633 l
415.525 383.679 l
415.666 383.726 l
415.737 383.749 l
415.808 383.772 l
416.161 383.887 l
416.515 384.002 l
416.797 384.094 l
416.868 384.117 l
416.939 384.140 l
417.151 384.209 l
417.222 384.232 l
417.292 384.255 l
417.434 384.300 l
417.504 384.323 l
417.646 384.369 l
417.858 384.438 l
417.929 384.461 l
418.212 384.552 l
418.636 384.689 l
418.777 384.735 l
418.848 384.757 l
418.919 384.780 l
419.060 384.826 l
419.131 384.849 l
419.343 384.917 l
419.555 384.985 l
419.626 385.008 l
419.696 385.031 l
419.767 385.053 l
419.909 385.099 l
420.050 385.144 l
420.121 385.167 l
420.191 385.190 l
420.474 385.280 l
420.828 385.393 l
421.323 385.552 l
421.464 385.597 l
421.535 385.619 l
421.606 385.642 l
421.818 385.710 l
421.959 385.755 l
422.242 385.845 l
422.313 385.867 l
422.383 385.890 l
422.595 385.957 l
422.666 385.980 l
422.737 386.002 l
422.949 386.070 l
423.020 386.092 l
423.161 386.137 l
423.232 386.159 l
423.373 386.204 l
423.444 386.227 l
423.515 386.249 l
423.727 386.316 l
423.797 386.339 l
423.868 386.361 l
424.151 386.451 l
424.504 386.562 l
424.646 386.607 l
424.717 386.629 l
424.787 386.652 l
424.929 386.696 l
425.282 386.808 l
425.494 386.874 l
425.565 386.897 l
425.636 386.919 l
425.707 386.941 l
425.777 386.963 l
425.989 387.030 l
426.131 387.074 l
426.201 387.096 l
426.272 387.119 l
426.414 387.163 l
426.838 387.296 l
426.979 387.340 l
427.121 387.384 l
427.616 387.539 l
427.686 387.561 l
427.757 387.583 l
427.828 387.605 l
427.969 387.649 l
428.393 387.782 l
428.606 387.848 l
428.676 387.870 l
428.747 387.892 l
428.888 387.935 l
429.030 387.979 l
429.383 388.089 l
429.454 388.111 l
429.808 388.221 l
429.949 388.264 l
430.020 388.286 l
430.090 388.308 l
430.232 388.352 l
430.585 388.461 l
430.939 388.570 l
431.080 388.614 l
431.151 388.636 l
431.222 388.658 l
431.292 388.679 l
431.504 388.745 l
431.717 388.810 l
431.787 388.832 l
431.858 388.853 l
432.212 388.962 l
432.494 389.049 l
432.565 389.070 l
432.636 389.092 l
432.919 389.179 l
432.989 389.200 l
433.060 389.222 l
433.201 389.265 l
433.272 389.287 l
433.414 389.330 l
433.626 389.395 l
433.767 389.438 l
433.838 389.460 l
434.121 389.546 l
434.474 389.654 l
434.545 389.675 l
434.686 389.718 l
434.828 389.762 l
434.898 389.783 l
434.969 389.805 l
435.393 389.933 l
435.676 390.019 l
436.100 390.148 l
436.313 390.212 l
436.383 390.233 l
436.595 390.297 l
436.878 390.383 l
437.020 390.426 l
437.090 390.447 l
437.161 390.468 l
437.302 390.511 l
437.727 390.639 l
437.868 390.681 l
437.939 390.703 l
438.010 390.724 l
438.151 390.766 l
438.434 390.851 l
438.575 390.894 l
438.646 390.915 l
438.787 390.957 l
438.858 390.979 l
438.999 391.021 l
439.212 391.085 l
439.282 391.106 l
439.353 391.127 l
439.707 391.233 l
440.131 391.359 l
440.272 391.401 l
440.343 391.423 l
440.414 391.444 l
440.555 391.486 l
440.979 391.612 l
441.262 391.696 l
441.333 391.717 l
441.403 391.738 l
441.898 391.885 l
441.969 391.906 l
442.040 391.927 l
442.111 391.948 l
442.181 391.969 l
442.252 391.990 l
442.323 392.011 l
442.393 392.032 l
442.464 392.053 l
442.606 392.095 l
442.959 392.199 l
443.030 392.220 l
443.100 392.241 l
443.313 392.304 l
443.383 392.324 l
443.454 392.345 l
443.595 392.387 l
443.666 392.408 l
443.737 392.429 l
443.878 392.470 l
444.161 392.554 l
444.302 392.595 l
444.373 392.616 l
444.656 392.699 l
445.080 392.824 l
445.222 392.865 l
445.292 392.886 l
445.363 392.907 l
445.575 392.969 l
445.929 393.072 l
446.353 393.196 l
446.707 393.299 l
446.777 393.320 l
446.919 393.361 l
447.060 393.402 l
447.131 393.423 l
447.201 393.443 l
447.272 393.464 l
447.343 393.485 l
447.484 393.526 l
447.555 393.546 l
447.626 393.567 l
447.979 393.670 l
448.050 393.690 l
448.121 393.711 l
448.403 393.793 l
448.474 393.813 l
448.545 393.834 l
448.686 393.875 l
448.828 393.916 l
448.969 393.956 l
449.040 393.977 l
449.181 394.018 l
449.252 394.038 l
449.393 394.079 l
449.535 394.120 l
449.606 394.140 l
449.747 394.181 l
450.171 394.303 l
450.313 394.344 l
450.383 394.365 l
450.454 394.385 l
450.525 394.405 l
450.666 394.446 l
450.737 394.466 l
450.808 394.487 l
450.878 394.507 l
450.949 394.527 l
451.090 394.568 l
451.373 394.649 l
451.444 394.669 l
451.515 394.690 l
451.797 394.771 l
451.868 394.791 l
451.939 394.811 l
452.080 394.852 l
452.151 394.872 l
452.222 394.892 l
452.363 394.933 l
452.717 395.034 l
452.858 395.074 l
452.929 395.094 l
453.070 395.134 l
453.141 395.155 l
453.212 395.175 l
453.282 395.195 l
453.353 395.215 l
453.565 395.275 l
453.707 395.316 l
453.777 395.336 l
453.919 395.376 l
453.989 395.396 l
454.131 395.436 l
454.555 395.557 l
454.626 395.577 l
454.696 395.597 l
454.767 395.617 l
454.838 395.637 l
454.909 395.657 l
454.979 395.677 l
455.333 395.777 l
455.403 395.797 l
455.474 395.817 l
455.898 395.937 l
456.040 395.977 l
456.111 395.997 l
456.181 396.017 l
456.252 396.037 l
456.323 396.057 l
456.393 396.077 l
456.676 396.157 l
457.171 396.296 l
457.313 396.336 l
457.383 396.355 l
457.454 396.375 l
457.595 396.415 l
457.666 396.435 l
457.737 396.455 l
457.949 396.514 l
458.020 396.534 l
458.161 396.574 l
458.232 396.593 l
458.302 396.613 l
458.373 396.633 l
458.444 396.653 l
458.656 396.712 l
458.727 396.732 l
458.797 396.752 l
459.010 396.811 l
459.292 396.890 l
459.363 396.910 l
459.505 396.949 l
459.787 397.028 l
459.929 397.068 l
459.999 397.087 l
460.282 397.166 l
460.777 397.304 l
460.919 397.343 l
460.989 397.362 l
461.060 397.382 l
461.201 397.421 l
461.272 397.441 l
461.343 397.461 l
461.555 397.519 l
461.626 397.539 l
461.767 397.578 l
461.838 397.598 l
461.909 397.617 l
462.050 397.656 l
462.121 397.676 l
462.191 397.695 l
462.545 397.793 l
462.616 397.813 l
462.686 397.832 l
462.969 397.910 l
463.040 397.930 l
463.111 397.949 l
463.464 398.046 l
463.535 398.066 l
463.606 398.085 l
463.888 398.163 l
463.959 398.182 l
464.030 398.202 l
464.171 398.241 l
464.242 398.260 l
464.313 398.280 l
464.383 398.299 l
464.454 398.318 l
464.525 398.338 l
464.878 398.435 l
464.949 398.454 l
465.020 398.473 l
465.232 398.531 l
465.302 398.551 l
465.373 398.570 l
465.444 398.589 l
465.515 398.609 l
465.727 398.667 l
465.797 398.686 l
465.868 398.705 l
466.292 398.821 l
466.434 398.860 l
466.504 398.879 l
466.575 398.898 l
466.646 398.917 l
466.717 398.937 l
466.787 398.956 l
466.929 398.994 l
466.999 399.014 l
467.070 399.033 l
467.212 399.071 l
467.282 399.090 l
467.353 399.110 l
467.636 399.186 l
467.707 399.206 l
467.777 399.225 l
468.131 399.321 l
468.201 399.340 l
468.272 399.359 l
468.484 399.416 l
468.555 399.435 l
468.626 399.455 l
468.696 399.474 l
468.909 399.531 l
468.979 399.550 l
469.050 399.569 l
469.121 399.588 l
469.333 399.645 l
469.403 399.665 l
469.474 399.684 l
469.616 399.722 l
470.111 399.855 l
470.535 399.969 l
471.030 400.102 l
471.171 400.140 l
471.242 400.159 l
471.383 400.197 l
471.454 400.216 l
471.525 400.235 l
471.595 400.254 l
471.666 400.273 l
471.878 400.329 l
471.949 400.348 l
472.020 400.367 l
472.090 400.386 l
472.161 400.405 l
472.232 400.424 l
472.515 400.499 l
472.939 400.613 l
473.222 400.688 l
473.292 400.707 l
473.363 400.726 l
473.434 400.744 l
473.504 400.763 l
473.575 400.782 l
473.787 400.838 l
473.858 400.857 l
473.929 400.876 l
473.999 400.895 l
474.070 400.913 l
474.353 400.989 l
474.494 401.026 l
474.565 401.045 l
474.777 401.101 l
474.848 401.120 l
474.989 401.157 l
475.272 401.232 l
475.343 401.251 l
475.414 401.269 l
475.484 401.288 l
475.626 401.325 l
475.767 401.363 l
475.838 401.381 l
475.909 401.400 l
476.121 401.456 l
476.191 401.475 l
476.262 401.493 l
476.403 401.531 l
476.898 401.661 l
477.323 401.772 l
477.464 401.810 l
477.535 401.828 l
477.676 401.865 l
477.747 401.884 l
477.888 401.921 l
478.030 401.958 l
478.100 401.977 l
478.171 401.995 l
478.242 402.014 l
478.383 402.051 l
478.454 402.069 l
478.525 402.088 l
478.595 402.106 l
478.666 402.125 l
478.808 402.162 l
478.878 402.180 l
478.949 402.199 l
479.232 402.272 l
479.302 402.291 l
479.444 402.328 l
479.797 402.420 l
479.939 402.457 l
480.010 402.475 l
480.222 402.530 l
480.292 402.549 l
480.363 402.567 l
480.434 402.585 l
480.504 402.604 l
480.787 402.677 l
480.858 402.696 l
480.929 402.714 l
481.424 402.842 l
481.848 402.952 l
481.989 402.989 l
482.060 403.007 l
482.201 403.044 l
482.272 403.062 l
482.414 403.099 l
482.909 403.226 l
483.333 403.336 l
483.403 403.354 l
483.474 403.372 l
483.828 403.463 l
483.898 403.481 l
483.969 403.499 l
484.111 403.536 l
484.181 403.554 l
484.252 403.572 l
484.393 403.608 l
484.464 403.626 l
484.535 403.645 l
484.818 403.717 l
484.888 403.735 l
484.959 403.753 l
485.030 403.771 l
485.171 403.808 l
485.313 403.844 l
485.383 403.862 l
485.525 403.898 l
485.878 403.988 l
486.020 404.024 l
486.090 404.043 l
486.373 404.115 l
486.444 404.133 l
486.585 404.169 l
486.868 404.241 l
486.939 404.259 l
487.010 404.277 l
487.080 404.295 l
487.151 404.313 l
487.292 404.349 l
487.363 404.367 l
487.434 404.385 l
487.504 404.403 l
487.575 404.421 l
487.929 404.510 l
487.999 404.528 l
488.141 404.564 l
488.353 404.618 l
488.424 404.636 l
488.494 404.654 l
488.636 404.689 l
489.060 404.797 l
489.201 404.832 l
489.272 404.850 l
489.343 404.868 l
489.414 404.886 l
489.484 404.904 l
489.626 404.940 l
490.121 405.064 l
490.262 405.100 l
490.333 405.118 l
490.545 405.171 l
490.616 405.189 l
490.686 405.207 l
490.757 405.224 l
490.828 405.242 l
491.040 405.295 l
491.111 405.313 l
491.252 405.349 l
491.676 405.455 l
491.747 405.473 l
491.818 405.491 l
492.313 405.614 l
492.454 405.650 l
492.525 405.667 l
492.595 405.685 l
492.808 405.738 l
492.878 405.756 l
492.949 405.773 l
493.161 405.826 l
493.232 405.844 l
493.302 405.862 l
493.373 405.879 l
493.444 405.897 l
493.727 405.967 l
493.797 405.985 l
493.939 406.020 l
494.363 406.126 l
494.434 406.143 l
494.504 406.161 l
494.858 406.248 l
494.929 406.266 l
494.999 406.283 l
495.424 406.389 l
495.494 406.406 l
495.565 406.424 l
495.707 406.459 l
495.777 406.476 l
495.848 406.494 l
495.989 406.528 l
496.060 406.546 l
496.131 406.563 l
496.484 406.651 l
496.555 406.668 l
496.626 406.686 l
496.767 406.720 l
496.838 406.738 l
496.909 406.755 l
496.979 406.773 l
497.050 406.790 l
497.121 406.808 l
497.191 406.825 l
497.333 406.860 l
497.545 406.912 l
497.616 406.929 l
497.686 406.947 l
497.828 406.981 l
497.898 406.999 l
497.969 407.016 l
498.040 407.034 l
498.181 407.068 l
498.252 407.086 l
498.323 407.103 l
498.676 407.190 l
498.747 407.207 l
498.818 407.224 l
498.959 407.259 l
499.030 407.276 l
499.313 407.345 l
499.383 407.363 l
499.454 407.380 l
499.737 407.449 l
499.808 407.466 l
499.878 407.484 l
499.949 407.501 l
500.020 407.518 l
500.302 407.587 l
500.373 407.604 l
500.444 407.622 l
500.515 407.639 l
500.585 407.656 l
500.868 407.725 l
500.939 407.742 l
501.010 407.759 l
501.222 407.811 l
501.292 407.828 l
501.363 407.845 l
501.504 407.879 l
501.575 407.897 l
501.646 407.914 l
501.929 407.982 l
501.999 408.000 l
502.141 408.034 l
502.282 408.068 l
502.353 408.085 l
502.424 408.102 l
502.494 408.119 l
502.565 408.137 l
502.636 408.154 l
502.706 408.171 l
502.777 408.188 l
503.131 408.273 l
503.272 408.307 l
503.343 408.325 l
503.767 408.427 l
503.979 408.478 l
504.050 408.495 l
504.121 408.512 l
504.191 408.529 l
504.403 408.580 l
504.474 408.597 l
504.545 408.614 l
504.828 408.682 l
504.898 408.699 l
504.969 408.716 l
505.111 408.750 l
505.181 408.767 l
505.252 408.784 l
505.323 408.801 l
505.393 408.818 l
505.464 408.835 l
505.606 408.869 l
505.676 408.886 l
505.747 408.903 l
505.888 408.937 l
505.959 408.953 l
506.030 408.970 l
506.100 408.987 l
506.171 409.004 l
506.242 409.021 l
506.595 409.106 l
506.737 409.139 l
506.808 409.156 l
506.949 409.190 l
507.020 409.207 l
507.161 409.241 l
507.232 409.258 l
507.302 409.274 l
507.373 409.291 l
507.444 409.308 l
507.515 409.325 l
507.585 409.342 l
507.727 409.375 l
507.797 409.392 l
507.868 409.409 l
508.292 409.510 l
508.434 409.544 l
508.504 409.560 l
508.787 409.628 l
508.858 409.644 l
508.929 409.661 l
508.999 409.678 l
509.070 409.695 l
509.424 409.778 l
509.494 409.795 l
509.565 409.812 l
509.989 409.912 l
510.060 409.929 l
510.131 409.946 l
510.272 409.979 l
510.343 409.996 l
510.484 410.029 l
510.555 410.046 l
510.696 410.079 l
511.191 410.196 l
511.262 410.212 l
511.333 410.229 l
511.403 410.246 l
511.474 410.262 l
511.545 410.279 l
511.828 410.346 l
512.040 410.395 l
512.111 410.412 l
512.181 410.429 l
512.252 410.445 l
512.393 410.478 l
512.464 410.495 l
512.747 410.561 l
512.959 410.611 l
513.100 410.644 l
513.525 410.743 l
513.666 410.776 l
513.949 410.842 l
514.161 410.892 l
514.302 410.925 l
514.585 410.991 l
514.656 411.007 l
514.797 411.040 l
514.939 411.073 l
515.292 411.155 l
515.434 411.188 l
515.504 411.205 l
515.646 411.238 l
515.717 411.254 l
515.787 411.270 l
515.929 411.303 l
515.999 411.320 l
516.070 411.336 l
516.494 411.434 l
516.565 411.451 l
516.636 411.467 l
516.706 411.483 l
516.777 411.500 l
516.989 411.549 l
517.060 411.565 l
517.131 411.582 l
517.201 411.598 l
517.272 411.614 l
517.343 411.631 l
517.414 411.647 l
517.484 411.663 l
517.555 411.680 l
517.696 411.712 l
517.767 411.729 l
517.908 411.761 l
518.262 411.843 l
518.333 411.859 l
518.403 411.875 l
518.474 411.892 l
518.545 411.908 l
518.828 411.973 l
518.898 411.989 l
519.040 412.022 l
519.181 412.054 l
519.252 412.070 l
519.535 412.135 l
519.606 412.151 l
519.676 412.168 l
519.888 412.216 l
519.959 412.233 l
520.030 412.249 l
520.171 412.281 l
520.313 412.314 l
520.383 412.330 l
520.666 412.394 l
520.737 412.411 l
520.878 412.443 l
520.949 412.459 l
521.020 412.475 l
521.090 412.491 l
521.302 412.540 l
521.373 412.556 l
521.515 412.588 l
522.010 412.701 l
522.151 412.733 l
522.222 412.749 l
522.575 412.830 l
522.646 412.846 l
522.717 412.862 l
523.282 412.990 l
523.424 413.022 l
523.494 413.038 l
523.565 413.054 l
523.636 413.070 l
523.706 413.086 l
523.777 413.102 l
523.919 413.134 l
523.989 413.150 l
524.131 413.182 l
524.201 413.198 l
524.343 413.230 l
524.414 413.246 l
524.484 413.262 l
524.555 413.278 l
524.626 413.294 l
525.050 413.390 l
525.121 413.406 l
525.191 413.422 l
525.262 413.438 l
525.333 413.454 l
525.616 413.518 l
525.686 413.533 l
525.757 413.549 l
525.828 413.565 l
525.898 413.581 l
526.323 413.677 l
526.393 413.692 l
526.464 413.708 l
526.606 413.740 l
526.676 413.756 l
526.818 413.788 l
526.888 413.804 l
526.959 413.819 l
527.030 413.835 l
527.100 413.851 l
527.242 413.883 l
527.313 413.899 l
527.454 413.930 l
527.525 413.946 l
527.666 413.978 l
527.878 414.025 l
528.020 414.057 l
528.090 414.073 l
528.161 414.089 l
528.302 414.120 l
528.444 414.152 l
528.515 414.168 l
528.797 414.231 l
528.868 414.246 l
528.939 414.262 l
529.010 414.278 l
529.080 414.294 l
529.434 414.372 l
529.575 414.404 l
529.717 414.435 l
529.858 414.467 l
529.929 414.482 l
530.070 414.514 l
530.141 414.530 l
530.212 414.545 l
530.353 414.577 l
530.424 414.592 l
530.636 414.639 l
530.706 414.655 l
530.848 414.687 l
530.989 414.718 l
531.060 414.733 l
531.343 414.796 l
531.414 414.812 l
531.555 414.843 l
532.050 414.952 l
532.121 414.968 l
532.191 414.984 l
532.403 415.030 l
532.474 415.046 l
532.545 415.062 l
532.686 415.093 l
532.757 415.108 l
532.898 415.140 l
533.323 415.233 l
533.393 415.248 l
533.464 415.264 l
533.535 415.280 l
533.606 415.295 l
533.676 415.311 l
533.747 415.326 l
533.818 415.342 l
534.030 415.388 l
534.100 415.404 l
534.171 415.419 l
534.666 415.528 l
534.737 415.543 l
534.808 415.559 l
534.949 415.590 l
535.020 415.605 l
535.090 415.621 l
535.302 415.667 l
535.373 415.683 l
535.444 415.698 l
535.515 415.714 l
535.585 415.729 l
535.868 415.791 l
535.939 415.806 l
536.010 415.822 l
536.080 415.837 l
536.151 415.852 l
536.575 415.945 l
536.646 415.960 l
536.717 415.976 l
537.141 416.068 l
537.212 416.083 l
537.282 416.099 l
537.424 416.129 l
537.494 416.145 l
537.919 416.237 l
537.989 416.252 l
538.060 416.268 l
538.131 416.283 l
538.201 416.298 l
538.555 416.375 l
538.626 416.390 l
538.696 416.405 l
538.767 416.421 l
538.908 416.451 l
538.979 416.467 l
539.050 416.482 l
539.121 416.497 l
539.191 416.513 l
539.333 416.543 l
539.403 416.558 l
539.474 416.574 l
539.828 416.650 l
539.898 416.665 l
540.040 416.696 l
540.111 416.711 l
540.181 416.726 l
540.535 416.802 l
540.606 416.818 l
540.818 416.863 l
540.888 416.878 l
541.242 416.954 l
541.313 416.970 l
541.383 416.985 l
541.454 417.000 l
541.525 417.015 l
541.808 417.076 l
541.878 417.091 l
542.020 417.121 l
542.090 417.136 l
542.161 417.152 l
542.585 417.242 l
542.656 417.257 l
542.727 417.273 l
542.797 417.288 l
542.868 417.303 l
543.222 417.378 l
543.292 417.393 l
543.434 417.424 l
544.070 417.559 l
544.212 417.589 l
544.282 417.605 l
544.424 417.635 l
544.494 417.650 l
544.706 417.695 l
544.777 417.710 l
544.848 417.725 l
545.414 417.845 l
545.555 417.875 l
545.626 417.890 l
545.908 417.950 l
545.979 417.965 l
546.121 417.995 l
546.262 418.025 l
546.333 418.040 l
546.616 418.099 l
546.686 418.114 l
546.828 418.144 l
546.969 418.174 l
547.040 418.189 l
547.323 418.249 l
547.393 418.264 l
547.464 418.279 l
547.535 418.294 l
547.606 418.308 l
547.747 418.338 l
547.818 418.353 l
548.171 418.428 l
548.313 418.457 l
548.383 418.472 l
548.666 418.532 l
548.737 418.546 l
548.878 418.576 l
548.949 418.591 l
549.020 418.606 l
549.444 418.695 l
549.515 418.710 l
549.656 418.739 l
549.939 418.799 l
550.010 418.813 l
550.080 418.828 l
550.222 418.858 l
550.292 418.873 l
550.363 418.887 l
550.575 418.932 l
550.646 418.946 l
550.717 418.961 l
550.858 418.991 l
550.929 419.005 l
551.070 419.035 l
551.212 419.064 l
551.282 419.079 l
551.353 419.094 l
551.636 419.153 l
551.777 419.182 l
551.848 419.197 l
551.989 419.227 l
552.060 419.241 l
552.131 419.256 l
552.272 419.285 l
552.343 419.300 l
552.414 419.315 l
552.484 419.329 l
552.555 419.344 l
552.909 419.418 l
552.979 419.432 l
553.050 419.447 l
553.191 419.476 l
553.262 419.491 l
553.686 419.579 l
553.757 419.593 l
553.898 419.623 l
554.464 419.740 l
554.606 419.769 l
554.676 419.783 l
554.747 419.798 l
554.818 419.813 l
554.888 419.827 l
555.100 419.871 l
555.171 419.885 l
555.313 419.915 l
555.878 420.031 l
555.949 420.046 l
556.020 420.060 l
556.090 420.075 l
556.161 420.089 l
556.515 420.162 l
556.727 420.205 l
556.797 420.220 l
556.939 420.249 l
557.010 420.263 l
557.363 420.336 l
557.504 420.365 l
557.575 420.379 l
557.999 420.466 l
558.070 420.481 l
558.141 420.495 l
558.282 420.524 l
558.353 420.538 l
558.424 420.553 l
558.494 420.567 l
558.777 420.625 l
558.848 420.639 l
558.919 420.654 l
558.989 420.668 l
559.414 420.755 l
559.484 420.769 l
559.626 420.798 l
559.767 420.827 l
559.838 420.841 l
560.121 420.898 l
560.191 420.913 l
560.333 420.942 l
560.474 420.970 l
560.616 420.999 l
560.686 421.013 l
560.828 421.042 l
560.898 421.056 l
561.040 421.085 l
561.181 421.114 l
561.252 421.128 l
561.676 421.214 l
561.747 421.228 l
561.818 421.242 l
561.888 421.257 l
561.959 421.271 l
562.383 421.357 l
562.454 421.371 l
562.595 421.400 l
562.666 421.414 l
563.090 421.499 l
563.161 421.514 l
563.302 421.542 l
564.009 421.684 l
564.151 421.713 l
564.222 421.727 l
564.575 421.798 l
564.646 421.812 l
564.717 421.826 l
564.787 421.840 l
564.858 421.854 l
564.999 421.883 l
565.070 421.897 l
565.282 421.939 l
565.353 421.954 l
565.424 421.968 l
565.494 421.982 l
565.565 421.996 l
565.636 422.010 l
565.777 422.038 l
566.060 422.095 l
566.131 422.109 l
566.272 422.137 l
566.484 422.180 l
566.555 422.194 l
566.696 422.222 l
566.767 422.236 l
566.979 422.278 l
567.050 422.292 l
567.121 422.307 l
567.333 422.349 l
567.403 422.363 l
567.474 422.377 l
567.616 422.405 l
567.686 422.419 l
567.828 422.447 l
568.040 422.489 l
568.111 422.503 l
568.464 422.574 l
568.535 422.588 l
568.606 422.602 l
568.676 422.616 l
568.747 422.630 l
569.030 422.686 l
569.100 422.700 l
569.242 422.728 l
569.313 422.742 l
569.383 422.756 l
569.525 422.784 l
569.595 422.798 l
569.666 422.812 l
569.949 422.867 l
570.020 422.881 l
570.090 422.895 l
570.161 422.909 l
570.232 422.923 l
570.585 422.993 l
570.656 423.007 l
570.797 423.035 l
570.868 423.049 l
570.939 423.063 l
571.151 423.104 l
571.222 423.118 l
571.292 423.132 l
571.504 423.174 l
571.575 423.188 l
571.646 423.202 l
571.787 423.230 l
571.858 423.244 l
571.999 423.271 l
572.070 423.285 l
572.141 423.299 l
572.212 423.313 l
572.282 423.327 l
572.353 423.341 l
572.424 423.355 l
572.494 423.368 l
572.565 423.382 l
572.636 423.396 l
572.707 423.410 l
572.848 423.438 l
572.919 423.452 l
573.131 423.493 l
573.272 423.521 l
573.343 423.535 l
573.767 423.618 l
573.909 423.645 l
574.050 423.673 l
574.545 423.769 l
574.616 423.783 l
574.686 423.797 l
574.757 423.811 l
574.828 423.824 l
575.393 423.935 l
575.535 423.962 l
575.605 423.976 l
575.888 424.031 l
575.959 424.044 l
576.100 424.072 l
576.171 424.086 l
576.313 424.113 l
576.454 424.140 l
576.525 424.154 l
576.595 424.168 l
576.666 424.182 l
576.737 424.195 l
577.020 424.250 l
577.232 424.291 l
577.302 424.305 l
577.585 424.360 l
577.656 424.373 l
577.868 424.414 l
578.151 424.469 l
578.222 424.482 l
578.292 424.496 l
578.575 424.551 l
578.717 424.578 l
578.787 424.591 l
579.070 424.646 l
579.141 424.659 l
579.282 424.687 l
579.353 424.700 l
579.494 424.728 l
580.060 424.836 l
580.131 424.850 l
580.272 424.877 l
580.979 425.012 l
581.050 425.026 l
581.191 425.053 l
581.686 425.148 l
581.757 425.161 l
581.828 425.175 l
581.898 425.188 l
581.969 425.202 l
582.393 425.283 l
582.464 425.296 l
582.676 425.336 l
582.959 425.390 l
583.030 425.404 l
583.100 425.417 l
583.171 425.431 l
583.242 425.444 l
583.383 425.471 l
583.525 425.498 l
583.595 425.511 l
584.090 425.605 l
584.161 425.619 l
584.302 425.646 l
584.444 425.672 l
584.515 425.686 l
584.585 425.699 l
584.656 425.713 l
584.727 425.726 l
584.797 425.739 l
584.868 425.753 l
584.939 425.766 l
585.009 425.780 l
585.151 425.806 l
585.222 425.820 l
585.363 425.846 l
585.434 425.860 l
585.504 425.873 l
585.575 425.887 l
585.717 425.913 l
585.787 425.927 l
585.929 425.953 l
586.070 425.980 l
586.141 425.993 l
586.424 426.047 l
586.494 426.060 l
586.636 426.087 l
586.707 426.100 l
586.777 426.113 l
586.848 426.127 l
586.919 426.140 l
587.272 426.207 l
587.343 426.220 l
587.414 426.233 l
587.484 426.246 l
587.626 426.273 l
588.050 426.353 l
588.121 426.366 l
588.191 426.379 l
588.262 426.392 l
588.403 426.419 l
589.111 426.551 l
589.252 426.578 l
589.323 426.591 l
589.464 426.618 l
589.535 426.631 l
589.676 426.657 l
589.747 426.670 l
589.888 426.697 l
589.959 426.710 l
590.100 426.736 l
590.737 426.855 l
590.878 426.881 l
591.020 426.908 l
591.444 426.987 l
591.515 427.000 l
591.656 427.026 l
591.797 427.052 l
591.939 427.079 l
592.363 427.157 l
592.434 427.170 l
592.575 427.197 l
592.858 427.249 l
592.929 427.262 l
592.999 427.275 l
593.070 427.288 l
593.141 427.301 l
593.282 427.328 l
593.353 427.341 l
593.424 427.354 l
593.565 427.380 l
593.636 427.393 l
593.989 427.458 l
594.060 427.471 l
594.131 427.484 l
594.201 427.497 l
594.272 427.510 l
594.414 427.537 l
594.484 427.550 l
594.838 427.615 l
594.908 427.628 l
594.979 427.641 l
595.050 427.654 l
595.191 427.680 l
595.686 427.771 l
595.757 427.784 l
595.828 427.797 l
595.898 427.810 l
595.969 427.823 l
596.040 427.836 l
596.323 427.888 l
596.393 427.901 l
596.464 427.914 l
596.605 427.940 l
596.676 427.952 l
596.818 427.978 l
597.030 428.017 l
597.100 428.030 l
597.242 428.056 l
597.313 428.069 l
597.525 428.108 l
597.595 426.908 l
597.878 426.956 l
597.949 426.968 l
598.090 426.991 l
598.161 427.003 l
598.232 427.015 l
598.302 427.027 l
598.373 427.039 l
599.009 427.145 l
599.080 427.157 l
599.151 427.169 l
599.222 427.181 l
599.292 427.193 l
599.434 427.216 l
599.504 427.228 l
599.646 427.252 l
599.717 427.264 l
599.787 427.275 l
600.070 427.323 l
600.141 427.334 l
600.212 427.346 l
600.282 427.358 l
600.353 427.370 l
600.494 427.393 l
600.565 427.405 l
600.848 427.452 l
600.919 427.464 l
601.060 427.488 l
601.131 427.499 l
601.272 427.523 l
601.414 427.546 l
601.484 427.558 l
601.626 427.582 l
601.696 427.593 l
601.979 427.640 l
602.050 427.652 l
602.262 427.687 l
602.333 427.699 l
602.403 427.711 l
602.474 427.723 l
602.545 427.734 l
602.757 427.769 l
602.828 427.781 l
602.898 427.793 l
602.969 427.805 l
603.252 427.852 l
603.323 427.863 l
603.393 427.875 l
603.535 427.898 l
603.676 427.922 l
603.747 427.933 l
603.818 427.945 l
604.100 427.992 l
604.171 428.004 l
604.242 428.015 l
604.383 428.039 l
604.525 428.062 l
604.666 428.085 l
604.737 428.097 l
604.949 428.132 l
605.020 428.144 l
605.090 428.155 l
605.373 428.202 l
605.444 428.213 l
605.515 428.225 l
605.656 428.248 l
605.797 428.272 l
605.868 428.283 l
605.939 428.295 l
606.222 428.341 l
606.292 428.353 l
606.363 428.365 l
606.434 428.376 l
606.575 428.400 l
606.787 428.434 l
606.858 428.446 l
606.999 428.469 l
607.070 428.481 l
607.282 428.516 l
607.353 428.527 l
607.494 428.550 l
607.565 428.562 l
607.706 428.585 l
607.848 428.608 l
607.919 428.620 l
608.626 428.736 l
608.767 428.759 l
608.838 428.770 l
608.908 428.782 l
608.979 428.793 l
609.686 428.909 l
609.757 428.920 l
609.828 428.932 l
609.898 428.943 l
609.969 428.955 l
610.111 428.978 l
610.181 428.989 l
610.605 429.058 l
610.676 429.070 l
610.818 429.093 l
610.888 429.104 l
610.959 429.116 l
611.030 429.127 l
611.100 429.139 l
611.666 429.231 l
611.737 429.242 l
611.878 429.265 l
612.020 429.288 l
612.161 429.311 l
612.444 429.357 l
612.515 429.368 l
612.585 429.379 l
612.656 429.391 l
612.727 429.402 l
613.009 429.448 l
613.151 429.471 l
613.222 429.482 l
613.292 429.494 l
613.363 429.505 l
613.646 429.551 l
613.717 429.562 l
613.999 429.608 l
614.070 429.619 l
614.141 429.631 l
614.212 429.642 l
614.282 429.654 l
614.424 429.676 l
614.494 429.688 l
615.060 429.779 l
615.131 429.790 l
615.272 429.813 l
615.343 429.824 l
615.414 429.836 l
615.484 429.847 l
615.555 429.858 l
616.191 429.961 l
616.262 429.972 l
616.333 429.983 l
616.403 429.995 l
616.474 430.006 l
616.545 430.017 l
616.616 430.029 l
616.828 430.063 l
616.898 430.074 l
616.969 430.085 l
617.040 430.097 l
617.111 430.108 l
617.393 430.153 l
617.535 430.176 l
617.676 430.198 l
618.030 430.255 l
618.100 430.266 l
618.171 430.277 l
618.242 430.289 l
618.525 430.334 l
618.595 430.345 l
618.666 430.356 l
618.737 430.368 l
618.807 430.379 l
619.090 430.424 l
619.161 430.435 l
619.302 430.458 l
619.373 430.469 l
619.444 430.480 l
619.515 430.492 l
619.585 430.503 l
619.656 430.514 l
619.727 430.525 l
619.797 430.537 l
619.868 430.548 l
619.939 430.559 l
620.009 430.570 l
620.646 430.671 l
620.717 430.683 l
620.787 430.694 l
620.858 430.705 l
620.929 430.716 l
620.999 430.727 l
621.141 430.750 l
621.212 430.761 l
621.777 430.851 l
621.848 430.862 l
621.989 430.884 l
622.131 430.907 l
622.201 430.918 l
622.272 430.929 l
622.343 430.940 l
622.767 431.007 l
622.838 431.018 l
623.050 431.052 l
623.121 431.063 l
623.191 431.074 l
623.333 431.096 l
623.403 431.108 l
623.545 431.130 l
623.616 431.141 l
623.898 431.186 l
623.969 431.197 l
624.111 431.219 l
624.181 431.230 l
624.323 431.252 l
624.464 431.275 l
624.535 431.286 l
624.747 431.319 l
624.818 431.330 l
624.888 431.341 l
624.959 431.352 l
625.030 431.363 l
625.242 431.397 l
625.313 431.408 l
625.454 431.430 l
625.595 431.452 l
625.666 431.463 l
625.807 431.486 l
625.878 431.497 l
625.949 431.508 l
626.020 431.519 l
626.090 431.530 l
626.161 431.541 l
626.232 431.552 l
626.373 431.574 l
626.444 431.585 l
626.585 431.607 l
626.727 431.629 l
626.797 431.641 l
626.868 431.652 l
626.939 431.663 l
627.434 431.740 l
627.504 431.751 l
627.646 431.773 l
627.717 431.784 l
627.787 431.795 l
627.929 431.817 l
627.999 431.828 l
628.141 431.850 l
628.212 431.861 l
628.494 431.905 l
628.565 431.916 l
628.706 431.938 l
628.777 431.949 l
628.919 431.971 l
629.060 431.993 l
629.131 432.004 l
629.201 432.015 l
629.272 432.026 l
629.626 432.081 l
629.696 432.092 l
629.908 432.125 l
629.979 432.136 l
630.121 432.158 l
630.262 432.180 l
630.333 432.191 l
631.040 432.301 l
631.111 432.312 l
631.181 432.323 l
631.252 432.333 l
631.323 432.344 l
631.464 432.366 l
631.535 432.377 l
632.171 432.476 l
632.242 432.486 l
632.383 432.508 l
632.454 432.519 l
632.525 432.530 l
632.737 432.563 l
632.807 432.574 l
633.232 432.639 l
633.302 432.650 l
633.444 432.672 l
633.515 432.683 l
633.656 432.704 l
633.797 432.726 l
633.868 432.737 l
634.222 432.791 l
634.292 432.802 l
634.363 432.813 l
634.575 432.846 l
634.646 432.856 l
634.717 432.867 l
634.787 432.878 l
634.858 432.889 l
634.929 432.900 l
634.999 432.911 l
635.282 432.954 l
635.353 432.965 l
635.424 432.976 l
635.494 432.987 l
635.565 432.997 l
635.777 433.030 l
635.848 433.041 l
635.919 433.052 l
635.989 433.062 l
636.060 433.073 l
636.131 433.084 l
636.201 433.095 l
636.626 433.160 l
636.696 433.170 l
636.979 433.214 l
637.050 433.224 l
637.121 433.235 l
637.191 433.246 l
637.262 433.257 l
637.403 433.278 l
637.474 433.289 l
638.040 433.375 l
638.111 433.386 l
638.252 433.408 l
638.323 433.418 l
638.464 433.440 l
638.676 433.472 l
638.747 433.483 l
639.171 433.547 l
639.242 433.558 l
639.454 433.590 l
639.525 433.601 l
639.595 433.612 l
639.666 433.622 l
639.737 433.633 l
639.878 433.655 l
639.949 433.665 l
640.373 433.730 l
640.444 433.740 l
640.515 433.751 l
640.585 433.762 l
640.656 433.772 l
640.797 433.794 l
640.939 433.815 l
641.009 433.826 l
641.080 433.837 l
641.151 433.847 l
641.575 433.911 l
641.646 433.922 l
641.787 433.943 l
641.858 433.954 l
641.999 433.975 l
642.141 433.997 l
642.212 434.007 l
642.353 434.029 l
642.424 434.039 l
642.848 434.103 l
642.919 434.114 l
643.060 434.135 l
643.131 434.146 l
643.201 434.157 l
643.272 434.167 l
643.343 434.178 l
643.414 434.188 l
643.484 434.199 l
644.121 434.295 l
644.191 434.305 l
644.333 434.326 l
644.403 434.337 l
644.474 434.348 l
644.545 434.358 l
644.616 434.369 l
644.757 434.390 l
644.828 434.401 l
645.323 434.475 l
645.393 434.485 l
645.535 434.507 l
645.606 434.517 l
645.676 434.528 l
645.747 434.538 l
645.818 434.549 l
645.959 434.570 l
646.030 434.581 l
646.595 434.665 l
646.666 434.676 l
646.737 434.686 l
646.807 434.697 l
646.949 434.718 l
647.090 434.739 l
647.161 434.749 l
647.302 434.770 l
647.373 434.781 l
647.656 434.823 l
647.727 434.834 l
647.939 434.865 l
648.009 434.876 l
648.080 434.886 l
648.151 434.897 l
648.222 434.907 l
648.292 434.918 l
648.363 434.928 l
648.575 434.960 l
648.646 434.970 l
648.929 435.012 l
648.999 435.023 l
649.212 435.054 l
649.282 435.065 l
649.353 435.075 l
649.424 435.086 l
649.494 435.096 l
649.565 435.107 l
649.636 435.117 l
649.848 435.149 l
649.919 435.159 l
650.060 435.180 l
650.131 435.190 l
650.414 435.232 l
650.484 435.243 l
650.626 435.264 l
650.767 435.285 l
650.838 435.295 l
650.908 435.305 l
650.979 435.316 l
651.616 435.410 l
651.686 435.420 l
651.757 435.431 l
651.828 435.441 l
651.969 435.462 l
652.111 435.483 l
652.181 435.493 l
652.888 435.597 l
652.959 435.608 l
653.100 435.628 l
653.171 435.639 l
653.242 435.649 l
653.312 435.660 l
653.383 435.670 l
653.737 435.722 l
653.807 435.732 l
653.878 435.743 l
654.232 435.795 l
654.302 435.805 l
654.373 435.815 l
654.444 435.826 l
654.515 435.836 l
654.585 435.846 l
654.656 435.857 l
654.868 435.888 l
654.939 435.898 l
655.222 435.939 l
655.292 435.950 l
655.504 435.981 l
655.575 435.991 l
655.646 436.002 l
655.717 436.012 l
655.858 436.033 l
656.141 436.074 l
656.212 436.084 l
656.424 436.115 l
656.494 436.125 l
656.565 436.136 l
656.636 436.146 l
656.848 436.177 l
656.919 436.187 l
656.989 436.198 l
657.060 436.208 l
657.131 436.218 l
657.272 436.239 l
657.343 436.249 l
657.908 436.331 l
657.979 436.342 l
658.191 436.372 l
658.262 436.383 l
658.333 436.393 l
658.474 436.413 l
658.545 436.424 l
658.686 436.444 l
658.757 436.455 l
659.111 436.506 l
659.181 436.516 l
659.323 436.537 l
659.393 436.547 l
659.535 436.567 l
659.605 436.577 l
659.676 436.588 l
659.747 436.598 l
659.818 436.608 l
660.595 436.721 l
660.666 436.731 l
660.807 436.751 l
660.878 436.761 l
660.949 436.772 l
661.090 436.792 l
661.161 436.802 l
661.373 436.833 l
661.444 436.843 l
661.585 436.864 l
661.656 436.874 l
661.939 436.914 l
662.009 436.925 l
662.080 436.935 l
662.151 436.945 l
662.222 436.955 l
662.292 436.965 l
662.363 436.976 l
662.504 436.996 l
662.575 437.006 l
663.141 437.087 l
663.212 437.097 l
663.353 437.118 l
663.424 437.128 l
663.494 437.138 l
663.565 437.148 l
663.636 437.158 l
663.777 437.179 l
663.848 437.189 l
664.414 437.270 l
664.484 437.280 l
664.696 437.310 l
664.767 437.320 l
664.838 437.331 l
664.908 437.341 l
664.979 437.351 l
665.191 437.381 l
665.262 437.391 l
665.403 437.411 l
665.474 437.422 l
665.686 437.452 l
665.757 437.462 l
665.969 437.492 l
666.040 437.502 l
666.111 437.512 l
666.181 437.522 l
666.252 437.533 l
666.393 437.553 l
666.464 437.563 l
667.171 437.664 l
667.242 437.674 l
667.383 437.694 l
667.525 437.714 l
667.595 437.724 l
667.666 437.734 l
667.737 437.744 l
668.090 437.794 l
668.161 437.804 l
668.232 437.814 l
668.515 437.854 l
668.585 437.864 l
668.727 437.884 l
668.868 437.905 l
668.939 437.915 l
669.009 437.925 l
669.080 437.935 l
669.222 437.955 l
669.292 437.965 l
669.434 437.985 l
669.504 437.995 l
669.575 438.005 l
669.929 438.055 l
669.999 438.065 l
670.070 438.075 l
670.141 438.085 l
670.212 438.095 l
670.353 438.115 l
670.424 438.125 l
670.706 438.165 l
670.777 438.175 l
670.848 438.185 l
670.919 438.195 l
670.989 438.205 l
671.201 438.234 l
671.272 438.244 l
671.414 438.264 l
671.484 438.274 l
671.555 438.284 l
671.696 438.304 l
671.767 438.314 l
671.979 438.344 l
672.050 438.354 l
672.262 438.384 l
672.333 438.394 l
672.545 438.424 l
672.616 438.434 l
672.757 438.453 l
672.828 438.463 l
672.898 438.473 l
672.969 438.483 l
673.040 438.493 l
673.110 438.503 l
673.181 438.513 l
673.252 438.523 l
673.676 438.582 l
673.747 438.592 l
674.030 438.632 l
674.100 438.642 l
674.171 438.652 l
674.242 438.662 l
674.313 438.672 l
674.525 438.701 l
674.595 438.711 l
675.232 438.800 l
675.302 438.810 l
675.444 438.830 l
675.515 438.840 l
675.585 438.850 l
675.656 438.859 l
675.727 438.869 l
675.868 438.889 l
675.939 438.899 l
676.504 438.978 l
676.575 438.988 l
676.717 439.007 l
676.787 439.017 l
676.929 439.037 l
677.070 439.056 l
677.141 439.066 l
677.212 439.076 l
677.282 439.086 l
677.919 439.174 l
677.989 439.184 l
678.131 439.204 l
678.201 439.214 l
678.272 439.224 l
678.343 439.233 l
678.484 439.253 l
678.555 439.263 l
678.838 439.302 l
678.908 439.312 l
679.191 439.351 l
679.262 439.361 l
679.474 439.390 l
679.545 439.400 l
679.616 439.410 l
679.686 439.419 l
679.757 439.429 l
679.828 439.439 l
679.898 439.449 l
680.111 439.478 l
680.181 439.488 l
680.605 439.547 l
680.676 439.556 l
680.888 439.586 l
680.959 439.595 l
681.030 439.605 l
681.100 439.615 l
681.171 439.625 l
681.242 439.634 l
681.313 439.644 l
681.525 439.673 l
681.595 439.683 l
682.020 439.741 l
682.090 439.751 l
682.232 439.771 l
682.302 439.780 l
682.444 439.800 l
682.515 439.809 l
682.585 439.819 l
682.727 439.839 l
682.797 439.848 l
683.646 439.965 l
683.717 439.974 l
683.787 439.984 l
683.858 439.994 l
683.929 440.004 l
683.999 440.013 l
684.070 440.023 l
684.282 440.052 l
684.353 440.062 l
684.919 440.139 l
684.989 440.149 l
685.131 440.168 l
685.201 440.178 l
685.272 440.187 l
685.343 440.197 l
685.413 440.207 l
685.555 440.226 l
685.626 440.236 l
685.838 440.265 l
685.908 440.274 l
686.121 440.303 l
686.191 440.313 l
686.403 440.342 l
686.474 440.351 l
686.616 440.371 l
686.686 440.380 l
686.757 440.390 l
686.828 440.400 l
686.898 440.409 l
687.040 440.428 l
687.111 440.438 l
687.747 440.525 l
687.818 440.534 l
687.959 440.553 l
688.030 440.563 l
688.100 440.573 l
688.171 440.582 l
688.242 440.592 l
688.313 440.601 l
688.383 440.611 l
688.595 440.640 l
688.666 440.649 l
689.020 440.697 l
689.090 440.707 l
689.302 440.736 l
689.373 440.745 l
689.515 440.764 l
689.585 440.774 l
689.656 440.783 l
689.797 440.802 l
689.868 440.812 l
690.009 440.831 l
690.080 440.841 l
690.504 440.898 l
690.575 440.908 l
690.717 440.927 l
690.787 440.936 l
690.929 440.955 l
690.999 440.965 l
691.070 440.974 l
691.141 440.984 l
691.212 440.993 l
691.424 441.022 l
691.494 441.032 l
691.989 441.098 l
692.060 441.108 l
692.272 441.136 l
692.343 441.146 l
692.413 441.155 l
692.484 441.165 l
692.555 441.174 l
692.696 441.193 l
692.767 441.203 l
692.908 441.222 l
692.979 441.231 l
693.403 441.288 l
693.474 441.298 l
693.616 441.317 l
693.686 441.326 l
693.828 441.345 l
693.898 441.355 l
693.969 441.364 l
694.040 441.374 l
694.111 441.383 l
694.181 441.392 l
694.252 441.402 l
694.323 441.411 l
694.959 441.497 l
695.030 441.506 l
695.171 441.525 l
695.242 441.534 l
695.313 441.544 l
695.383 441.553 l
695.454 441.563 l
695.525 441.572 l
695.595 441.582 l
695.737 441.600 l
695.807 441.610 l
696.444 441.695 l
696.515 441.704 l
696.656 441.723 l
696.727 441.732 l
696.797 441.742 l
696.868 441.751 l
696.939 441.761 l
697.080 441.780 l
697.151 441.789 l
697.292 441.808 l
697.363 441.817 l
697.787 441.874 l
697.858 441.883 l
697.999 441.902 l
698.070 441.911 l
698.212 441.930 l
698.282 441.939 l
698.353 441.949 l
698.424 441.958 l
698.494 441.967 l
698.636 441.986 l
698.706 441.996 l
699.413 442.089 l
699.484 442.099 l
699.626 442.117 l
699.696 442.127 l
699.838 442.145 l
699.979 442.164 l
700.050 442.173 l
700.262 442.201 l
700.333 442.211 l
700.757 442.267 l
700.828 442.276 l
701.040 442.304 l
701.111 442.314 l
701.252 442.332 l
701.393 442.351 l
701.464 442.360 l
701.605 442.379 l
701.676 442.388 l
701.818 442.407 l
701.888 442.416 l
702.383 442.481 l
702.454 442.490 l
702.595 442.509 l
702.666 442.518 l
702.807 442.537 l
702.949 442.556 l
703.020 442.565 l
703.161 442.583 l
703.232 442.593 l
703.868 442.676 l
703.939 442.685 l
704.080 442.704 l
704.151 442.713 l
704.222 442.723 l
704.292 442.732 l
704.363 442.741 l
704.434 442.750 l
704.504 442.760 l
704.646 442.778 l
704.717 442.787 l
704.999 442.824 l
705.070 442.834 l
705.353 442.871 l
705.424 442.880 l
705.565 442.898 l
705.636 442.907 l
705.777 442.926 l
705.848 442.935 l
705.919 442.944 l
706.060 442.963 l
706.131 442.972 l
706.979 443.083 l
707.050 443.092 l
707.191 443.110 l
707.262 443.120 l
707.333 443.129 l
707.403 443.138 l
707.474 443.147 l
707.616 443.166 l
707.686 443.175 l
708.393 443.267 l
708.464 443.276 l
708.676 443.303 l
708.747 443.312 l
708.818 443.322 l
708.888 443.331 l
708.959 443.340 l
709.030 443.349 l
709.100 443.358 l
709.383 443.395 l
709.454 443.404 l
709.737 443.441 l
709.807 443.450 l
710.090 443.486 l
710.161 443.496 l
710.302 443.514 l
710.373 443.523 l
710.444 443.532 l
710.585 443.550 l
710.656 443.560 l
710.797 443.578 l
710.868 443.587 l
711.434 443.660 l
711.504 443.669 l
711.646 443.687 l
711.717 443.696 l
711.858 443.715 l
711.929 443.724 l
711.999 443.733 l
712.141 443.751 l
712.211 443.760 l
712.424 443.788 l
712.494 443.797 l
712.848 443.842 l
712.919 443.851 l
713.201 443.888 l
713.272 443.897 l
713.343 443.906 l
713.413 443.915 l
713.484 443.924 l
713.555 443.933 l
713.626 443.942 l
713.696 443.951 l
713.767 443.960 l
713.979 443.987 l
714.050 443.996 l
714.121 444.006 l
714.403 444.042 l
714.474 444.051 l
714.757 444.087 l
714.828 444.096 l
714.898 444.105 l
714.969 444.114 l
715.040 444.123 l
715.111 444.132 l
715.181 444.141 l
715.252 444.150 l
715.323 444.159 l
715.747 444.214 l
715.818 444.223 l
715.888 444.232 l
716.242 444.277 l
716.313 444.286 l
716.454 444.304 l
716.525 444.313 l
716.595 444.322 l
716.666 444.331 l
716.737 444.340 l
716.878 444.358 l
716.949 444.367 l
717.302 444.412 l
717.373 444.421 l
717.515 444.439 l
717.585 444.448 l
717.797 444.475 l
717.868 444.484 l
717.939 444.493 l
718.009 444.502 l
718.080 444.511 l
718.151 444.520 l
718.222 444.529 l
718.292 444.538 l
718.363 444.547 l
718.434 444.556 l
718.717 444.592 l
718.787 444.601 l
719.141 444.646 l
719.211 444.655 l
719.494 444.691 l
719.565 444.700 l
719.636 444.709 l
719.706 444.717 l
719.777 444.726 l
719.848 444.735 l
719.919 444.744 l
720.060 444.762 l
720.131 444.771 l
720.484 444.816 l
720.555 444.825 l
720.626 444.834 l
720.979 444.878 l
721.050 444.887 l
721.191 444.905 l
721.262 444.914 l
721.333 444.923 l
721.403 444.932 l
721.474 444.941 l
721.616 444.959 l
721.686 444.968 l
722.040 445.012 l
722.111 445.021 l
722.252 445.039 l
722.323 445.048 l
722.605 445.084 l
722.676 445.092 l
722.818 445.110 l
722.888 445.119 l
722.959 445.128 l
723.030 445.137 l
723.100 445.146 l
723.313 445.173 l
723.383 445.181 l
724.161 445.279 l
724.232 445.288 l
724.373 445.306 l
724.444 445.315 l
724.515 445.323 l
724.585 445.332 l
724.656 445.341 l
724.727 445.350 l
724.797 445.359 l
725.080 445.394 l
725.151 445.403 l
725.575 445.456 l
725.646 445.465 l
725.858 445.492 l
725.929 445.500 l
726.070 445.518 l
726.141 445.527 l
726.211 445.536 l
726.353 445.554 l
726.424 445.562 l
726.565 445.580 l
726.636 445.589 l
726.777 445.606 l
726.848 445.615 l
727.343 445.677 l
727.414 445.686 l
727.555 445.703 l
727.626 445.712 l
727.767 445.730 l
727.908 445.747 l
727.979 445.756 l
728.050 445.765 l
728.121 445.774 l
729.040 445.888 l
729.111 445.897 l
729.181 445.906 l
729.252 445.914 l
729.393 445.932 l
729.464 445.941 l
729.535 445.950 l
729.605 445.958 l
729.676 445.967 l
729.959 446.002 l
730.030 446.011 l
730.454 446.064 l
730.525 446.072 l
730.595 446.081 l
730.666 446.090 l
730.737 446.099 l
730.807 446.107 l
730.949 446.125 l
731.020 446.133 l
731.090 446.142 l
731.232 446.160 l
731.302 446.168 l
731.373 446.177 l
731.444 446.186 l
732.292 446.291 l
732.363 446.299 l
732.504 446.317 l
732.575 446.326 l
732.646 446.334 l
732.717 446.343 l
732.787 446.352 l
732.858 446.360 l
732.929 446.369 l
733.070 446.387 l
733.141 446.395 l
733.777 446.474 l
733.848 446.482 l
733.919 446.491 l
733.989 446.500 l
734.131 446.517 l
734.201 446.526 l
734.272 446.534 l
734.343 446.543 l
734.414 446.552 l
734.484 446.560 l
734.555 446.569 l
734.696 446.586 l
734.767 446.595 l
734.979 446.621 l
735.050 446.630 l
735.333 446.664 l
735.403 446.673 l
735.686 446.708 l
735.757 446.716 l
735.898 446.734 l
736.040 446.751 l
736.181 446.768 l
736.323 446.786 l
736.393 446.794 l
737.312 446.907 l
737.383 446.915 l
737.525 446.932 l
737.595 446.941 l
737.666 446.950 l
737.737 446.958 l
737.807 446.967 l
737.878 446.976 l
737.949 446.984 l
738.161 447.010 l
738.232 447.019 l
738.868 447.096 l
738.939 447.105 l
739.151 447.130 l
739.222 447.139 l
739.292 447.148 l
739.363 447.156 l
739.434 447.165 l
739.504 447.173 l
739.575 447.182 l
739.646 447.191 l
739.717 447.199 l
739.787 447.208 l
740.141 447.251 l
740.212 447.259 l
740.282 447.268 l
740.353 447.276 l
740.424 447.285 l
740.706 447.319 l
740.777 447.328 l
740.919 447.345 l
740.989 447.353 l
741.060 447.362 l
741.131 447.371 l
741.201 447.379 l
741.343 447.396 l
741.414 447.405 l
741.626 447.430 l
741.696 447.439 l
742.191 447.499 l
742.262 447.507 l
742.474 447.533 l
742.545 447.542 l
742.686 447.559 l
742.757 447.567 l
742.828 447.576 l
742.969 447.593 l
743.181 447.618 l
743.252 447.627 l
744.030 447.720 l
744.100 447.729 l
744.242 447.746 l
744.312 447.754 l
744.454 447.772 l
744.525 447.780 l
744.595 447.789 l
744.737 447.805 l
744.807 447.814 l
745.020 447.839 l
745.090 447.848 l
745.656 447.916 l
745.727 447.924 l
745.939 447.950 l
746.009 447.958 l
746.080 447.967 l
746.151 447.975 l
746.292 447.992 l
746.434 448.009 l
746.504 448.017 l
746.575 448.026 l
746.646 448.034 l
746.717 448.043 l
746.787 448.051 l
747.424 448.127 l
747.494 448.136 l
747.636 448.153 l
747.706 448.161 l
747.848 448.178 l
747.919 448.187 l
747.989 448.195 l
748.060 448.203 l
748.131 448.212 l
748.272 448.229 l
748.343 448.237 l
748.626 448.271 l
748.696 448.279 l
748.908 448.305 l
748.979 448.313 l
749.262 448.347 l
749.333 448.355 l
749.474 448.372 l
749.545 448.380 l
749.616 448.389 l
749.686 448.397 l
749.828 448.414 l
749.969 448.431 l
750.040 448.439 l
750.323 448.473 l
750.393 448.481 l
750.464 448.489 l
750.535 448.498 l
750.676 448.515 l
750.747 448.523 l
751.030 448.557 l
751.100 448.565 l
751.242 448.582 l
751.312 448.590 l
751.454 448.607 l
751.595 448.624 l
751.666 448.632 l
751.737 448.640 l
751.807 448.649 l
752.797 448.766 l
752.868 448.774 l
753.009 448.791 l
753.080 448.799 l
753.151 448.808 l
753.222 448.816 l
753.292 448.824 l
753.363 448.833 l
753.434 448.841 l
753.575 448.858 l
753.646 448.866 l
754.494 448.966 l
754.565 448.974 l
754.706 448.991 l
754.777 448.999 l
754.919 449.016 l
755.060 449.033 l
755.131 449.041 l
755.201 449.049 l
755.272 449.057 l
755.484 449.082 l
755.555 449.091 l
755.626 449.099 l
756.191 449.165 l
756.262 449.174 l
756.474 449.199 l
756.545 449.207 l
756.616 449.215 l
756.686 449.223 l
756.757 449.232 l
756.828 449.240 l
756.898 449.248 l
756.969 449.257 l
757.040 449.265 l
757.252 449.290 l
757.323 449.298 l
757.959 449.372 l
758.030 449.381 l
758.242 449.405 l
758.312 449.414 l
758.383 449.422 l
758.454 449.430 l
758.595 449.447 l
758.737 449.463 l
758.807 449.472 l
758.949 449.488 l
759.020 449.496 l
759.373 449.537 l
759.444 449.546 l
759.868 449.595 l
759.939 449.603 l
760.080 449.620 l
760.151 449.628 l
760.222 449.636 l
760.292 449.644 l
760.363 449.653 l
760.434 449.661 l
760.504 449.669 l
760.646 449.686 l
760.717 449.694 l
760.858 449.710 l
760.929 449.718 l
760.999 449.727 l
S
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
q
53.0000 9.01423 709.999 486.985 rc
newpath
69.6969 10.7825 m
69.7676 11.1192 l
69.8383 11.4552 l
69.9090 11.7908 l
69.9798 12.1259 l
70.0505 12.4606 l
70.1212 12.7947 l
70.1919 13.1283 l
70.2626 13.4614 l
70.3333 13.7940 l
70.4040 14.1261 l
70.4747 14.4577 l
70.5454 14.7889 l
70.6161 15.1195 l
70.6868 15.4497 l
70.7575 15.7794 l
70.8282 16.1086 l
70.8989 16.4373 l
70.9697 16.7655 l
71.0404 17.0933 l
71.1111 17.4205 l
71.1818 17.7473 l
71.2525 18.0737 l
71.3232 18.3995 l
71.3939 18.7248 l
71.4646 19.0497 l
71.5353 19.3742 l
71.6060 19.6981 l
71.6767 20.0216 l
71.7474 20.3446 l
71.8181 20.6671 l
71.8888 20.9892 l
71.9595 21.3107 l
72.0303 21.6319 l
72.1010 21.9525 l
72.1717 22.2728 l
72.2424 22.5925 l
72.3131 22.9118 l
72.3838 23.2306 l
72.4545 23.5489 l
72.5252 23.8668 l
72.5959 24.1843 l
72.6666 24.5013 l
72.7373 24.8179 l
72.8080 25.1339 l
72.8787 25.4496 l
72.9494 25.7648 l
73.0202 26.0795 l
73.0909 26.3938 l
73.1616 26.7076 l
73.2323 27.0210 l
73.3030 27.3339 l
73.3737 27.6465 l
73.4444 27.9585 l
73.5151 28.2701 l
73.5858 28.5813 l
73.6565 28.8920 l
73.7272 29.2023 l
73.7979 29.5122 l
73.8686 29.8216 l
73.9393 30.1306 l
74.0100 30.4392 l
74.0808 30.7473 l
74.1515 31.0549 l
74.2222 31.3622 l
74.2929 31.6690 l
74.3636 31.9754 l
74.4343 32.2814 l
74.5050 32.5869 l
74.5757 32.8920 l
74.6464 33.1967 l
74.7171 33.5010 l
74.7878 33.8048 l
74.8585 34.1082 l
74.9292 34.4112 l
74.9999 34.7137 l
75.0707 35.0159 l
75.1414 35.3176 l
75.2121 35.6189 l
75.2828 35.9198 l
75.3535 36.2203 l
75.4242 36.5204 l
75.4949 36.8200 l
75.5656 37.1192 l
75.6363 37.4180 l
75.7070 37.7165 l
75.7777 38.0145 l
75.8484 38.3121 l
75.9191 38.6093 l
75.9898 38.9060 l
76.0606 39.2024 l
76.1313 39.4983 l
76.2020 39.7939 l
76.2727 40.0891 l
76.3434 40.3838 l
76.4141 40.6782 l
76.4848 40.9721 l
76.5555 41.2657 l
76.6262 41.5588 l
76.6969 41.8516 l
76.7676 42.1439 l
76.8383 42.4359 l
76.9090 42.7275 l
76.9797 43.0186 l
77.0505 43.3094 l
77.1212 43.5998 l
77.1919 43.8898 l
77.2626 44.1794 l
77.3333 44.4686 l
77.4040 44.7574 l
77.4747 45.0459 l
77.5454 45.3339 l
77.6161 45.6215 l
77.6868 45.9088 l
77.7575 46.1957 l
77.8282 46.4822 l
77.8989 46.7683 l
77.9696 47.0541 l
78.0404 47.3394 l
78.1111 47.6244 l
78.1818 47.9090 l
78.2525 48.1932 l
78.3232 48.4770 l
78.3939 48.7605 l
78.4646 49.0436 l
78.5353 49.3263 l
78.6767 49.8906 l
78.7474 50.1722 l
78.8181 50.4534 l
78.8888 50.7342 l
78.9595 51.0147 l
79.0303 51.2948 l
79.1010 51.5746 l
79.1717 51.8539 l
79.2424 52.1329 l
79.3131 52.4115 l
79.3838 52.6898 l
79.4545 52.9677 l
79.5252 53.2453 l
79.5959 53.5224 l
79.6666 53.7992 l
79.7373 54.0757 l
79.8080 54.3518 l
79.8787 54.6275 l
79.9494 54.9029 l
80.0202 55.1779 l
80.0909 55.4526 l
80.1616 55.7269 l
80.2323 56.0008 l
80.3030 56.2744 l
80.3737 56.5476 l
80.4444 56.8205 l
80.5151 57.0930 l
80.5858 57.3652 l
80.6565 57.6370 l
80.7272 57.9085 l
80.7979 58.1796 l
80.8686 58.4504 l
80.9393 58.7208 l
81.0100 58.9909 l
81.0808 59.2606 l
81.1515 59.5300 l
81.2222 59.7990 l
81.2929 60.0677 l
81.3636 60.3361 l
81.4343 60.6041 l
81.5050 60.8718 l
81.5757 61.1391 l
81.6464 61.4060 l
81.7171 61.6727 l
81.7878 61.9390 l
81.8585 62.2049 l
81.9292 62.4706 l
81.9999 62.7359 l
82.0707 63.0008 l
82.1414 63.2654 l
82.2121 63.5297 l
82.2828 63.7936 l
82.3535 64.0572 l
82.4242 64.3205 l
82.4949 64.5835 l
82.5656 64.8461 l
82.6363 65.1084 l
82.7070 65.3703 l
82.7777 65.6319 l
82.8484 65.8932 l
82.9191 66.1542 l
82.9898 66.4148 l
83.0606 66.6751 l
83.1313 66.9351 l
83.2020 67.1947 l
83.2727 67.4541 l
83.3434 67.7131 l
83.4141 67.9718 l
83.4848 68.2301 l
83.5555 68.4882 l
83.6262 68.7459 l
83.6969 69.0033 l
83.7676 69.2604 l
83.8383 69.5171 l
83.9090 69.7736 l
83.9797 70.0297 l
84.0505 70.2855 l
84.1212 70.5410 l
84.1919 70.7962 l
84.2626 71.0510 l
84.3333 71.3056 l
84.4040 71.5598 l
84.4747 71.8137 l
84.5454 72.0673 l
84.6161 72.3206 l
84.6868 72.5735 l
84.7575 72.8262 l
84.8282 73.0786 l
84.8989 73.3306 l
84.9696 73.5824 l
85.0404 73.8338 l
85.1111 74.0849 l
85.1818 74.3357 l
85.2525 74.5862 l
85.3939 75.0863 l
85.4646 75.3359 l
85.6060 75.8342 l
85.6767 76.0828 l
85.7474 76.3312 l
85.8181 76.5793 l
85.8888 76.8271 l
85.9595 77.0746 l
86.0302 77.3217 l
86.1010 77.5686 l
86.2424 78.0615 l
86.3131 78.3075 l
86.3838 78.5531 l
86.5252 79.0436 l
86.5959 79.2884 l
86.7373 79.7771 l
86.8080 80.0210 l
86.8787 80.2647 l
86.9494 80.5080 l
87.0202 80.7511 l
87.1616 81.2363 l
87.2323 81.4784 l
87.3030 81.7203 l
87.3737 81.9619 l
87.4444 82.2033 l
87.5151 82.4443 l
87.5858 82.6850 l
87.6565 82.9255 l
87.7272 83.1656 l
87.7979 83.4055 l
87.8686 83.6451 l
87.9393 83.8844 l
88.0100 84.1234 l
88.0808 84.3621 l
88.1515 84.6006 l
88.2222 84.8388 l
88.2929 85.0767 l
88.3636 85.3143 l
88.4343 85.5517 l
88.5050 85.7887 l
88.5757 86.0255 l
88.6464 86.2619 l
88.7171 86.4982 l
88.7878 86.7341 l
88.8585 86.9698 l
88.9292 87.2052 l
89.0706 87.6752 l
89.1414 87.9097 l
89.2121 88.1440 l
89.2828 88.3780 l
89.3535 88.6118 l
89.4242 88.8453 l
89.5656 89.3114 l
89.6363 89.5441 l
89.7070 89.7764 l
89.7777 90.0086 l
89.8484 90.2404 l
89.9191 90.4720 l
89.9898 90.7033 l
90.0605 90.9343 l
90.1313 91.1651 l
90.2020 91.3956 l
90.2727 91.6259 l
90.3434 91.8559 l
90.4141 92.0856 l
90.4848 92.3150 l
90.5555 92.5442 l
90.6262 92.7732 l
90.7676 93.2302 l
90.9090 93.6862 l
90.9797 93.9138 l
91.0504 94.1412 l
91.1919 94.5951 l
91.2626 94.8217 l
91.3333 95.0480 l
91.4040 95.2741 l
91.5454 95.7254 l
91.6161 95.9507 l
91.6868 96.1757 l
91.7575 91.3588 l
91.8282 91.5627 l
91.8989 91.7663 l
92.0403 92.1731 l
92.1818 92.5791 l
92.3232 92.9842 l
92.3939 93.1865 l
92.5353 93.5905 l
92.6767 93.9937 l
92.8181 94.3960 l
92.9595 94.7976 l
93.0302 94.9981 l
93.1010 95.1984 l
93.2424 95.5984 l
93.3838 95.9976 l
93.4545 96.1969 l
93.5959 96.5950 l
93.6666 96.7937 l
93.8080 97.1906 l
93.8787 97.3888 l
94.0201 97.7845 l
94.1616 98.1795 l
94.3030 98.5737 l
94.3737 98.7705 l
94.5151 99.1635 l
94.5858 99.3598 l
94.7272 99.7517 l
94.8686 100.142 l
94.9393 100.338 l
95.0808 100.728 l
95.2222 101.117 l
95.2929 101.311 l
95.4343 101.699 l
95.5050 101.893 l
95.6464 102.280 l
95.7878 102.667 l
95.8585 102.859 l
95.9999 103.245 l
96.1414 103.629 l
96.2121 103.821 l
96.3535 104.204 l
96.4242 104.396 l
96.5656 104.778 l
96.6363 104.969 l
96.7777 105.350 l
96.9191 105.730 l
96.9898 105.920 l
97.1313 106.300 l
97.2727 106.678 l
97.3434 106.867 l
97.4848 107.245 l
97.6262 107.622 l
97.7676 107.998 l
97.8383 108.186 l
97.9797 108.561 l
98.1212 108.935 l
98.2626 109.309 l
98.4040 109.682 l
98.5454 110.054 l
98.6868 110.426 l
98.8282 110.796 l
98.9696 111.167 l
99.0403 111.351 l
99.1818 111.721 l
99.3232 112.089 l
99.3939 112.273 l
99.5353 112.641 l
99.6767 113.007 l
99.7474 113.190 l
99.8888 113.556 l
99.9595 113.739 l
100.101 114.103 l
100.242 114.468 l
100.313 114.649 l
100.454 115.012 l
100.595 115.375 l
100.737 115.736 l
100.878 116.097 l
101.020 116.458 l
101.090 116.638 l
101.232 116.997 l
101.373 117.356 l
101.444 117.535 l
101.585 117.893 l
101.727 118.250 l
101.868 118.606 l
101.939 118.784 l
102.080 119.140 l
102.222 119.495 l
102.363 119.849 l
102.505 120.202 l
102.646 120.555 l
102.787 120.908 l
102.929 121.259 l
103.000 121.435 l
103.141 121.785 l
103.282 122.136 l
103.424 122.485 l
103.565 122.834 l
103.707 123.182 l
103.848 123.530 l
103.919 123.703 l
104.060 124.050 l
104.131 124.223 l
104.272 124.568 l
104.414 124.914 l
104.484 125.086 l
104.626 125.430 l
104.767 125.774 l
104.909 126.116 l
105.050 126.459 l
105.121 126.630 l
105.262 126.971 l
105.404 127.312 l
105.474 127.482 l
105.616 127.822 l
105.757 128.161 l
105.899 128.500 l
105.969 128.669 l
106.111 129.007 l
106.252 129.344 l
106.393 129.681 l
106.535 130.017 l
106.676 130.352 l
106.818 130.687 l
106.888 130.854 l
107.030 131.188 l
107.101 131.355 l
107.242 131.688 l
107.383 132.021 l
107.525 132.353 l
107.595 132.518 l
107.737 132.850 l
107.878 133.180 l
107.949 133.345 l
108.090 133.675 l
108.161 133.839 l
108.303 134.168 l
108.444 134.496 l
108.585 134.824 l
108.727 135.151 l
108.868 135.478 l
109.010 135.804 l
109.151 136.129 l
109.292 136.454 l
109.434 136.778 l
109.575 137.102 l
109.717 137.425 l
109.787 137.587 l
109.929 137.909 l
110.070 138.231 l
110.212 138.552 l
110.353 138.873 l
110.494 139.193 l
110.636 139.512 l
110.777 139.832 l
110.919 140.150 l
111.060 140.468 l
111.202 140.786 l
111.272 140.944 l
111.414 141.261 l
111.626 141.735 l
111.767 142.050 l
111.909 142.365 l
112.050 142.679 l
112.191 142.993 l
112.333 143.306 l
112.474 143.619 l
112.616 143.931 l
112.757 144.243 l
112.899 144.554 l
113.040 144.864 l
113.181 145.174 l
113.252 145.329 l
113.393 145.639 l
113.606 146.102 l
113.747 146.410 l
113.818 146.563 l
113.959 146.871 l
114.101 147.177 l
114.242 147.484 l
114.313 147.637 l
114.454 147.942 l
114.595 148.247 l
114.737 148.552 l
114.878 148.856 l
115.090 149.311 l
115.232 149.613 l
115.373 149.916 l
115.515 150.217 l
115.656 150.519 l
115.798 150.819 l
115.939 151.120 l
116.080 151.419 l
116.222 151.719 l
116.363 152.018 l
116.505 152.316 l
116.646 152.614 l
116.787 152.911 l
116.858 153.060 l
117.000 153.356 l
117.212 153.800 l
117.353 154.096 l
117.424 154.243 l
117.565 154.538 l
117.707 154.832 l
117.848 155.126 l
117.989 155.419 l
118.131 155.712 l
118.272 156.004 l
118.414 156.296 l
118.555 156.588 l
118.697 156.879 l
118.909 157.314 l
119.121 157.749 l
119.333 158.182 l
119.474 158.470 l
119.616 158.758 l
119.828 159.189 l
119.969 159.476 l
120.181 159.906 l
120.323 160.191 l
120.464 160.477 l
120.606 160.761 l
120.747 161.046 l
120.888 161.329 l
121.030 161.613 l
121.171 161.896 l
121.313 162.178 l
121.454 162.460 l
121.595 162.742 l
121.808 163.164 l
121.949 163.444 l
122.090 163.724 l
122.303 164.144 l
122.373 164.283 l
122.515 164.562 l
122.656 164.840 l
122.798 165.118 l
123.010 165.534 l
123.151 165.811 l
123.363 166.226 l
123.575 166.639 l
123.787 167.052 l
123.929 167.326 l
124.141 167.737 l
124.282 168.011 l
124.424 168.284 l
124.565 168.556 l
124.707 168.828 l
124.848 169.100 l
124.989 169.372 l
125.131 169.643 l
125.272 169.913 l
125.484 170.318 l
125.697 170.722 l
125.838 170.991 l
126.050 171.394 l
126.191 171.661 l
126.333 171.929 l
126.474 172.196 l
126.616 172.462 l
126.757 172.729 l
126.969 173.127 l
127.040 173.260 l
127.181 173.525 l
127.323 173.790 l
127.535 174.186 l
127.676 174.449 l
127.818 174.713 l
127.959 174.975 l
128.101 175.238 l
128.242 175.500 l
128.383 175.762 l
128.525 176.023 l
128.666 176.284 l
128.878 176.674 l
129.020 176.934 l
129.232 177.323 l
129.373 177.582 l
129.515 177.841 l
129.727 178.228 l
129.868 178.485 l
130.010 178.743 l
130.080 178.871 l
130.222 179.128 l
130.363 179.384 l
130.505 179.640 l
130.717 180.023 l
130.858 180.278 l
131.000 180.533 l
131.141 180.787 l
131.353 181.167 l
131.494 181.421 l
131.636 181.673 l
131.848 182.052 l
132.060 182.430 l
132.202 182.681 l
132.414 183.058 l
132.626 183.433 l
132.696 183.558 l
132.909 183.933 l
133.121 184.306 l
133.333 184.679 l
133.545 185.051 l
133.757 185.423 l
133.969 185.793 l
134.111 186.039 l
134.323 186.409 l
134.464 186.654 l
134.676 187.022 l
134.888 187.389 l
135.030 187.633 l
135.171 187.877 l
135.383 188.242 l
135.525 188.485 l
135.737 188.849 l
135.878 189.091 l
136.020 189.333 l
136.232 189.695 l
136.373 189.936 l
136.515 190.176 l
136.656 190.417 l
136.798 190.657 l
137.010 191.016 l
137.222 191.374 l
137.363 191.613 l
137.575 191.970 l
137.787 192.326 l
138.000 192.682 l
138.070 192.800 l
138.212 193.037 l
138.353 193.273 l
138.494 193.509 l
138.707 193.862 l
138.848 194.097 l
138.989 194.332 l
139.131 194.566 l
139.343 194.917 l
139.484 195.151 l
139.626 195.384 l
139.767 195.617 l
139.979 195.966 l
140.191 196.314 l
140.404 196.661 l
140.616 197.007 l
140.828 197.353 l
140.899 197.468 l
141.111 197.813 l
141.323 198.158 l
141.535 198.501 l
141.676 198.730 l
141.888 199.072 l
142.030 199.300 l
142.171 199.527 l
142.313 199.754 l
142.454 199.981 l
142.666 200.321 l
142.808 200.547 l
142.949 200.773 l
143.161 201.111 l
143.303 201.336 l
143.515 201.673 l
143.585 201.785 l
143.798 202.121 l
144.010 202.456 l
144.222 202.791 l
144.292 202.902 l
144.505 203.236 l
144.717 203.569 l
145.000 204.012 l
145.212 204.343 l
145.494 204.784 l
145.707 205.114 l
145.848 205.334 l
146.060 205.663 l
146.202 205.882 l
146.414 206.209 l
146.626 206.536 l
146.838 206.863 l
146.979 207.080 l
147.191 207.405 l
147.333 207.622 l
147.545 207.946 l
147.686 208.162 l
147.899 208.485 l
148.040 208.700 l
148.181 208.915 l
148.393 209.236 l
148.535 209.450 l
148.606 209.557 l
148.747 209.771 l
148.959 210.091 l
149.101 210.304 l
149.313 210.623 l
149.383 210.729 l
149.525 210.941 l
149.666 211.153 l
149.878 211.470 l
149.949 211.576 l
150.161 211.892 l
150.373 212.208 l
150.656 212.628 l
150.868 212.942 l
151.010 213.151 l
151.222 213.465 l
151.434 213.777 l
151.646 214.089 l
151.787 214.297 l
151.929 214.504 l
152.070 214.712 l
152.282 215.022 l
152.424 215.228 l
152.707 215.641 l
152.919 215.949 l
153.131 216.257 l
153.343 216.564 l
153.555 216.871 l
153.838 217.279 l
153.979 217.482 l
154.191 217.787 l
154.333 217.990 l
154.474 218.193 l
154.616 218.395 l
154.828 218.698 l
155.040 219.001 l
155.252 219.303 l
155.464 219.604 l
155.676 219.905 l
155.818 220.105 l
156.030 220.405 l
156.242 220.704 l
156.383 220.904 l
156.595 221.202 l
156.737 221.400 l
156.878 221.599 l
157.090 221.896 l
157.232 222.093 l
157.515 222.488 l
157.656 222.685 l
157.797 222.882 l
158.010 223.176 l
158.151 223.372 l
158.363 223.666 l
158.646 224.057 l
158.787 224.252 l
158.929 224.446 l
159.141 224.738 l
159.424 225.126 l
159.636 225.417 l
159.848 225.706 l
159.989 225.899 l
160.131 226.092 l
160.272 226.284 l
160.484 226.573 l
160.696 226.860 l
160.909 227.147 l
161.121 227.434 l
161.333 227.720 l
161.616 228.101 l
161.686 228.196 l
161.828 228.386 l
162.040 228.670 l
162.252 228.954 l
162.464 229.237 l
162.606 229.426 l
162.888 229.802 l
163.101 230.084 l
163.313 230.365 l
163.454 230.552 l
163.595 230.739 l
163.737 230.926 l
163.878 231.112 l
164.020 231.298 l
164.232 231.577 l
164.515 231.949 l
164.727 232.226 l
164.939 232.504 l
165.222 232.873 l
165.434 233.149 l
165.646 233.424 l
165.858 233.699 l
166.070 233.974 l
166.141 234.065 l
166.282 234.248 l
166.494 234.522 l
166.636 234.704 l
166.777 234.886 l
166.989 235.158 l
167.202 235.430 l
167.414 235.702 l
167.555 235.882 l
167.767 236.153 l
167.909 236.333 l
168.121 236.603 l
168.404 236.962 l
168.545 237.142 l
168.686 237.321 l
168.828 237.499 l
169.040 237.767 l
169.252 238.034 l
169.323 238.123 l
169.464 238.301 l
169.676 238.568 l
169.818 238.745 l
170.030 239.011 l
170.242 239.276 l
170.525 239.628 l
170.666 239.804 l
170.878 240.068 l
171.090 240.331 l
171.303 240.594 l
171.444 240.769 l
171.727 241.118 l
171.939 241.380 l
172.151 241.641 l
172.363 241.901 l
172.505 242.075 l
172.717 242.334 l
172.929 242.593 l
173.070 242.766 l
173.282 243.025 l
173.494 243.283 l
173.707 243.540 l
173.848 243.712 l
174.060 243.969 l
174.272 244.225 l
174.484 244.481 l
174.626 244.651 l
174.838 244.907 l
175.050 245.161 l
175.333 245.500 l
175.545 245.754 l
175.828 246.092 l
176.040 246.345 l
176.181 246.513 l
176.393 246.765 l
176.676 247.100 l
176.888 247.351 l
177.101 247.602 l
177.313 247.852 l
177.454 248.018 l
177.666 248.268 l
177.878 248.517 l
178.020 248.683 l
178.303 249.014 l
178.515 249.261 l
178.656 249.426 l
178.868 249.673 l
179.080 249.920 l
179.222 250.084 l
179.505 250.412 l
179.646 250.576 l
179.858 250.821 l
180.070 251.065 l
180.353 251.391 l
180.565 251.635 l
180.777 251.878 l
180.989 252.121 l
181.202 252.363 l
181.414 252.606 l
181.484 252.686 l
181.696 252.928 l
181.909 253.169 l
182.121 253.410 l
182.404 253.730 l
182.616 253.970 l
182.828 254.209 l
183.040 254.448 l
183.252 254.687 l
183.535 255.004 l
183.818 255.321 l
184.030 255.558 l
184.313 255.874 l
184.525 256.110 l
184.737 256.346 l
185.020 256.660 l
185.232 256.895 l
185.444 257.129 l
185.727 257.441 l
185.939 257.675 l
186.151 257.908 l
186.434 258.219 l
186.646 258.451 l
186.787 258.606 l
187.000 258.838 l
187.070 258.915 l
187.282 259.146 l
187.494 259.377 l
187.707 259.607 l
187.919 259.837 l
188.131 260.067 l
188.343 260.296 l
188.555 260.525 l
188.767 260.754 l
188.979 260.982 l
189.191 261.210 l
189.333 261.362 l
189.474 261.513 l
189.686 261.740 l
189.899 261.967 l
190.111 262.193 l
190.393 262.494 l
190.535 262.645 l
190.818 262.945 l
190.959 263.095 l
191.101 263.244 l
191.313 263.469 l
191.525 263.693 l
191.808 263.991 l
191.949 264.139 l
192.161 264.362 l
192.373 264.584 l
192.515 264.733 l
192.727 264.954 l
193.010 265.250 l
193.151 265.397 l
193.434 265.691 l
193.575 265.838 l
193.787 266.058 l
194.070 266.351 l
194.141 266.424 l
194.353 266.644 l
194.565 266.862 l
194.777 267.081 l
195.060 267.372 l
195.202 267.517 l
195.414 267.734 l
195.626 267.951 l
195.909 268.240 l
196.191 268.529 l
196.404 268.744 l
196.616 268.960 l
196.899 269.247 l
197.181 269.533 l
197.464 269.818 l
197.606 269.961 l
197.888 270.246 l
197.959 269.412 l
198.101 269.540 l
198.313 269.732 l
198.666 270.052 l
198.878 270.243 l
199.090 270.434 l
199.373 270.689 l
199.515 270.816 l
199.797 271.069 l
200.080 271.322 l
200.363 271.575 l
200.505 271.701 l
200.787 271.954 l
201.141 272.268 l
201.424 272.519 l
201.707 272.770 l
201.919 272.957 l
202.131 273.145 l
202.414 273.394 l
202.767 273.705 l
202.979 273.892 l
203.333 274.202 l
203.616 274.449 l
203.828 274.635 l
204.111 274.881 l
204.323 275.066 l
204.464 275.189 l
204.747 275.435 l
204.959 275.619 l
205.242 275.864 l
205.454 276.047 l
205.525 276.109 l
205.878 276.414 l
206.232 276.718 l
206.585 277.022 l
206.656 277.082 l
206.868 277.264 l
207.151 277.506 l
207.363 277.688 l
207.646 277.929 l
207.929 278.170 l
208.141 278.350 l
208.282 278.470 l
208.494 278.650 l
208.777 278.890 l
208.919 279.009 l
209.131 279.189 l
209.272 279.308 l
209.696 279.666 l
209.909 279.844 l
210.121 280.022 l
210.474 280.319 l
210.616 280.437 l
210.898 280.673 l
211.111 280.851 l
211.252 280.968 l
211.393 281.086 l
211.606 281.263 l
211.959 281.556 l
212.242 281.791 l
212.525 282.025 l
212.737 282.200 l
212.949 282.375 l
213.232 282.608 l
213.444 282.783 l
213.656 282.957 l
213.939 283.189 l
214.151 283.363 l
214.292 283.479 l
214.575 283.710 l
214.787 283.883 l
215.212 284.229 l
215.424 284.401 l
215.777 284.688 l
216.060 284.917 l
216.343 285.146 l
216.626 285.374 l
216.838 285.545 l
217.121 285.772 l
217.262 285.886 l
217.474 286.056 l
217.757 286.283 l
217.898 286.396 l
218.111 286.566 l
218.393 286.792 l
218.464 286.848 l
218.747 287.073 l
219.030 287.298 l
219.313 287.523 l
219.595 287.747 l
219.808 287.915 l
220.090 288.138 l
220.373 288.362 l
220.585 288.529 l
220.868 288.751 l
221.080 288.918 l
221.292 289.084 l
221.505 289.250 l
221.787 289.472 l
222.070 289.693 l
222.424 289.968 l
222.494 290.023 l
222.707 290.188 l
222.919 290.353 l
223.060 290.463 l
223.343 290.682 l
223.626 290.901 l
223.909 291.119 l
224.191 291.337 l
224.616 291.664 l
224.757 291.772 l
225.040 291.989 l
225.323 292.206 l
225.676 292.476 l
225.959 292.692 l
226.101 292.800 l
226.454 293.069 l
226.595 293.177 l
226.878 293.391 l
227.161 293.606 l
227.515 293.873 l
227.656 293.980 l
227.868 294.140 l
228.151 294.353 l
228.434 294.566 l
228.646 294.725 l
228.858 294.884 l
229.000 294.990 l
229.282 295.202 l
229.565 295.413 l
229.777 295.571 l
229.848 295.624 l
229.919 295.677 l
230.202 295.887 l
230.414 296.045 l
230.696 296.255 l
231.050 296.517 l
231.333 296.726 l
231.474 296.830 l
231.828 297.091 l
232.252 297.403 l
232.393 297.507 l
232.464 297.559 l
232.535 297.611 l
232.888 297.870 l
233.171 298.077 l
233.525 298.335 l
233.666 298.438 l
233.878 298.593 l
234.232 298.850 l
234.444 299.004 l
234.585 299.107 l
234.868 299.311 l
235.151 299.516 l
235.434 299.720 l
235.717 299.924 l
236.070 300.179 l
236.424 300.433 l
236.777 300.686 l
237.060 300.888 l
237.343 301.090 l
237.696 301.343 l
237.838 301.443 l
238.121 301.644 l
238.333 301.795 l
238.474 301.895 l
238.899 302.196 l
239.252 302.446 l
239.606 302.695 l
239.747 302.795 l
240.030 302.994 l
240.242 303.143 l
240.454 303.292 l
240.666 303.440 l
240.878 303.589 l
241.161 303.787 l
241.373 303.935 l
241.515 304.033 l
241.939 304.329 l
242.222 304.525 l
242.434 304.673 l
242.646 304.820 l
242.787 304.917 l
243.000 305.064 l
243.424 305.357 l
243.494 305.406 l
243.848 305.649 l
244.131 305.844 l
244.414 306.038 l
244.696 306.232 l
244.909 306.377 l
245.121 306.522 l
245.333 306.667 l
245.616 306.860 l
245.969 307.101 l
246.323 307.341 l
246.606 307.533 l
246.818 307.676 l
246.888 307.724 l
246.959 307.772 l
247.242 307.963 l
247.383 308.059 l
247.737 308.297 l
247.808 308.344 l
247.878 308.392 l
248.161 308.582 l
248.515 308.819 l
248.797 309.009 l
249.080 309.198 l
249.292 309.340 l
249.505 309.481 l
249.787 309.670 l
250.000 309.811 l
250.141 309.905 l
250.424 310.093 l
250.777 310.327 l
251.202 310.608 l
251.484 310.795 l
251.767 310.981 l
252.050 311.167 l
252.191 311.260 l
252.616 311.539 l
252.757 311.632 l
253.111 311.863 l
253.323 312.002 l
253.606 312.186 l
253.888 312.371 l
254.101 312.509 l
254.454 312.738 l
254.808 312.968 l
255.090 313.151 l
255.232 313.242 l
255.373 313.334 l
255.656 313.516 l
255.797 313.607 l
256.010 313.744 l
256.222 313.880 l
256.434 314.017 l
256.505 314.062 l
256.575 314.108 l
256.646 314.153 l
256.717 314.198 l
256.787 314.244 l
256.858 314.289 l
257.282 314.561 l
257.494 314.696 l
257.777 314.877 l
257.848 314.922 l
257.919 314.967 l
258.202 315.147 l
258.626 315.416 l
258.838 315.551 l
259.050 315.686 l
259.121 315.730 l
259.191 315.775 l
259.474 315.954 l
259.686 316.088 l
259.898 316.222 l
260.181 316.400 l
260.393 316.533 l
260.676 316.711 l
261.030 316.933 l
261.101 316.977 l
261.171 317.022 l
261.313 317.110 l
261.595 317.287 l
261.737 317.375 l
261.949 317.508 l
262.232 317.684 l
262.515 317.860 l
262.868 318.080 l
263.080 318.211 l
263.222 318.299 l
263.292 318.343 l
263.363 318.386 l
263.575 318.518 l
263.929 318.736 l
263.999 318.780 l
264.282 318.954 l
264.494 319.085 l
264.777 319.259 l
264.919 319.346 l
265.131 319.476 l
265.555 319.736 l
265.838 319.909 l
265.979 319.995 l
266.262 320.168 l
266.474 320.297 l
266.757 320.469 l
266.898 320.555 l
267.252 320.770 l
267.393 320.855 l
267.535 320.941 l
267.676 321.027 l
267.818 321.112 l
267.888 321.155 l
267.959 321.198 l
268.171 321.326 l
268.454 321.497 l
268.737 321.667 l
268.949 321.795 l
269.303 322.007 l
269.585 322.177 l
269.797 322.304 l
270.080 322.473 l
270.292 322.600 l
270.363 322.642 l
270.434 322.684 l
270.575 322.768 l
270.646 322.811 l
270.717 322.853 l
270.999 323.021 l
271.212 323.147 l
271.424 323.273 l
271.494 323.315 l
271.565 323.357 l
271.848 323.525 l
272.272 323.776 l
272.626 323.985 l
272.909 324.151 l
273.262 324.360 l
273.474 324.484 l
273.616 324.567 l
273.898 324.733 l
274.040 324.816 l
274.393 325.023 l
274.606 325.147 l
274.676 325.188 l
274.747 325.229 l
274.818 325.271 l
275.101 325.436 l
275.242 325.518 l
275.525 325.683 l
275.808 325.847 l
276.090 326.011 l
276.161 326.052 l
276.232 326.093 l
276.515 326.257 l
276.797 326.420 l
277.010 326.543 l
277.292 326.706 l
277.575 326.868 l
277.999 327.112 l
278.070 327.153 l
278.141 327.193 l
278.212 327.234 l
278.636 327.477 l
278.989 327.679 l
279.343 327.881 l
279.555 328.002 l
279.626 328.042 l
279.696 328.082 l
279.979 328.243 l
280.404 328.484 l
280.545 328.564 l
280.616 328.604 l
280.969 328.805 l
281.111 328.884 l
281.535 329.124 l
281.747 329.244 l
281.959 329.363 l
282.171 329.482 l
282.525 329.681 l
282.737 329.800 l
282.878 329.879 l
282.949 329.919 l
283.020 329.958 l
283.232 330.077 l
283.303 330.117 l
283.373 330.156 l
283.656 330.314 l
283.797 330.393 l
283.868 330.432 l
283.939 330.472 l
284.151 330.590 l
284.363 330.708 l
284.646 330.865 l
284.858 330.983 l
285.141 331.140 l
285.212 331.179 l
285.282 331.218 l
285.494 331.335 l
285.777 331.492 l
285.848 331.531 l
285.919 331.570 l
286.272 331.765 l
286.696 331.998 l
286.767 332.037 l
286.838 332.076 l
287.121 332.231 l
287.616 332.502 l
287.828 332.618 l
288.040 332.734 l
288.252 332.850 l
288.323 332.889 l
288.393 332.927 l
288.464 332.966 l
288.676 333.081 l
288.959 333.235 l
289.171 333.350 l
289.383 333.466 l
289.808 333.695 l
290.090 333.848 l
290.373 334.001 l
290.656 334.154 l
291.010 334.344 l
291.222 334.458 l
291.646 334.686 l
292.070 334.914 l
292.353 335.065 l
292.777 335.292 l
293.060 335.443 l
293.272 335.555 l
293.343 335.593 l
293.414 335.631 l
293.909 335.894 l
294.050 335.969 l
294.333 336.119 l
294.404 336.156 l
294.474 336.194 l
294.898 336.418 l
295.040 336.493 l
295.393 336.679 l
295.676 336.828 l
296.171 337.088 l
296.595 337.311 l
296.949 337.496 l
297.090 337.569 l
297.161 337.606 l
297.232 337.643 l
297.515 337.791 l
297.868 337.975 l
298.010 338.049 l
298.080 338.086 l
298.151 338.122 l
298.434 338.269 l
298.575 338.343 l
298.858 338.489 l
299.141 338.636 l
299.282 338.709 l
299.353 338.746 l
299.424 338.782 l
299.494 338.819 l
299.565 338.855 l
299.636 338.892 l
299.989 339.074 l
300.202 339.183 l
300.272 339.220 l
300.626 339.402 l
300.909 339.547 l
301.262 339.728 l
301.757 339.982 l
302.040 340.126 l
302.252 340.234 l
302.323 340.270 l
302.393 340.306 l
302.676 340.450 l
302.959 340.594 l
303.171 340.702 l
303.313 340.774 l
303.595 340.917 l
303.808 341.025 l
304.232 341.239 l
304.444 341.346 l
304.585 341.418 l
304.656 341.453 l
304.797 341.525 l
305.292 341.774 l
305.575 341.916 l
305.646 341.951 l
305.717 341.987 l
305.999 342.128 l
306.212 342.235 l
306.494 342.376 l
306.848 342.553 l
306.989 342.623 l
307.060 342.658 l
307.131 342.694 l
307.414 342.835 l
307.626 342.940 l
307.838 343.046 l
308.262 343.256 l
308.545 343.396 l
308.828 343.536 l
308.898 343.571 l
308.969 343.606 l
309.252 343.746 l
309.323 343.781 l
309.393 343.815 l
309.747 343.990 l
310.171 344.198 l
310.383 344.303 l
310.454 344.337 l
310.595 344.407 l
310.737 344.476 l
310.808 344.511 l
310.878 344.545 l
311.161 344.684 l
311.232 344.718 l
311.303 344.753 l
311.656 344.925 l
312.010 345.098 l
312.222 345.201 l
312.575 345.373 l
312.858 345.510 l
313.070 345.613 l
313.424 345.785 l
313.565 345.853 l
314.060 346.092 l
314.343 346.229 l
314.626 346.365 l
314.696 346.399 l
314.767 346.433 l
315.050 346.569 l
315.333 346.705 l
315.474 346.772 l
315.686 346.874 l
315.969 347.009 l
316.181 347.111 l
316.252 347.145 l
316.323 347.179 l
316.606 347.314 l
316.676 347.347 l
316.747 347.381 l
317.101 347.549 l
317.383 347.684 l
317.454 347.717 l
317.808 347.885 l
318.090 348.019 l
318.302 348.120 l
318.727 348.321 l
319.080 348.487 l
319.151 348.521 l
319.222 348.554 l
319.575 348.721 l
319.787 348.820 l
320.212 349.020 l
320.282 349.053 l
320.424 349.119 l
320.565 349.185 l
320.636 349.219 l
320.707 349.252 l
320.919 349.351 l
320.989 349.384 l
321.060 349.417 l
321.131 349.450 l
321.202 349.483 l
321.414 349.582 l
321.767 349.747 l
322.050 349.879 l
322.404 350.043 l
322.545 350.109 l
322.757 350.207 l
323.111 350.371 l
323.464 350.535 l
323.535 350.568 l
323.606 350.600 l
323.959 350.764 l
324.171 350.861 l
324.242 350.894 l
324.383 350.959 l
324.737 351.122 l
325.020 351.252 l
325.161 351.317 l
325.232 351.349 l
325.444 351.446 l
325.797 351.608 l
326.292 351.835 l
326.505 351.931 l
326.575 351.964 l
326.646 351.996 l
327.141 352.221 l
327.353 352.318 l
327.424 352.350 l
327.565 352.414 l
327.777 352.510 l
327.848 352.542 l
327.919 352.575 l
328.414 352.799 l
328.555 352.863 l
328.626 352.895 l
328.696 352.926 l
329.121 353.118 l
329.262 353.182 l
329.333 353.214 l
329.474 353.277 l
329.545 353.309 l
329.616 353.341 l
329.828 353.436 l
329.898 353.468 l
329.969 353.500 l
330.111 353.563 l
330.252 353.627 l
330.323 353.659 l
330.747 353.849 l
330.818 353.880 l
330.888 353.912 l
331.313 354.102 l
331.737 354.291 l
331.949 354.385 l
332.020 354.417 l
332.232 354.511 l
332.515 354.637 l
332.585 354.668 l
332.656 354.700 l
333.222 354.951 l
333.363 355.013 l
333.434 355.044 l
333.505 355.076 l
333.858 355.232 l
333.929 355.263 l
333.999 355.294 l
334.282 355.419 l
334.707 355.606 l
334.777 355.637 l
334.848 355.668 l
335.201 355.824 l
335.555 355.979 l
336.050 356.195 l
336.191 356.257 l
336.333 356.319 l
336.404 356.350 l
336.616 356.443 l
337.252 356.720 l
337.323 356.751 l
337.393 356.781 l
337.535 356.843 l
337.818 356.966 l
337.959 357.027 l
338.171 357.119 l
338.454 357.241 l
338.737 357.364 l
338.878 357.425 l
339.090 357.517 l
339.373 357.639 l
339.444 357.669 l
339.515 357.700 l
339.656 357.760 l
339.727 357.791 l
339.797 357.821 l
339.939 357.882 l
340.222 358.004 l
340.292 358.034 l
340.434 358.095 l
340.646 358.186 l
340.929 358.307 l
341.212 358.428 l
341.282 358.458 l
341.353 358.489 l
341.424 358.519 l
341.494 358.549 l
341.565 358.579 l
341.636 358.609 l
341.707 358.640 l
341.777 358.670 l
341.848 358.700 l
342.272 358.881 l
342.484 358.971 l
342.626 359.031 l
342.696 359.061 l
343.050 359.211 l
343.121 359.241 l
343.191 359.271 l
343.474 359.391 l
343.828 359.541 l
343.898 359.571 l
343.969 359.601 l
344.181 359.690 l
344.393 359.780 l
344.535 359.839 l
344.606 359.869 l
344.959 360.018 l
345.242 360.137 l
345.383 360.197 l
345.525 360.256 l
345.595 360.286 l
345.666 360.315 l
345.808 360.375 l
346.090 360.493 l
346.444 360.641 l
346.515 360.671 l
346.585 360.700 l
346.656 360.730 l
346.727 360.759 l
346.868 360.819 l
346.939 360.848 l
347.080 360.907 l
347.292 360.996 l
347.575 361.113 l
347.858 361.231 l
347.929 361.260 l
347.999 361.290 l
348.353 361.437 l
348.424 361.466 l
348.494 361.495 l
348.848 361.642 l
348.919 361.671 l
348.989 361.700 l
349.343 361.846 l
349.414 361.876 l
349.484 361.905 l
349.838 362.051 l
349.909 362.080 l
349.979 362.109 l
350.333 362.255 l
350.404 362.284 l
350.474 362.313 l
350.828 362.458 l
350.898 362.487 l
350.969 362.516 l
351.323 362.661 l
351.464 362.719 l
351.535 362.748 l
351.606 362.777 l
351.888 362.892 l
351.959 362.921 l
352.171 363.008 l
352.242 363.037 l
352.313 363.066 l
352.525 363.152 l
352.808 363.267 l
352.878 363.296 l
352.949 363.325 l
353.161 363.411 l
353.232 363.440 l
353.302 363.469 l
353.515 363.555 l
353.868 363.698 l
353.939 363.727 l
354.080 363.784 l
354.292 363.870 l
354.575 363.985 l
354.858 364.099 l
354.929 364.127 l
354.999 364.156 l
355.070 364.184 l
355.141 364.213 l
355.424 364.327 l
355.494 364.355 l
355.565 364.384 l
356.131 364.611 l
356.343 364.696 l
356.626 364.810 l
356.909 364.923 l
356.979 364.951 l
357.050 364.980 l
357.121 365.008 l
357.191 365.036 l
357.262 365.065 l
357.404 365.121 l
357.474 365.149 l
357.545 365.178 l
357.616 365.206 l
357.686 365.234 l
357.898 365.319 l
358.040 365.375 l
358.111 365.403 l
358.252 365.459 l
358.393 365.516 l
358.535 365.572 l
358.606 365.600 l
358.888 365.712 l
358.959 365.740 l
359.100 365.797 l
359.171 365.825 l
359.313 365.881 l
359.383 365.909 l
359.454 365.937 l
359.525 365.965 l
359.595 365.993 l
359.737 366.049 l
360.302 366.272 l
360.656 366.412 l
360.797 366.467 l
360.868 366.495 l
361.010 366.551 l
361.151 366.606 l
361.222 366.634 l
361.292 366.662 l
361.363 366.690 l
361.646 366.801 l
361.717 366.829 l
361.787 366.856 l
361.858 366.884 l
362.070 366.967 l
362.141 366.995 l
362.212 367.023 l
362.424 367.106 l
362.707 367.216 l
362.777 367.244 l
362.848 367.272 l
363.201 367.410 l
363.272 367.437 l
363.343 367.465 l
363.414 367.492 l
363.555 367.547 l
363.979 367.712 l
364.404 367.877 l
364.474 367.905 l
364.616 367.960 l
364.898 368.069 l
364.969 368.096 l
365.040 368.124 l
365.252 368.206 l
365.323 368.233 l
365.393 368.261 l
365.464 368.288 l
365.535 368.315 l
365.676 368.370 l
365.959 368.479 l
366.242 368.588 l
366.454 368.670 l
366.595 368.724 l
366.666 368.751 l
366.737 368.778 l
366.808 368.806 l
366.878 368.833 l
366.949 368.860 l
367.020 368.887 l
367.090 368.914 l
367.161 368.941 l
367.232 368.969 l
367.373 369.023 l
367.444 369.050 l
367.585 369.104 l
367.656 369.131 l
367.727 369.158 l
367.868 369.212 l
368.151 369.321 l
368.292 369.375 l
368.363 369.402 l
368.434 369.429 l
368.505 369.456 l
368.717 369.537 l
368.858 369.590 l
368.929 369.617 l
368.999 369.644 l
369.070 369.671 l
369.141 369.698 l
369.212 369.725 l
369.353 369.779 l
369.424 369.806 l
369.494 369.833 l
369.565 369.860 l
369.848 369.967 l
370.131 370.074 l
370.484 370.208 l
370.555 370.235 l
370.626 370.262 l
370.767 370.315 l
370.909 370.369 l
370.979 370.395 l
371.050 370.422 l
371.191 370.476 l
371.262 370.502 l
371.333 370.529 l
371.686 370.662 l
371.757 370.689 l
371.898 370.742 l
372.040 370.795 l
372.181 370.849 l
372.252 370.875 l
372.323 370.902 l
372.393 370.928 l
372.535 370.981 l
372.747 371.061 l
372.888 371.114 l
372.959 371.141 l
373.030 371.167 l
373.242 371.247 l
373.313 371.273 l
373.383 371.300 l
373.454 371.326 l
373.525 371.353 l
373.808 371.458 l
373.878 371.485 l
373.949 371.511 l
374.020 371.537 l
374.090 371.564 l
374.232 371.617 l
374.373 371.669 l
374.515 371.722 l
374.585 371.748 l
374.656 371.775 l
374.939 371.880 l
375.010 371.906 l
375.080 371.933 l
375.363 372.038 l
375.434 372.064 l
375.505 372.090 l
375.575 372.116 l
375.646 372.143 l
375.717 372.169 l
375.787 372.195 l
375.858 372.221 l
375.929 372.247 l
376.212 372.352 l
376.353 372.404 l
376.424 372.431 l
376.565 372.483 l
376.636 372.509 l
376.777 372.561 l
377.060 372.666 l
377.131 372.692 l
377.201 372.718 l
377.272 372.744 l
377.343 372.770 l
377.626 372.874 l
377.696 372.900 l
377.767 372.926 l
377.909 372.978 l
377.979 373.004 l
378.191 373.082 l
378.262 373.108 l
378.333 373.134 l
378.474 373.186 l
378.545 373.212 l
378.616 373.238 l
379.111 373.419 l
379.535 373.574 l
379.818 373.677 l
379.888 373.703 l
379.959 373.729 l
380.030 373.754 l
380.100 373.780 l
380.171 373.806 l
380.242 373.832 l
380.383 373.883 l
380.525 373.935 l
380.949 374.089 l
381.232 374.192 l
381.515 374.294 l
381.656 374.345 l
381.727 374.371 l
382.080 374.499 l
382.151 374.524 l
382.222 374.550 l
382.717 374.729 l
382.858 374.780 l
382.929 374.805 l
382.999 374.831 l
383.353 374.958 l
383.707 375.085 l
383.919 375.161 l
383.989 375.186 l
384.060 375.212 l
384.131 375.237 l
384.201 375.263 l
384.343 375.313 l
384.414 375.339 l
384.484 375.364 l
384.555 375.389 l
384.909 375.516 l
385.191 375.617 l
385.474 375.718 l
385.545 375.743 l
385.616 375.768 l
385.757 375.819 l
386.040 375.919 l
386.111 375.944 l
386.181 375.970 l
386.393 376.045 l
386.464 376.070 l
386.676 376.146 l
387.030 376.271 l
387.100 376.296 l
387.171 376.321 l
387.313 376.371 l
387.454 376.421 l
387.525 376.446 l
387.595 376.471 l
387.737 376.521 l
388.020 376.621 l
388.302 376.721 l
388.656 376.846 l
388.939 376.946 l
389.010 376.970 l
389.080 376.995 l
389.151 377.020 l
389.292 377.070 l
389.575 377.169 l
389.717 377.219 l
389.787 377.244 l
389.858 377.269 l
389.929 377.293 l
390.212 377.392 l
390.565 377.516 l
390.848 377.615 l
390.989 377.664 l
391.060 377.689 l
391.131 377.714 l
391.201 377.739 l
391.484 377.837 l
391.555 377.862 l
391.626 377.886 l
392.191 378.083 l
392.404 378.157 l
392.474 378.182 l
392.545 378.206 l
392.757 378.280 l
392.898 378.329 l
392.969 378.353 l
393.040 378.378 l
393.111 378.402 l
393.252 378.451 l
393.323 378.476 l
393.393 378.500 l
393.464 378.525 l
393.747 378.622 l
393.959 378.696 l
394.030 378.720 l
394.100 378.744 l
394.454 378.866 l
394.737 378.964 l
395.020 379.061 l
395.090 379.085 l
395.161 379.110 l
395.302 379.158 l
395.373 379.183 l
395.727 379.304 l
396.080 379.425 l
396.363 379.522 l
396.504 379.570 l
396.575 379.594 l
396.929 379.715 l
396.999 379.739 l
397.070 379.763 l
397.353 379.860 l
397.424 379.884 l
397.494 379.908 l
397.636 379.956 l
397.707 379.980 l
397.777 380.004 l
397.989 380.076 l
398.060 380.100 l
398.131 380.124 l
398.272 380.173 l
398.343 380.197 l
398.484 380.245 l
398.626 380.293 l
398.767 380.340 l
398.838 380.364 l
398.979 380.412 l
399.050 380.436 l
399.121 380.460 l
399.474 380.580 l
399.757 380.675 l
399.828 380.699 l
399.898 380.723 l
399.969 380.747 l
400.040 380.771 l
400.111 380.795 l
400.181 380.819 l
400.323 380.866 l
400.393 380.890 l
400.464 380.914 l
400.818 381.033 l
400.959 381.080 l
401.030 381.104 l
401.171 381.152 l
401.313 381.199 l
401.383 381.223 l
401.454 381.247 l
401.737 381.341 l
401.878 381.389 l
401.949 381.413 l
402.020 381.436 l
402.090 381.460 l
402.161 381.483 l
402.232 381.507 l
402.302 381.531 l
402.373 381.554 l
402.515 381.602 l
402.585 381.625 l
402.656 381.649 l
402.727 381.673 l
402.797 381.696 l
403.151 381.814 l
403.575 381.955 l
403.717 382.003 l
403.787 382.026 l
403.858 382.050 l
404.141 382.144 l
404.212 382.167 l
404.282 382.191 l
404.353 382.214 l
404.424 382.237 l
404.565 382.284 l
404.636 382.308 l
405.131 382.472 l
405.201 382.495 l
405.272 382.519 l
405.484 382.589 l
405.555 382.612 l
405.626 382.635 l
405.838 382.705 l
405.909 382.729 l
405.979 382.752 l
406.121 382.799 l
406.191 382.822 l
406.403 382.892 l
406.474 382.915 l
406.828 383.032 l
406.898 383.055 l
406.969 383.078 l
407.393 383.217 l
407.606 383.287 l
407.676 383.310 l
407.747 383.333 l
408.030 383.426 l
408.383 383.542 l
408.666 383.634 l
408.737 383.657 l
408.808 383.680 l
408.949 383.726 l
409.302 383.842 l
409.373 383.865 l
409.444 383.888 l
409.515 383.911 l
409.585 383.934 l
409.656 383.957 l
409.868 384.026 l
410.151 384.118 l
410.434 384.209 l
410.504 384.232 l
410.575 384.255 l
410.787 384.324 l
411.141 384.438 l
411.565 384.576 l
411.919 384.690 l
412.060 384.735 l
412.131 384.758 l
412.201 384.781 l
412.343 384.827 l
412.626 384.918 l
412.767 384.963 l
412.838 384.986 l
412.909 385.009 l
413.050 385.054 l
413.404 385.168 l
413.686 385.258 l
413.757 385.281 l
413.828 385.304 l
414.040 385.371 l
414.111 385.394 l
414.464 385.507 l
414.888 385.643 l
415.171 385.733 l
415.595 385.868 l
415.737 385.913 l
415.808 385.936 l
415.878 385.958 l
416.020 386.003 l
416.232 386.070 l
416.302 386.093 l
416.373 386.115 l
416.656 386.205 l
416.727 386.227 l
416.797 386.250 l
417.010 386.317 l
417.151 386.362 l
417.222 386.384 l
417.434 386.451 l
417.504 386.474 l
417.575 386.496 l
417.646 386.518 l
417.717 386.541 l
417.858 386.585 l
418.141 386.674 l
418.212 386.697 l
418.282 386.719 l
418.424 386.764 l
418.494 386.786 l
418.707 386.853 l
418.848 386.897 l
418.919 386.919 l
418.989 386.942 l
419.343 387.053 l
419.626 387.141 l
419.767 387.186 l
419.838 387.208 l
419.909 387.230 l
419.979 387.252 l
420.050 387.274 l
420.121 387.297 l
420.404 387.385 l
420.474 387.407 l
420.686 387.473 l
420.757 387.496 l
420.898 387.540 l
421.252 387.650 l
421.606 387.760 l
421.818 387.826 l
421.888 387.848 l
421.959 387.870 l
422.030 387.892 l
422.100 387.914 l
422.171 387.936 l
422.242 387.958 l
422.313 387.980 l
422.383 388.002 l
422.666 388.090 l
422.737 388.112 l
422.808 388.134 l
423.161 388.243 l
423.232 388.265 l
423.302 388.287 l
423.373 388.309 l
423.515 388.353 l
423.939 388.484 l
424.222 388.571 l
424.363 388.615 l
424.575 388.680 l
424.646 388.702 l
424.717 388.723 l
424.999 388.811 l
425.070 388.832 l
425.141 388.854 l
425.353 388.919 l
425.777 389.049 l
425.848 389.071 l
425.919 389.093 l
426.201 389.179 l
426.414 389.244 l
426.484 389.266 l
426.555 389.288 l
426.626 389.309 l
426.696 389.331 l
426.767 389.353 l
426.838 389.374 l
427.333 389.525 l
427.404 389.547 l
427.474 389.568 l
427.757 389.655 l
427.898 389.698 l
427.969 389.719 l
428.040 389.741 l
428.111 389.762 l
428.181 389.784 l
428.252 389.805 l
428.323 389.827 l
428.464 389.870 l
428.535 389.891 l
428.606 389.913 l
428.676 389.934 l
428.747 389.955 l
428.818 389.977 l
428.888 389.998 l
429.030 390.041 l
429.383 390.148 l
429.737 390.255 l
429.808 390.277 l
429.878 390.298 l
430.090 390.362 l
430.161 390.383 l
430.232 390.405 l
430.585 390.512 l
430.797 390.575 l
430.939 390.618 l
431.010 390.639 l
431.080 390.661 l
431.292 390.724 l
431.363 390.746 l
431.434 390.767 l
431.787 390.873 l
431.858 390.894 l
431.929 390.916 l
431.999 390.937 l
432.141 390.979 l
432.212 391.000 l
432.282 391.022 l
432.565 391.106 l
432.636 391.127 l
432.777 391.170 l
432.848 391.191 l
432.919 391.212 l
433.060 391.254 l
433.343 391.339 l
433.484 391.381 l
433.555 391.402 l
433.696 391.444 l
433.767 391.465 l
433.909 391.507 l
434.121 391.571 l
434.191 391.592 l
434.262 391.613 l
434.686 391.739 l
435.111 391.865 l
435.181 391.886 l
435.252 391.907 l
435.323 391.928 l
435.464 391.970 l
435.535 391.991 l
435.606 392.012 l
435.747 392.053 l
435.818 392.074 l
435.888 392.095 l
436.030 392.137 l
436.100 392.158 l
436.171 392.179 l
436.313 392.221 l
436.666 392.325 l
436.808 392.367 l
436.878 392.388 l
436.949 392.408 l
437.090 392.450 l
437.161 392.471 l
437.232 392.492 l
437.373 392.533 l
437.444 392.554 l
437.585 392.596 l
437.868 392.679 l
437.939 392.700 l
438.010 392.720 l
438.292 392.803 l
438.363 392.824 l
438.434 392.845 l
438.787 392.949 l
438.929 392.990 l
438.999 393.011 l
439.070 393.031 l
439.141 393.052 l
439.212 393.073 l
439.282 393.093 l
439.565 393.176 l
439.636 393.197 l
439.707 393.217 l
439.989 393.300 l
440.060 393.320 l
440.131 393.341 l
440.414 393.423 l
440.909 393.567 l
441.333 393.691 l
441.828 393.834 l
442.040 393.896 l
442.111 393.916 l
442.252 393.957 l
442.464 394.018 l
442.535 394.039 l
442.606 394.059 l
442.818 394.120 l
442.888 394.141 l
442.959 394.161 l
443.030 394.182 l
443.100 394.202 l
443.171 394.223 l
443.242 394.243 l
443.313 394.263 l
443.383 394.284 l
443.454 394.304 l
443.525 394.324 l
443.808 394.406 l
443.878 394.426 l
443.949 394.446 l
444.020 394.467 l
444.090 394.487 l
444.161 394.507 l
444.302 394.548 l
444.373 394.568 l
444.515 394.609 l
444.585 394.629 l
444.656 394.650 l
444.797 394.690 l
445.080 394.771 l
445.222 394.812 l
445.292 394.832 l
445.575 394.913 l
445.717 394.953 l
445.787 394.974 l
445.858 394.994 l
446.070 395.054 l
446.212 395.095 l
446.282 395.115 l
446.353 395.135 l
446.494 395.175 l
446.919 395.296 l
447.343 395.417 l
447.838 395.557 l
448.121 395.638 l
448.191 395.658 l
448.262 395.678 l
448.333 395.698 l
448.403 395.718 l
448.545 395.758 l
448.616 395.778 l
448.828 395.838 l
448.898 395.858 l
449.111 395.918 l
449.181 395.938 l
449.252 395.958 l
449.464 396.018 l
449.606 396.057 l
449.676 396.077 l
449.959 396.157 l
450.100 396.197 l
450.171 396.217 l
450.313 396.257 l
450.383 396.276 l
450.525 396.316 l
450.808 396.396 l
450.878 396.416 l
450.949 396.435 l
451.302 396.535 l
451.373 396.554 l
451.444 396.574 l
451.727 396.653 l
451.868 396.693 l
451.939 396.713 l
452.080 396.752 l
452.151 396.772 l
452.292 396.812 l
452.505 396.871 l
452.646 396.910 l
452.717 396.930 l
452.787 396.950 l
453.070 397.029 l
453.141 397.048 l
453.212 397.068 l
453.565 397.167 l
454.060 397.304 l
454.201 397.343 l
454.272 397.363 l
454.343 397.383 l
454.414 397.402 l
454.484 397.422 l
454.555 397.441 l
454.626 397.461 l
454.838 397.520 l
454.909 397.539 l
455.050 397.579 l
455.191 397.618 l
455.262 397.637 l
455.333 397.657 l
455.403 397.676 l
455.474 397.696 l
455.828 397.794 l
455.898 397.813 l
455.969 397.833 l
456.252 397.911 l
456.323 397.930 l
456.393 397.950 l
456.676 398.027 l
456.747 398.047 l
456.888 398.086 l
457.171 398.164 l
457.242 398.183 l
457.313 398.202 l
457.808 398.338 l
458.090 398.416 l
458.161 398.435 l
458.232 398.455 l
458.302 398.474 l
458.373 398.493 l
458.515 398.532 l
458.585 398.551 l
458.656 398.571 l
458.727 398.590 l
458.797 398.609 l
458.939 398.648 l
459.010 398.667 l
459.151 398.706 l
459.646 398.841 l
459.999 398.937 l
460.070 398.956 l
460.141 398.976 l
460.424 399.052 l
460.494 399.072 l
460.565 399.091 l
460.636 399.110 l
460.707 399.129 l
460.777 399.149 l
460.848 399.168 l
460.989 399.206 l
461.131 399.244 l
461.201 399.264 l
461.272 399.283 l
461.555 399.359 l
461.626 399.379 l
461.696 399.398 l
461.767 399.417 l
461.909 399.455 l
462.050 399.493 l
462.121 399.512 l
462.333 399.570 l
462.403 399.589 l
462.474 399.608 l
462.757 399.684 l
462.828 399.703 l
462.969 399.741 l
463.323 399.837 l
463.676 399.932 l
463.747 399.951 l
463.888 399.989 l
464.242 400.084 l
464.313 400.103 l
464.383 400.122 l
464.737 400.216 l
464.808 400.235 l
464.878 400.254 l
465.161 400.330 l
465.232 400.349 l
465.373 400.387 l
465.656 400.462 l
465.727 400.481 l
465.797 400.500 l
465.939 400.538 l
466.010 400.556 l
466.080 400.575 l
466.222 400.613 l
466.292 400.632 l
466.363 400.651 l
466.646 400.726 l
466.787 400.764 l
466.858 400.782 l
467.141 400.858 l
467.212 400.876 l
467.282 400.895 l
467.636 400.989 l
467.707 401.008 l
467.777 401.027 l
468.131 401.120 l
468.201 401.139 l
468.272 401.158 l
468.484 401.214 l
468.626 401.251 l
468.767 401.289 l
468.838 401.307 l
469.050 401.363 l
469.121 401.382 l
469.262 401.419 l
469.333 401.438 l
469.403 401.457 l
469.474 401.475 l
469.545 401.494 l
469.616 401.513 l
469.686 401.531 l
469.757 401.550 l
469.828 401.568 l
469.898 401.587 l
470.111 401.643 l
470.181 401.661 l
470.252 401.680 l
470.464 401.736 l
470.605 401.773 l
470.676 401.792 l
470.747 401.810 l
471.030 401.884 l
471.100 401.903 l
471.171 401.921 l
471.242 401.940 l
471.313 401.959 l
471.454 401.996 l
471.525 402.014 l
471.666 402.051 l
472.161 402.181 l
472.585 402.291 l
472.727 402.328 l
472.797 402.347 l
473.010 402.402 l
473.080 402.420 l
473.222 402.457 l
473.504 402.531 l
473.575 402.549 l
473.717 402.586 l
474.070 402.678 l
474.212 402.715 l
474.282 402.733 l
474.565 402.806 l
474.636 402.825 l
474.707 402.843 l
475.060 402.935 l
475.131 402.953 l
475.201 402.971 l
475.343 403.008 l
475.414 403.026 l
475.484 403.044 l
475.555 403.063 l
475.626 403.081 l
475.696 403.099 l
475.767 403.117 l
476.121 403.209 l
476.191 403.227 l
476.262 403.245 l
476.616 403.336 l
476.686 403.354 l
476.757 403.373 l
477.111 403.463 l
477.181 403.482 l
477.252 403.500 l
477.464 403.554 l
477.605 403.591 l
477.676 403.609 l
477.818 403.645 l
478.100 403.718 l
478.171 403.736 l
478.242 403.754 l
478.454 403.808 l
478.525 403.826 l
478.595 403.844 l
478.737 403.880 l
479.232 404.007 l
479.373 404.043 l
479.444 404.061 l
479.585 404.097 l
479.656 404.115 l
479.797 404.151 l
480.292 404.277 l
480.717 404.385 l
480.787 404.403 l
480.929 404.439 l
481.212 404.511 l
481.353 404.547 l
481.424 404.565 l
481.848 404.672 l
482.343 404.797 l
482.414 404.815 l
482.484 404.833 l
482.838 404.922 l
482.979 404.958 l
483.050 404.976 l
483.262 405.029 l
483.333 405.047 l
483.474 405.083 l
483.898 405.189 l
483.969 405.207 l
484.040 405.225 l
484.393 405.314 l
484.464 405.331 l
484.535 405.349 l
484.676 405.385 l
484.747 405.402 l
484.818 405.420 l
484.959 405.456 l
485.030 405.473 l
485.171 405.509 l
485.242 405.526 l
485.313 405.544 l
485.383 405.562 l
485.454 405.580 l
485.525 405.597 l
485.666 405.633 l
485.949 405.703 l
486.020 405.721 l
486.090 405.739 l
486.161 405.756 l
486.232 405.774 l
486.444 405.827 l
486.515 405.844 l
486.656 405.880 l
486.727 405.897 l
487.151 406.003 l
487.646 406.126 l
487.717 406.144 l
487.787 406.161 l
488.141 406.249 l
488.212 406.266 l
488.282 406.284 l
488.424 406.319 l
488.494 406.337 l
488.636 406.372 l
488.777 406.407 l
488.919 406.442 l
488.989 406.459 l
489.060 406.477 l
489.131 406.494 l
489.272 406.529 l
489.343 406.546 l
489.414 406.564 l
489.767 406.651 l
489.838 406.669 l
489.909 406.686 l
490.050 406.721 l
490.121 406.738 l
490.191 406.756 l
490.403 406.808 l
490.474 406.825 l
490.545 406.843 l
490.828 406.912 l
490.898 406.930 l
490.969 406.947 l
491.040 406.965 l
491.111 406.982 l
491.181 406.999 l
491.252 407.017 l
491.323 407.034 l
491.464 407.069 l
491.535 407.086 l
491.605 407.103 l
491.959 407.190 l
492.030 407.207 l
492.100 407.225 l
492.313 407.277 l
492.383 407.294 l
492.595 407.346 l
492.666 407.363 l
492.737 407.380 l
493.020 407.450 l
493.090 407.467 l
493.161 407.484 l
493.232 407.501 l
493.302 407.519 l
493.585 407.588 l
493.656 407.605 l
493.727 407.622 l
493.868 407.656 l
493.939 407.674 l
494.222 407.743 l
494.292 407.760 l
494.363 407.777 l
494.787 407.880 l
494.929 407.914 l
494.999 407.931 l
495.212 407.983 l
495.282 408.000 l
495.353 408.017 l
495.424 408.034 l
495.848 408.137 l
495.919 408.154 l
496.060 408.188 l
496.343 408.257 l
496.414 408.274 l
496.484 408.291 l
496.555 408.308 l
496.626 408.325 l
496.979 408.410 l
497.050 408.427 l
497.121 408.444 l
497.262 408.478 l
497.616 408.564 l
497.757 408.598 l
497.828 408.615 l
497.969 408.649 l
498.040 408.666 l
498.181 408.700 l
498.252 408.717 l
498.323 408.734 l
498.605 408.801 l
498.676 408.818 l
498.818 408.852 l
499.242 408.954 l
499.313 408.971 l
499.383 408.988 l
499.454 409.005 l
499.525 409.022 l
499.737 409.072 l
499.808 409.089 l
499.878 409.106 l
499.949 409.123 l
500.020 409.140 l
500.444 409.241 l
500.585 409.275 l
500.656 409.292 l
500.868 409.342 l
500.939 409.359 l
501.151 409.410 l
501.222 409.426 l
501.292 409.443 l
501.363 409.460 l
501.434 409.477 l
501.504 409.494 l
501.646 409.527 l
502.212 409.662 l
502.777 409.796 l
503.343 409.929 l
503.414 409.946 l
503.484 409.963 l
503.838 410.046 l
503.909 410.063 l
504.050 410.096 l
504.403 410.180 l
504.474 410.196 l
504.545 410.213 l
504.757 410.263 l
504.828 410.280 l
504.969 410.313 l
505.040 410.329 l
505.111 410.346 l
505.181 410.363 l
505.252 410.379 l
505.606 410.462 l
505.676 410.479 l
505.747 410.495 l
505.959 410.545 l
506.030 410.562 l
506.100 410.578 l
506.383 410.645 l
506.808 410.744 l
506.878 410.760 l
506.949 410.777 l
507.090 410.810 l
507.161 410.826 l
507.232 410.843 l
507.444 410.892 l
507.515 410.909 l
507.585 410.925 l
508.010 411.024 l
508.151 411.057 l
508.222 411.074 l
508.504 411.139 l
508.575 411.156 l
508.717 411.189 l
509.212 411.304 l
509.282 411.320 l
509.353 411.336 l
509.848 411.451 l
510.060 411.500 l
510.131 411.517 l
510.201 411.533 l
510.272 411.549 l
510.484 411.598 l
510.626 411.631 l
510.696 411.647 l
510.767 411.664 l
510.838 411.680 l
510.909 411.696 l
511.050 411.729 l
511.191 411.762 l
511.262 411.778 l
511.474 411.827 l
511.545 411.843 l
511.686 411.876 l
511.828 411.908 l
511.898 411.925 l
512.040 411.957 l
512.111 411.973 l
512.252 412.006 l
512.323 412.022 l
512.393 412.038 l
512.747 412.120 l
512.818 412.136 l
512.959 412.168 l
513.383 412.265 l
513.454 412.282 l
513.595 412.314 l
514.020 412.411 l
514.161 412.443 l
514.232 412.460 l
514.656 412.556 l
514.797 412.589 l
514.868 412.605 l
515.222 412.685 l
515.292 412.701 l
515.363 412.718 l
515.504 412.750 l
515.575 412.766 l
515.717 412.798 l
515.787 412.814 l
515.929 412.846 l
515.999 412.862 l
516.070 412.878 l
516.494 412.975 l
516.565 412.991 l
516.636 413.007 l
516.777 413.039 l
516.848 413.055 l
516.919 413.071 l
516.989 413.087 l
517.060 413.103 l
517.131 413.119 l
517.201 413.135 l
517.272 413.151 l
517.343 413.167 l
517.414 413.183 l
517.767 413.263 l
517.908 413.295 l
517.979 413.311 l
518.262 413.375 l
518.333 413.390 l
518.474 413.422 l
518.828 413.502 l
518.898 413.518 l
519.040 413.550 l
519.535 413.661 l
519.606 413.677 l
519.747 413.709 l
520.242 413.820 l
520.383 413.852 l
520.454 413.867 l
520.878 413.963 l
520.949 413.978 l
521.020 413.994 l
521.090 414.010 l
521.444 414.089 l
521.515 414.105 l
521.656 414.136 l
521.797 414.168 l
521.868 414.184 l
521.939 414.200 l
522.151 414.247 l
522.222 414.263 l
522.292 414.278 l
522.787 414.389 l
522.858 414.404 l
522.929 414.420 l
523.141 414.467 l
523.212 414.483 l
523.282 414.499 l
523.424 414.530 l
523.494 414.546 l
523.565 414.561 l
523.706 414.593 l
523.777 414.609 l
523.848 414.624 l
523.919 414.640 l
524.060 414.671 l
524.131 414.687 l
524.201 414.703 l
524.343 414.734 l
524.414 414.750 l
524.484 414.765 l
524.767 414.828 l
525.403 414.968 l
525.545 415.000 l
525.616 415.015 l
525.898 415.078 l
525.969 415.093 l
526.111 415.124 l
526.606 415.233 l
526.676 415.249 l
526.747 415.264 l
526.818 415.280 l
526.888 415.296 l
527.171 415.358 l
527.242 415.373 l
527.383 415.404 l
527.595 415.451 l
527.666 415.466 l
527.737 415.482 l
527.949 415.528 l
528.020 415.544 l
528.161 415.575 l
528.232 415.590 l
528.302 415.606 l
528.373 415.621 l
528.444 415.637 l
528.656 415.683 l
528.727 415.698 l
528.797 415.714 l
529.151 415.791 l
529.222 415.807 l
529.292 415.822 l
529.363 415.837 l
529.434 415.853 l
529.858 415.945 l
529.929 415.961 l
529.999 415.976 l
530.070 415.992 l
530.565 416.099 l
530.706 416.130 l
530.777 416.145 l
531.201 416.237 l
531.272 416.253 l
531.343 416.268 l
531.414 416.283 l
531.484 416.299 l
531.767 416.360 l
531.838 416.375 l
531.908 416.391 l
531.979 416.406 l
532.121 416.437 l
532.403 416.498 l
532.474 416.513 l
532.616 416.544 l
532.757 416.574 l
532.828 416.589 l
533.181 416.666 l
533.252 416.681 l
533.323 416.696 l
533.464 416.727 l
533.535 416.742 l
533.818 416.803 l
533.888 416.818 l
533.959 416.833 l
534.030 416.848 l
534.100 416.864 l
534.525 416.955 l
534.595 416.970 l
534.666 416.985 l
534.737 417.000 l
534.808 417.016 l
534.949 417.046 l
535.020 417.061 l
535.090 417.076 l
535.161 417.091 l
535.302 417.122 l
535.444 417.152 l
535.515 417.167 l
535.868 417.243 l
535.939 417.258 l
536.010 417.273 l
536.151 417.303 l
536.222 417.318 l
536.504 417.379 l
536.575 417.394 l
536.717 417.424 l
536.787 417.439 l
536.858 417.454 l
537.141 417.515 l
537.212 417.530 l
537.282 417.545 l
537.353 417.560 l
537.424 417.575 l
537.494 417.590 l
537.565 417.605 l
537.636 417.620 l
537.706 417.635 l
537.777 417.650 l
537.919 417.680 l
537.989 417.695 l
538.131 417.725 l
538.626 417.830 l
538.696 417.845 l
538.767 417.860 l
539.050 417.920 l
539.121 417.935 l
539.191 417.950 l
539.262 417.965 l
539.403 417.995 l
539.616 418.040 l
539.686 418.055 l
539.828 418.085 l
539.898 418.100 l
540.040 418.130 l
540.111 418.145 l
540.181 418.160 l
540.252 418.175 l
540.323 418.190 l
540.393 418.204 l
540.464 418.219 l
540.535 418.234 l
540.606 418.249 l
540.747 418.279 l
540.818 418.294 l
541.383 418.413 l
541.454 418.428 l
541.525 418.443 l
541.737 418.487 l
541.808 418.502 l
541.949 418.532 l
542.020 418.547 l
542.161 418.577 l
542.302 418.606 l
542.373 418.621 l
542.868 418.725 l
543.010 418.755 l
543.080 418.769 l
543.363 418.829 l
543.434 418.843 l
543.575 418.873 l
543.717 418.903 l
543.787 418.917 l
544.070 418.976 l
544.141 418.991 l
544.282 419.021 l
544.424 419.050 l
544.494 419.065 l
544.777 419.124 l
544.848 419.139 l
544.989 419.168 l
545.131 419.197 l
545.201 419.212 l
545.414 419.256 l
545.484 419.271 l
545.696 419.315 l
545.838 419.345 l
545.908 419.359 l
546.050 419.389 l
546.121 419.403 l
546.191 419.418 l
546.262 419.433 l
546.403 419.462 l
547.111 419.608 l
547.252 419.638 l
547.323 419.652 l
547.393 419.667 l
547.464 419.682 l
547.535 419.696 l
547.747 419.740 l
547.818 419.755 l
548.030 419.798 l
548.100 419.813 l
548.171 419.828 l
548.242 419.842 l
548.525 419.900 l
548.666 419.930 l
548.737 419.944 l
549.020 420.002 l
549.090 420.017 l
549.232 420.046 l
549.373 420.075 l
549.444 420.090 l
549.868 420.177 l
549.939 420.191 l
550.010 420.206 l
550.151 420.235 l
550.222 420.249 l
550.292 420.264 l
550.363 420.278 l
550.434 420.293 l
550.646 420.336 l
550.717 420.351 l
550.787 420.365 l
551.353 420.481 l
551.494 420.510 l
551.565 420.524 l
552.060 420.625 l
552.131 420.640 l
552.201 420.654 l
552.838 420.784 l
552.909 420.798 l
553.050 420.827 l
553.474 420.913 l
553.545 420.928 l
553.616 420.942 l
553.686 420.956 l
553.757 420.971 l
554.181 421.057 l
554.252 421.071 l
554.323 421.085 l
554.393 421.100 l
554.464 421.114 l
554.747 421.171 l
554.818 421.186 l
554.888 421.200 l
554.959 421.214 l
555.030 421.229 l
555.100 421.243 l
555.242 421.271 l
555.313 421.286 l
555.595 421.343 l
555.666 421.357 l
555.808 421.386 l
555.949 421.414 l
556.020 421.428 l
556.444 421.514 l
556.515 421.528 l
556.585 421.542 l
556.656 421.557 l
556.727 421.571 l
556.797 421.585 l
556.939 421.614 l
557.010 421.628 l
557.151 421.656 l
557.292 421.685 l
557.434 421.713 l
557.858 421.798 l
557.929 421.812 l
558.070 421.841 l
558.424 421.912 l
558.494 421.926 l
558.777 421.982 l
558.848 421.996 l
558.919 422.011 l
558.989 422.025 l
559.414 422.110 l
559.555 422.138 l
559.626 422.152 l
559.696 422.166 l
559.767 422.180 l
560.050 422.236 l
560.121 422.251 l
560.262 422.279 l
560.333 422.293 l
560.403 422.307 l
560.545 422.335 l
560.616 422.349 l
560.686 422.363 l
560.969 422.419 l
561.040 422.434 l
561.111 422.448 l
561.252 422.476 l
561.323 422.490 l
561.535 422.532 l
561.606 422.546 l
561.676 422.560 l
561.747 422.574 l
561.888 422.602 l
562.030 422.630 l
562.100 422.644 l
562.171 422.658 l
562.242 422.672 l
562.313 422.686 l
562.666 422.756 l
563.232 422.868 l
563.302 422.882 l
563.373 422.896 l
563.444 422.910 l
563.515 422.924 l
563.939 423.007 l
564.009 423.021 l
564.080 423.035 l
564.151 423.049 l
564.222 423.063 l
564.787 423.174 l
564.929 423.202 l
564.999 423.216 l
565.141 423.244 l
565.212 423.258 l
565.282 423.272 l
565.565 423.327 l
565.707 423.355 l
565.777 423.369 l
565.848 423.383 l
565.919 423.397 l
566.131 423.438 l
566.201 423.452 l
566.343 423.480 l
566.414 423.493 l
566.484 423.507 l
566.626 423.535 l
566.696 423.549 l
566.767 423.563 l
566.838 423.576 l
566.979 423.604 l
567.050 423.618 l
567.121 423.632 l
567.191 423.646 l
567.262 423.659 l
567.474 423.701 l
567.545 423.715 l
567.616 423.728 l
567.686 423.742 l
567.969 423.797 l
568.111 423.825 l
568.181 423.839 l
568.252 423.852 l
568.323 423.866 l
568.464 423.894 l
568.535 423.907 l
568.676 423.935 l
568.747 423.949 l
568.888 423.976 l
569.383 424.072 l
569.525 424.100 l
569.666 424.127 l
570.232 424.237 l
570.373 424.264 l
570.444 424.278 l
570.515 424.292 l
570.585 424.305 l
570.868 424.360 l
570.939 424.374 l
571.009 424.387 l
571.080 424.401 l
571.151 424.415 l
571.222 424.428 l
571.292 424.442 l
571.787 424.537 l
571.858 424.551 l
571.929 424.565 l
572.070 424.592 l
572.141 424.605 l
572.494 424.674 l
572.565 424.687 l
572.636 424.701 l
572.707 424.714 l
572.777 424.728 l
572.919 424.755 l
572.989 424.769 l
573.272 424.823 l
573.343 424.837 l
573.484 424.864 l
573.626 424.891 l
573.696 424.904 l
574.121 424.986 l
574.191 424.999 l
574.333 425.026 l
574.474 425.053 l
574.545 425.067 l
574.616 425.080 l
574.686 425.094 l
574.757 425.107 l
574.828 425.121 l
574.898 425.134 l
575.040 425.161 l
575.181 425.188 l
575.252 425.202 l
575.323 425.215 l
575.393 425.229 l
575.676 425.283 l
575.747 425.296 l
575.818 425.310 l
575.888 425.323 l
575.959 425.337 l
576.100 425.364 l
576.171 425.377 l
576.454 425.431 l
576.525 425.444 l
576.666 425.471 l
576.737 425.485 l
576.807 425.498 l
576.878 425.512 l
576.949 425.525 l
577.302 425.592 l
577.373 425.606 l
577.444 425.619 l
577.515 425.633 l
577.585 425.646 l
577.727 425.673 l
577.797 425.686 l
578.080 425.740 l
578.151 425.753 l
578.292 425.780 l
578.363 425.793 l
578.434 425.807 l
578.504 425.820 l
578.575 425.833 l
578.929 425.900 l
578.999 425.914 l
579.212 425.954 l
579.353 425.980 l
579.424 425.994 l
579.848 426.074 l
579.989 426.100 l
580.131 426.127 l
580.626 426.220 l
580.696 426.233 l
580.767 426.247 l
580.838 426.260 l
580.908 426.273 l
581.050 426.300 l
581.121 426.313 l
581.191 426.326 l
581.262 426.340 l
581.333 426.353 l
581.474 426.380 l
581.545 426.393 l
581.686 426.419 l
581.898 426.459 l
581.969 426.472 l
582.111 426.499 l
582.181 426.512 l
582.393 426.552 l
582.535 426.578 l
582.676 426.605 l
582.747 426.618 l
582.818 426.631 l
582.959 426.658 l
583.030 426.671 l
583.171 426.697 l
583.242 426.710 l
583.383 426.737 l
584.020 426.855 l
584.090 426.869 l
584.161 426.882 l
584.232 426.895 l
584.302 426.908 l
584.727 426.987 l
584.797 427.000 l
584.868 427.013 l
584.939 427.026 l
585.009 427.040 l
585.080 427.053 l
585.363 427.105 l
585.434 427.118 l
585.504 427.131 l
585.646 427.158 l
585.717 427.171 l
585.858 427.197 l
585.999 427.223 l
586.070 427.236 l
586.141 427.249 l
586.212 427.263 l
586.353 427.289 l
586.424 427.302 l
586.565 427.328 l
586.636 427.341 l
586.707 427.354 l
586.777 427.367 l
586.848 427.380 l
587.272 427.459 l
587.343 427.472 l
587.414 427.485 l
587.484 427.498 l
587.555 427.511 l
587.696 427.537 l
587.767 427.550 l
588.262 427.641 l
588.333 427.654 l
588.403 427.667 l
588.474 427.680 l
588.545 427.693 l
589.040 427.784 l
589.111 427.797 l
589.181 427.810 l
589.252 427.823 l
589.323 427.836 l
589.888 427.940 l
589.959 427.953 l
590.100 427.979 l
590.383 428.031 l
590.454 428.044 l
590.525 428.056 l
590.595 428.069 l
590.807 428.108 l
590.878 428.121 l
590.949 428.134 l
591.020 428.147 l
591.090 428.160 l
591.515 428.237 l
591.585 428.250 l
591.656 428.263 l
591.797 428.289 l
592.009 428.328 l
592.363 428.392 l
592.434 428.405 l
592.575 428.431 l
592.646 428.443 l
592.717 428.456 l
592.858 428.482 l
592.929 428.495 l
593.212 428.546 l
593.282 428.559 l
593.424 428.585 l
593.565 428.610 l
593.707 428.636 l
594.131 428.713 l
594.201 428.726 l
594.272 428.739 l
594.343 428.751 l
594.484 428.777 l
595.050 428.879 l
595.121 428.892 l
595.262 428.918 l
595.403 428.943 l
595.474 428.956 l
595.686 428.994 l
595.757 429.007 l
595.969 429.045 l
596.040 429.058 l
596.111 429.071 l
596.181 429.084 l
596.252 429.096 l
596.464 429.134 l
596.535 429.147 l
596.605 429.160 l
596.676 429.173 l
596.747 429.185 l
596.888 429.211 l
596.959 429.223 l
597.171 429.262 l
597.525 429.325 l
597.595 428.144 l
597.878 428.191 l
597.949 428.202 l
598.020 428.214 l
598.090 428.226 l
598.161 428.237 l
598.232 428.249 l
598.302 428.261 l
598.515 428.296 l
598.585 428.307 l
598.656 428.319 l
598.727 428.330 l
598.797 428.342 l
599.009 428.377 l
599.080 428.388 l
599.151 428.400 l
599.222 428.412 l
599.292 428.423 l
599.363 428.435 l
599.434 428.447 l
599.999 428.539 l
600.070 428.551 l
600.141 428.563 l
600.212 428.574 l
600.353 428.597 l
600.494 428.620 l
600.565 428.632 l
600.636 428.644 l
600.706 428.655 l
600.848 428.678 l
600.919 428.690 l
600.989 428.701 l
601.060 428.713 l
601.201 428.736 l
601.272 428.748 l
601.414 428.771 l
601.696 428.817 l
601.767 428.828 l
602.050 428.875 l
602.121 428.886 l
602.333 428.921 l
602.474 428.944 l
602.545 428.955 l
602.616 428.967 l
602.686 428.978 l
603.323 429.082 l
603.464 429.105 l
603.605 429.128 l
603.888 429.174 l
603.959 429.185 l
604.171 429.220 l
604.242 429.231 l
604.525 429.277 l
604.666 429.300 l
604.737 429.311 l
604.878 429.334 l
604.949 429.346 l
605.373 429.414 l
605.444 429.426 l
605.585 429.449 l
605.656 429.460 l
605.727 429.472 l
605.797 429.483 l
605.868 429.494 l
606.646 429.620 l
606.787 429.643 l
606.929 429.666 l
607.212 429.711 l
607.282 429.722 l
607.353 429.734 l
607.424 429.745 l
607.494 429.757 l
607.706 429.791 l
607.777 429.802 l
607.989 429.836 l
608.060 429.848 l
608.131 429.859 l
608.838 429.972 l
608.979 429.995 l
609.121 430.018 l
609.262 430.040 l
609.333 430.052 l
609.403 430.063 l
609.474 430.074 l
609.616 430.097 l
609.686 430.108 l
609.969 430.154 l
610.040 430.165 l
610.111 430.176 l
610.181 430.188 l
610.252 430.199 l
610.464 430.233 l
610.535 430.244 l
610.747 430.278 l
610.818 430.289 l
611.100 430.334 l
611.171 430.346 l
611.242 430.357 l
611.313 430.368 l
611.383 430.379 l
611.666 430.425 l
611.737 430.436 l
611.878 430.458 l
611.949 430.470 l
612.161 430.503 l
612.232 430.515 l
612.302 430.526 l
612.373 430.537 l
612.444 430.548 l
612.515 430.560 l
612.585 430.571 l
613.292 430.683 l
613.363 430.694 l
613.434 430.706 l
613.504 430.717 l
613.575 430.728 l
613.646 430.739 l
613.787 430.762 l
614.212 430.829 l
614.282 430.840 l
614.565 430.885 l
614.777 430.918 l
614.848 430.930 l
614.919 430.941 l
614.989 430.952 l
615.343 431.008 l
615.414 431.019 l
615.555 431.041 l
615.626 431.052 l
615.767 431.075 l
615.908 431.097 l
615.979 431.108 l
616.686 431.220 l
616.757 431.231 l
616.828 431.242 l
616.898 431.253 l
616.969 431.264 l
617.111 431.286 l
617.181 431.297 l
617.747 431.386 l
617.818 431.397 l
617.959 431.420 l
618.030 431.431 l
618.100 431.442 l
618.171 431.453 l
618.242 431.464 l
618.949 431.575 l
619.020 431.586 l
619.161 431.608 l
619.302 431.630 l
619.373 431.641 l
619.585 431.674 l
619.656 431.685 l
619.868 431.718 l
619.939 431.729 l
620.151 431.763 l
620.222 431.774 l
620.363 431.796 l
620.504 431.818 l
620.575 431.829 l
620.646 431.840 l
620.717 431.851 l
621.282 431.939 l
621.353 431.950 l
621.424 431.961 l
621.494 431.972 l
621.565 431.983 l
621.706 432.005 l
621.777 432.016 l
622.414 432.115 l
622.484 432.126 l
622.626 432.148 l
622.767 432.170 l
622.838 432.181 l
622.979 432.203 l
623.050 432.214 l
623.474 432.279 l
623.545 432.290 l
623.686 432.312 l
623.757 432.323 l
623.828 432.334 l
623.898 432.345 l
623.969 432.356 l
624.181 432.389 l
624.252 432.400 l
624.464 432.432 l
624.535 432.443 l
624.605 432.454 l
624.676 432.465 l
624.818 432.487 l
624.888 432.498 l
624.959 432.509 l
625.030 432.520 l
625.100 432.531 l
625.171 432.542 l
625.242 432.552 l
625.454 432.585 l
625.525 432.596 l
625.595 432.607 l
625.666 432.618 l
625.949 432.661 l
626.020 432.672 l
626.161 432.694 l
626.302 432.716 l
626.373 432.727 l
626.515 432.748 l
626.585 432.759 l
626.939 432.814 l
627.009 432.824 l
627.222 432.857 l
627.292 432.868 l
627.363 432.879 l
627.434 432.890 l
627.504 432.900 l
627.646 432.922 l
627.717 432.933 l
628.141 432.998 l
628.212 433.009 l
628.353 433.030 l
628.424 433.041 l
628.565 433.063 l
628.706 433.085 l
628.777 433.095 l
628.848 433.106 l
628.919 433.117 l
629.343 433.182 l
629.414 433.193 l
629.555 433.214 l
629.626 433.225 l
629.696 433.236 l
629.767 433.247 l
629.838 433.257 l
629.908 433.268 l
629.979 433.279 l
630.262 433.322 l
630.333 433.333 l
630.403 433.344 l
630.474 433.354 l
630.545 433.365 l
630.757 433.397 l
630.828 433.408 l
630.898 433.419 l
630.969 433.430 l
631.040 433.440 l
631.181 433.462 l
631.252 433.473 l
631.888 433.569 l
631.959 433.580 l
632.030 433.591 l
632.100 433.602 l
632.171 433.612 l
632.242 433.623 l
632.313 433.634 l
632.454 433.655 l
632.525 433.666 l
633.020 433.741 l
633.090 433.752 l
633.232 433.773 l
633.302 433.784 l
633.373 433.794 l
633.444 433.805 l
633.515 433.816 l
633.727 433.848 l
633.797 433.859 l
634.151 433.912 l
634.222 433.923 l
634.434 433.955 l
634.504 433.965 l
634.575 433.976 l
634.646 433.987 l
634.717 433.997 l
634.858 434.019 l
634.929 434.029 l
635.424 434.104 l
635.494 434.114 l
635.706 434.146 l
635.848 434.168 l
635.919 434.178 l
635.989 434.189 l
636.060 434.200 l
636.626 434.285 l
636.696 434.295 l
636.767 434.306 l
636.838 434.316 l
636.908 434.327 l
636.979 434.338 l
637.050 434.348 l
637.121 434.359 l
637.191 434.369 l
637.403 434.401 l
637.474 434.412 l
637.898 434.475 l
637.969 434.486 l
638.111 434.507 l
638.181 434.518 l
638.252 434.528 l
638.323 434.539 l
638.393 434.549 l
638.605 434.581 l
638.676 434.592 l
639.100 434.655 l
639.171 434.666 l
639.313 434.687 l
639.383 434.697 l
639.454 434.708 l
639.525 434.718 l
639.595 434.729 l
639.666 434.739 l
639.737 434.750 l
640.090 434.803 l
640.161 434.813 l
640.232 434.824 l
640.444 434.855 l
640.515 434.866 l
640.585 434.876 l
640.656 434.887 l
640.727 434.897 l
640.797 434.908 l
640.868 434.918 l
640.939 434.929 l
641.151 434.960 l
641.222 434.971 l
641.504 435.013 l
641.575 435.023 l
641.787 435.055 l
641.858 435.065 l
641.929 435.076 l
641.999 435.086 l
642.070 435.097 l
642.212 435.118 l
642.282 435.128 l
642.919 435.222 l
642.989 435.233 l
643.131 435.254 l
643.201 435.264 l
643.272 435.275 l
643.343 435.285 l
643.414 435.296 l
643.626 435.327 l
643.696 435.337 l
644.050 435.389 l
644.121 435.400 l
644.333 435.431 l
644.403 435.442 l
644.474 435.452 l
644.545 435.462 l
644.616 435.473 l
644.757 435.494 l
644.828 435.504 l
645.393 435.587 l
645.464 435.598 l
645.606 435.619 l
645.676 435.629 l
645.747 435.639 l
645.818 435.650 l
645.888 435.660 l
646.030 435.681 l
646.100 435.691 l
646.666 435.774 l
646.737 435.785 l
646.949 435.816 l
647.090 435.836 l
647.161 435.847 l
647.232 435.857 l
647.302 435.868 l
648.009 435.971 l
648.080 435.981 l
648.151 435.992 l
648.222 436.002 l
648.363 436.023 l
648.504 436.043 l
648.575 436.054 l
649.282 436.157 l
649.353 436.167 l
649.424 436.177 l
649.494 436.188 l
649.565 436.198 l
649.636 436.208 l
649.706 436.219 l
649.777 436.229 l
650.060 436.270 l
650.131 436.280 l
650.414 436.322 l
650.484 436.332 l
650.626 436.352 l
650.696 436.363 l
650.838 436.383 l
650.979 436.404 l
651.050 436.414 l
651.191 436.434 l
651.262 436.445 l
651.828 436.527 l
651.898 436.537 l
652.040 436.558 l
652.111 436.568 l
652.181 436.578 l
652.323 436.598 l
652.393 436.609 l
652.535 436.629 l
652.605 436.639 l
653.030 436.701 l
653.100 436.711 l
653.242 436.731 l
653.312 436.742 l
653.454 436.762 l
653.595 436.782 l
653.666 436.793 l
653.807 436.813 l
653.878 436.823 l
654.302 436.884 l
654.373 436.895 l
654.585 436.925 l
654.656 436.935 l
654.727 436.945 l
654.797 436.956 l
654.868 436.966 l
655.009 436.986 l
655.080 436.996 l
655.787 437.098 l
655.858 437.108 l
655.929 437.118 l
655.999 437.128 l
656.141 437.149 l
656.282 437.169 l
656.353 437.179 l
656.424 437.189 l
656.494 437.199 l
657.060 437.280 l
657.131 437.291 l
657.272 437.311 l
657.343 437.321 l
657.414 437.331 l
657.484 437.341 l
657.555 437.351 l
657.696 437.371 l
657.767 437.382 l
658.333 437.462 l
658.403 437.473 l
658.545 437.493 l
658.616 437.503 l
658.686 437.513 l
658.757 437.523 l
658.828 437.533 l
658.969 437.553 l
659.040 437.563 l
659.747 437.664 l
659.818 437.674 l
659.959 437.694 l
660.030 437.704 l
660.100 437.714 l
660.242 437.734 l
660.313 437.744 l
660.525 437.775 l
660.595 437.785 l
660.666 437.795 l
660.737 437.805 l
660.807 437.815 l
661.090 437.855 l
661.161 437.865 l
661.302 437.885 l
661.373 437.895 l
661.444 437.905 l
661.515 437.915 l
661.585 437.925 l
662.222 438.015 l
662.292 438.025 l
662.434 438.045 l
662.504 438.055 l
662.646 438.075 l
662.717 438.085 l
662.787 438.095 l
662.929 438.115 l
662.999 438.125 l
663.282 438.165 l
663.353 438.175 l
663.424 438.185 l
663.494 438.195 l
663.565 438.205 l
663.777 438.235 l
663.848 438.245 l
663.989 438.265 l
664.060 438.275 l
664.131 438.285 l
664.272 438.305 l
664.343 438.315 l
664.555 438.344 l
664.626 438.354 l
664.838 438.384 l
664.908 438.394 l
665.121 438.424 l
665.191 438.434 l
665.333 438.454 l
665.403 438.464 l
665.474 438.474 l
665.545 438.484 l
665.616 438.494 l
665.898 438.533 l
665.969 438.543 l
666.252 438.583 l
666.323 438.593 l
666.535 438.623 l
666.605 438.632 l
666.676 438.642 l
666.747 438.652 l
666.818 438.662 l
666.888 438.672 l
666.959 438.682 l
667.100 438.702 l
667.171 438.712 l
667.737 438.791 l
667.807 438.801 l
667.949 438.820 l
668.020 438.830 l
668.090 438.840 l
668.161 438.850 l
668.232 438.860 l
668.302 438.870 l
668.373 438.880 l
668.585 438.909 l
668.656 438.919 l
668.939 438.959 l
669.009 438.968 l
669.222 438.998 l
669.292 439.008 l
669.363 439.018 l
669.434 439.027 l
669.504 439.037 l
669.575 439.047 l
669.646 439.057 l
669.717 439.067 l
669.858 439.086 l
669.929 439.096 l
670.424 439.165 l
670.494 439.175 l
670.636 439.195 l
670.706 439.204 l
670.848 439.224 l
670.989 439.244 l
671.060 439.253 l
671.131 439.263 l
671.201 439.273 l
671.979 439.381 l
672.050 439.391 l
672.191 439.410 l
672.333 439.430 l
672.403 439.440 l
672.474 439.449 l
672.545 439.459 l
673.040 439.527 l
673.110 439.537 l
673.393 439.576 l
673.464 439.586 l
673.535 439.596 l
673.605 439.606 l
673.747 439.625 l
673.888 439.645 l
673.959 439.654 l
674.737 439.761 l
674.807 439.771 l
674.949 439.791 l
675.020 439.800 l
675.090 439.810 l
675.232 439.829 l
675.302 439.839 l
675.373 439.849 l
675.444 439.859 l
676.080 439.946 l
676.151 439.956 l
676.292 439.975 l
676.363 439.985 l
676.434 439.994 l
676.504 440.004 l
676.575 440.014 l
676.646 440.023 l
676.717 440.033 l
677.141 440.091 l
677.212 440.101 l
677.282 440.111 l
677.565 440.149 l
677.636 440.159 l
677.777 440.178 l
677.848 440.188 l
677.919 440.198 l
677.989 440.207 l
678.060 440.217 l
678.201 440.236 l
678.272 440.246 l
678.343 440.255 l
678.838 440.323 l
678.908 440.333 l
679.121 440.361 l
679.191 440.371 l
679.262 440.381 l
679.333 440.390 l
679.403 440.400 l
679.545 440.419 l
679.616 440.429 l
679.898 440.467 l
679.969 440.477 l
680.040 440.487 l
680.393 440.535 l
680.464 440.544 l
680.605 440.563 l
680.676 440.573 l
680.747 440.583 l
680.888 440.602 l
680.959 440.611 l
681.030 440.621 l
681.100 440.631 l
681.807 440.726 l
681.878 440.736 l
681.949 440.746 l
682.020 440.755 l
682.090 440.765 l
682.161 440.774 l
682.302 440.793 l
682.373 440.803 l
682.515 440.822 l
682.585 440.832 l
683.151 440.908 l
683.222 440.918 l
683.363 440.937 l
683.434 440.946 l
683.575 440.965 l
683.646 440.975 l
683.717 440.984 l
683.858 441.003 l
683.929 441.013 l
684.706 441.118 l
684.777 441.127 l
684.848 441.137 l
684.919 441.146 l
685.060 441.165 l
685.201 441.184 l
685.272 441.194 l
685.413 441.213 l
685.484 441.222 l
686.050 441.298 l
686.121 441.308 l
686.262 441.327 l
686.333 441.336 l
686.474 441.355 l
686.616 441.374 l
686.686 441.383 l
686.757 441.393 l
686.828 441.402 l
687.605 441.507 l
687.676 441.516 l
687.747 441.525 l
687.818 441.535 l
687.959 441.554 l
688.100 441.573 l
688.171 441.582 l
688.313 441.601 l
688.383 441.610 l
689.020 441.695 l
689.090 441.705 l
689.232 441.724 l
689.302 441.733 l
689.373 441.742 l
689.444 441.752 l
689.515 441.761 l
689.585 441.771 l
689.656 441.780 l
689.939 441.818 l
690.009 441.827 l
690.292 441.865 l
690.363 441.874 l
690.646 441.912 l
690.717 441.921 l
690.787 441.930 l
690.858 441.940 l
690.929 441.949 l
690.999 441.959 l
691.070 441.968 l
691.212 441.987 l
691.282 441.996 l
691.989 442.090 l
692.060 442.099 l
692.201 442.118 l
692.272 442.127 l
692.343 442.137 l
692.413 442.146 l
692.484 442.155 l
692.555 442.165 l
692.626 442.174 l
692.908 442.211 l
692.979 442.221 l
693.333 442.267 l
693.403 442.277 l
693.616 442.305 l
693.686 442.314 l
693.757 442.323 l
693.828 442.333 l
693.898 442.342 l
693.969 442.351 l
694.040 442.361 l
694.181 442.379 l
694.252 442.389 l
695.030 442.491 l
695.100 442.500 l
695.171 442.510 l
695.242 442.519 l
695.313 442.528 l
695.383 442.537 l
695.454 442.547 l
695.525 442.556 l
695.595 442.565 l
695.807 442.593 l
695.878 442.602 l
696.373 442.667 l
696.444 442.677 l
696.656 442.704 l
696.727 442.714 l
696.797 442.723 l
696.868 442.732 l
696.939 442.741 l
697.080 442.760 l
697.151 442.769 l
697.292 442.788 l
697.363 442.797 l
697.858 442.862 l
697.929 442.871 l
697.999 442.880 l
698.070 442.889 l
698.141 442.899 l
698.212 442.908 l
698.282 442.917 l
698.353 442.926 l
698.424 442.936 l
698.494 442.945 l
698.565 442.954 l
698.706 442.973 l
698.777 442.982 l
699.484 443.074 l
699.555 443.083 l
699.696 443.102 l
699.767 443.111 l
699.838 443.120 l
699.908 443.129 l
699.979 443.138 l
700.050 443.148 l
700.121 443.157 l
700.262 443.175 l
700.333 443.184 l
700.898 443.258 l
700.969 443.267 l
701.181 443.295 l
701.252 443.304 l
701.323 443.313 l
701.393 443.322 l
701.464 443.331 l
701.535 443.340 l
701.605 443.350 l
701.747 443.368 l
701.818 443.377 l
701.888 443.386 l
702.595 443.478 l
702.666 443.487 l
702.807 443.505 l
702.878 443.514 l
702.949 443.524 l
703.020 443.533 l
703.090 443.542 l
703.232 443.560 l
703.302 443.569 l
704.151 443.679 l
704.222 443.688 l
704.363 443.706 l
704.434 443.715 l
704.504 443.724 l
704.575 443.733 l
704.646 443.742 l
704.858 443.770 l
704.929 443.779 l
704.999 443.788 l
705.070 443.797 l
705.636 443.870 l
705.706 443.879 l
705.848 443.897 l
705.919 443.906 l
705.989 443.915 l
706.060 443.924 l
706.131 443.933 l
706.201 443.942 l
706.272 443.952 l
706.413 443.970 l
706.484 443.979 l
706.979 444.042 l
707.050 444.051 l
707.121 444.060 l
707.191 444.069 l
707.403 444.097 l
707.474 444.106 l
707.545 444.115 l
707.616 444.124 l
707.686 444.133 l
707.757 444.142 l
707.828 444.151 l
708.040 444.178 l
708.111 444.187 l
708.676 444.259 l
708.747 444.268 l
708.959 444.295 l
709.030 444.304 l
709.100 444.313 l
709.171 444.322 l
709.242 444.331 l
709.383 444.349 l
709.454 444.358 l
709.595 444.377 l
709.666 444.386 l
710.232 444.458 l
710.302 444.467 l
710.444 444.485 l
710.515 444.494 l
710.656 444.512 l
710.727 444.520 l
710.797 444.529 l
710.868 444.538 l
710.939 444.547 l
711.151 444.574 l
711.222 444.583 l
711.858 444.664 l
711.929 444.673 l
712.141 444.700 l
712.211 444.709 l
712.282 444.718 l
712.353 444.727 l
712.424 444.736 l
712.565 444.754 l
712.636 444.763 l
712.777 444.781 l
712.848 444.790 l
713.272 444.843 l
713.343 444.852 l
713.413 444.861 l
713.484 444.870 l
713.626 444.888 l
713.696 444.897 l
713.838 444.915 l
713.979 444.932 l
714.050 444.941 l
714.121 444.950 l
714.191 444.959 l
714.403 444.986 l
714.474 444.995 l
714.969 445.057 l
715.040 445.066 l
715.252 445.093 l
715.323 445.102 l
715.393 445.111 l
715.464 445.120 l
715.535 445.129 l
715.605 445.137 l
715.676 445.146 l
715.747 445.155 l
715.818 445.164 l
716.100 445.200 l
716.171 445.209 l
716.454 445.244 l
716.525 445.253 l
716.807 445.288 l
716.878 445.297 l
716.949 445.306 l
717.020 445.315 l
717.090 445.324 l
717.161 445.333 l
717.232 445.342 l
717.302 445.350 l
717.373 445.359 l
717.515 445.377 l
717.585 445.386 l
717.797 445.412 l
717.868 445.421 l
718.222 445.466 l
718.292 445.474 l
718.504 445.501 l
718.575 445.510 l
718.646 445.519 l
718.717 445.527 l
718.787 445.536 l
718.858 445.545 l
718.929 445.554 l
719.070 445.572 l
719.141 445.580 l
719.919 445.677 l
719.989 445.686 l
720.131 445.704 l
720.201 445.713 l
720.343 445.730 l
720.484 445.748 l
720.555 445.757 l
720.626 445.766 l
720.696 445.774 l
721.616 445.889 l
721.686 445.897 l
721.828 445.915 l
721.898 445.924 l
721.969 445.932 l
722.040 445.941 l
722.111 445.950 l
722.181 445.959 l
722.252 445.968 l
722.535 446.003 l
722.605 446.011 l
722.959 446.055 l
723.030 446.064 l
723.100 446.073 l
723.313 446.099 l
723.383 446.108 l
723.454 446.116 l
723.525 446.125 l
723.666 446.143 l
723.807 446.160 l
723.878 446.169 l
723.949 446.178 l
724.020 446.186 l
724.868 446.291 l
724.939 446.300 l
725.080 446.317 l
725.151 446.326 l
725.222 446.335 l
725.292 446.343 l
725.363 446.352 l
725.434 446.361 l
725.504 446.370 l
725.646 446.387 l
725.717 446.396 l
726.424 446.483 l
726.494 446.491 l
726.706 446.517 l
726.777 446.526 l
726.848 446.535 l
726.919 446.543 l
726.989 446.552 l
727.060 446.561 l
727.131 446.569 l
727.272 446.587 l
727.343 446.596 l
728.191 446.700 l
728.262 446.708 l
728.403 446.726 l
728.474 446.734 l
728.545 446.743 l
728.616 446.751 l
728.686 446.760 l
728.757 446.769 l
728.828 446.777 l
729.040 446.803 l
729.111 446.812 l
729.818 446.898 l
729.888 446.907 l
730.030 446.924 l
730.100 446.933 l
730.242 446.950 l
730.383 446.967 l
730.454 446.976 l
730.525 446.985 l
730.595 446.993 l
730.666 447.002 l
730.807 447.019 l
730.878 447.028 l
731.373 447.088 l
731.444 447.096 l
731.656 447.122 l
731.727 447.131 l
731.797 447.139 l
731.868 447.148 l
732.009 447.165 l
732.151 447.182 l
732.222 447.191 l
732.363 447.208 l
732.434 447.217 l
733.141 447.303 l
733.211 447.311 l
733.424 447.337 l
733.494 447.345 l
733.565 447.354 l
733.636 447.362 l
733.706 447.371 l
733.777 447.380 l
733.848 447.388 l
733.989 447.405 l
734.060 447.414 l
734.343 447.448 l
734.414 447.457 l
734.626 447.482 l
734.696 447.491 l
734.979 447.525 l
735.050 447.533 l
735.191 447.551 l
735.262 447.559 l
735.333 447.568 l
735.403 447.576 l
735.474 447.585 l
735.616 447.602 l
735.686 447.610 l
735.828 447.627 l
735.898 447.636 l
736.464 447.704 l
736.535 447.712 l
736.818 447.746 l
736.888 447.755 l
736.959 447.763 l
737.030 447.772 l
737.100 447.780 l
737.171 447.789 l
737.242 447.797 l
737.383 447.814 l
737.454 447.823 l
737.949 447.882 l
738.020 447.891 l
738.090 447.899 l
738.444 447.942 l
738.515 447.950 l
738.585 447.959 l
738.656 447.967 l
738.797 447.984 l
738.939 448.001 l
739.009 448.009 l
739.151 448.026 l
739.222 448.035 l
739.504 448.069 l
739.575 448.077 l
739.646 448.086 l
739.717 448.094 l
739.787 448.102 l
740.141 448.145 l
740.212 448.153 l
740.353 448.170 l
740.424 448.178 l
740.494 448.187 l
740.565 448.195 l
740.636 448.204 l
740.706 448.212 l
740.777 448.221 l
740.989 448.246 l
741.060 448.254 l
741.696 448.330 l
741.767 448.339 l
741.979 448.364 l
742.050 448.372 l
742.121 448.381 l
742.191 448.389 l
742.333 448.406 l
742.474 448.423 l
742.545 448.431 l
742.686 448.448 l
742.757 448.456 l
742.828 448.465 l
743.464 448.540 l
743.535 448.549 l
743.747 448.574 l
743.818 448.582 l
743.888 448.591 l
743.959 448.599 l
744.030 448.607 l
744.100 448.616 l
744.171 448.624 l
744.242 448.632 l
744.312 448.641 l
744.525 448.666 l
744.595 448.674 l
745.232 448.750 l
745.302 448.758 l
745.444 448.775 l
745.515 448.783 l
745.656 448.800 l
745.727 448.808 l
745.797 448.816 l
745.868 448.825 l
745.939 448.833 l
746.080 448.850 l
746.151 448.858 l
746.434 448.891 l
746.504 448.900 l
746.575 448.908 l
746.646 448.916 l
746.787 448.933 l
746.858 448.941 l
747.141 448.975 l
747.212 448.983 l
747.353 449.000 l
747.424 449.008 l
747.494 449.016 l
747.565 449.025 l
747.636 449.033 l
747.706 449.041 l
747.777 449.050 l
747.919 449.066 l
747.989 449.075 l
748.908 449.182 l
748.979 449.191 l
749.050 449.199 l
749.121 449.207 l
749.262 449.224 l
749.333 449.232 l
749.403 449.240 l
749.474 449.249 l
749.545 449.257 l
749.757 449.282 l
749.828 449.290 l
750.393 449.356 l
750.464 449.365 l
750.605 449.381 l
750.676 449.389 l
750.818 449.406 l
750.888 449.414 l
751.030 449.431 l
751.100 449.439 l
751.171 449.447 l
751.242 449.455 l
751.312 449.464 l
751.454 449.480 l
751.525 449.488 l
751.949 449.538 l
752.020 449.546 l
752.090 449.554 l
752.444 449.596 l
752.515 449.604 l
752.727 449.628 l
752.797 449.637 l
752.868 449.645 l
752.939 449.653 l
753.009 449.661 l
753.151 449.678 l
753.222 449.686 l
753.363 449.702 l
753.434 449.711 l
754.141 449.793 l
754.212 449.801 l
754.424 449.826 l
754.494 449.834 l
754.565 449.842 l
754.636 449.850 l
754.777 449.867 l
754.919 449.883 l
754.989 449.891 l
755.131 449.907 l
755.201 449.916 l
755.555 449.957 l
755.626 449.965 l
756.050 450.014 l
756.121 450.022 l
756.262 450.038 l
756.333 450.046 l
756.474 450.063 l
756.545 450.071 l
756.616 450.079 l
756.757 450.095 l
756.828 450.104 l
756.969 450.120 l
757.040 450.128 l
757.818 450.218 l
757.888 450.226 l
758.100 450.250 l
758.171 450.258 l
758.242 450.267 l
758.312 450.275 l
758.454 450.291 l
758.595 450.307 l
758.666 450.315 l
758.807 450.332 l
758.878 450.340 l
759.373 450.397 l
759.444 450.405 l
759.727 450.437 l
759.797 450.445 l
759.939 450.461 l
760.009 450.470 l
760.080 450.478 l
760.151 450.486 l
760.222 450.494 l
760.292 450.502 l
760.363 450.510 l
760.504 450.526 l
760.575 450.534 l
760.717 450.551 l
760.787 450.559 l
760.999 450.583 l
S
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
52.0000 497.000 m
762.999 497.000 l
S
newpath
52.0000 9.00000 m
762.999 9.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
400 525 15 15 rc
newpath
410.163 531.255 m
408.087 538.428 l
407.994 538.758 407.948 538.969 407.948 539.063  c
407.948 539.160 407.972 539.243 408.021 539.313  c
408.069 539.383 408.136 539.435 408.221 539.469  c
408.352 539.520 408.523 539.545 408.735 539.545  c
408.671 539.780 l
405.631 539.780 l
405.694 539.545 l
406.109 539.511 406.367 539.475 406.469 539.437  c
406.630 539.374 406.762 539.270 406.866 539.126  c
406.969 538.982 407.085 538.680 407.211 538.218  c
408.087 535.089 l
407.529 535.906 407.008 536.479 406.526 536.809  c
406.183 537.042 405.864 537.158 405.567 537.158  c
405.144 537.158 404.825 536.986 404.609 536.641  c
404.393 536.296 404.285 535.923 404.285 535.521  c
404.285 534.882 404.482 534.211 404.876 533.508  c
405.269 532.806 405.787 532.230 406.431 531.782  c
406.930 531.431 407.383 531.255 407.789 531.255  c
408.090 531.255 408.337 531.328 408.532 531.474  c
408.726 531.620 408.872 531.854 408.970 532.175  c
409.167 531.464 l
h
408.716 532.493 m
408.716 532.222 408.633 532.000 408.468 531.826  c
408.303 531.653 408.100 531.566 407.859 531.566  c
407.343 531.566 406.799 532.010 406.228 532.899  c
405.656 533.788 405.371 534.626 405.371 535.413  c
405.371 535.730 405.442 535.971 405.583 536.136  c
405.725 536.301 405.897 536.384 406.101 536.384  c
406.359 536.384 406.651 536.240 406.977 535.952  c
407.472 535.516 407.885 534.957 408.218 534.273  c
408.550 533.590 408.716 532.996 408.716 532.493  c
h
f
Q
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
54.0000 497.000 m
54.0000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
60.8623 513.835 m
60.8623 523.583 l
60.8623 524.315 60.8945 524.782 60.9589 524.984  c
61.0234 525.187 61.1582 525.352 61.3632 525.481  c
61.5683 525.610 61.8964 525.674 62.3476 525.674  c
62.6201 525.674 l
62.6201 526.000 l
56.3447 526.000 l
56.3447 525.674 l
56.6611 525.674 l
57.1709 525.674 57.5341 525.616 57.7509 525.499  c
57.9677 525.381 58.1142 525.220 58.1904 525.015  c
58.2666 524.810 58.3046 524.333 58.3046 523.583  c
58.3046 517.404 l
58.3046 516.853 58.2783 516.509 58.2255 516.371  c
58.1728 516.233 58.0747 516.116 57.9311 516.020  c
57.7876 515.923 57.6220 515.875 57.4345 515.875  c
57.1357 515.875 56.7724 515.968 56.3447 516.156  c
56.1865 515.839 l
60.5722 513.835 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
204.000 497.000 m
204.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
206.742 514.082 m
212.323 514.082 l
211.435 516.349 l
206.742 516.349 l
206.293 517.536 l
208.315 517.612 209.871 518.116 210.960 519.047  c
211.857 519.815 212.305 520.770 212.305 521.913  c
212.305 522.645 212.097 523.361 211.681 524.062  c
211.265 524.762 210.679 525.301 209.923 525.679  c
209.168 526.057 208.338 526.246 207.436 526.246  c
206.463 526.246 205.716 526.064 205.195 525.701  c
204.832 525.443 204.650 525.150 204.650 524.822  c
204.650 524.570 204.745 524.347 204.936 524.154  c
205.126 523.960 205.347 523.864 205.599 523.864  c
205.828 523.864 206.059 523.911 206.293 524.004  c
206.528 524.098 206.929 524.344 207.498 524.743  c
207.855 524.989 208.163 525.159 208.420 525.252  c
208.602 525.323 208.807 525.358 209.036 525.358  c
209.516 525.358 209.925 525.182 210.262 524.831  c
210.599 524.479 210.767 524.057 210.767 523.565  c
210.767 522.534 210.252 521.696 209.220 521.051  c
208.189 520.407 206.888 520.085 205.318 520.085  c
205.160 520.085 204.922 520.087 204.606 520.093  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
268.000 497.000 m
268.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
269.862 513.835 m
269.862 523.583 l
269.862 524.315 269.894 524.782 269.959 524.984  c
270.023 525.187 270.158 525.352 270.363 525.481  c
270.568 525.610 270.896 525.674 271.347 525.674  c
271.620 525.674 l
271.620 526.000 l
265.344 526.000 l
265.344 525.674 l
265.661 525.674 l
266.170 525.674 266.534 525.616 266.751 525.499  c
266.967 525.381 267.114 525.220 267.190 525.015  c
267.266 524.810 267.304 524.333 267.304 523.583  c
267.304 517.404 l
267.304 516.853 267.278 516.509 267.225 516.371  c
267.172 516.233 267.074 516.116 266.931 516.020  c
266.787 515.923 266.622 515.875 266.434 515.875  c
266.135 515.875 265.772 515.968 265.344 516.156  c
265.186 515.839 l
269.572 513.835 l
h
281.340 520.041 m
281.340 521.230 281.173 522.340 280.839 523.372  c
280.640 524.004 280.372 524.523 280.035 524.927  c
279.698 525.332 279.316 525.652 278.888 525.890  c
278.460 526.127 277.995 526.246 277.491 526.246  c
276.917 526.246 276.398 526.099 275.935 525.806  c
275.472 525.513 275.062 525.094 274.705 524.549  c
274.447 524.151 274.221 523.621 274.028 522.959  c
273.776 522.062 273.650 521.136 273.650 520.181  c
273.650 518.886 273.832 517.697 274.195 516.613  c
274.494 515.716 274.948 515.029 275.557 514.552  c
276.167 514.074 276.811 513.835 277.491 513.835  c
278.182 513.835 278.828 514.071 279.429 514.543  c
280.029 515.015 280.470 515.649 280.752 516.446  c
281.144 517.542 281.340 518.740 281.340 520.041  c
h
278.633 520.023 m
278.633 517.937 278.622 516.721 278.598 516.376  c
278.540 515.561 278.399 515.010 278.176 514.723  c
278.030 514.536 277.793 514.442 277.464 514.442  c
277.212 514.442 277.013 514.512 276.867 514.653  c
276.650 514.858 276.503 515.220 276.427 515.738  c
276.351 516.257 276.313 518.066 276.313 521.166  c
276.313 522.853 276.372 523.984 276.489 524.558  c
276.577 524.974 276.703 525.252 276.867 525.393  c
277.031 525.534 277.248 525.604 277.517 525.604  c
277.810 525.604 278.030 525.510 278.176 525.323  c
278.422 524.995 278.563 524.488 278.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
418.000 497.000 m
418.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
415.742 514.082 m
421.323 514.082 l
420.435 516.349 l
415.742 516.349 l
415.293 517.536 l
417.315 517.612 418.871 518.116 419.960 519.047  c
420.857 519.815 421.305 520.770 421.305 521.913  c
421.305 522.645 421.097 523.361 420.681 524.062  c
420.265 524.762 419.679 525.301 418.923 525.679  c
418.168 526.057 417.338 526.246 416.436 526.246  c
415.463 526.246 414.716 526.064 414.195 525.701  c
413.832 525.443 413.650 525.150 413.650 524.822  c
413.650 524.570 413.745 524.347 413.936 524.154  c
414.126 523.960 414.347 523.864 414.599 523.864  c
414.828 523.864 415.059 523.911 415.293 524.004  c
415.528 524.098 415.929 524.344 416.498 524.743  c
416.855 524.989 417.163 525.159 417.420 525.252  c
417.602 525.323 417.807 525.358 418.036 525.358  c
418.516 525.358 418.925 525.182 419.262 524.831  c
419.599 524.479 419.767 524.057 419.767 523.565  c
419.767 522.534 419.252 521.696 418.220 521.051  c
417.189 520.407 415.888 520.085 414.318 520.085  c
414.160 520.085 413.922 520.087 413.606 520.093  c
h
430.340 520.041 m
430.340 521.230 430.173 522.340 429.839 523.372  c
429.640 524.004 429.372 524.523 429.035 524.927  c
428.698 525.332 428.316 525.652 427.888 525.890  c
427.460 526.127 426.995 526.246 426.491 526.246  c
425.917 526.246 425.398 526.099 424.935 525.806  c
424.472 525.513 424.062 525.094 423.705 524.549  c
423.447 524.151 423.221 523.621 423.028 522.959  c
422.776 522.062 422.650 521.136 422.650 520.181  c
422.650 518.886 422.832 517.697 423.195 516.613  c
423.494 515.716 423.948 515.029 424.557 514.552  c
425.167 514.074 425.811 513.835 426.491 513.835  c
427.182 513.835 427.828 514.071 428.429 514.543  c
429.029 515.015 429.470 515.649 429.752 516.446  c
430.144 517.542 430.340 518.740 430.340 520.041  c
h
427.633 520.023 m
427.633 517.937 427.622 516.721 427.598 516.376  c
427.540 515.561 427.399 515.010 427.176 514.723  c
427.030 514.536 426.793 514.442 426.464 514.442  c
426.212 514.442 426.013 514.512 425.867 514.653  c
425.650 514.858 425.503 515.220 425.427 515.738  c
425.351 516.257 425.313 518.066 425.313 521.166  c
425.313 522.853 425.372 523.984 425.489 524.558  c
425.577 524.974 425.703 525.252 425.867 525.393  c
426.031 525.534 426.248 525.604 426.517 525.604  c
426.810 525.604 427.030 525.510 427.176 525.323  c
427.422 524.995 427.563 524.488 427.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
482.000 497.000 m
482.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
479.862 513.835 m
479.862 523.583 l
479.862 524.315 479.894 524.782 479.959 524.984  c
480.023 525.187 480.158 525.352 480.363 525.481  c
480.568 525.610 480.896 525.674 481.347 525.674  c
481.620 525.674 l
481.620 526.000 l
475.344 526.000 l
475.344 525.674 l
475.661 525.674 l
476.170 525.674 476.534 525.616 476.751 525.499  c
476.967 525.381 477.114 525.220 477.190 525.015  c
477.266 524.810 477.304 524.333 477.304 523.583  c
477.304 517.404 l
477.304 516.853 477.278 516.509 477.225 516.371  c
477.172 516.233 477.074 516.116 476.931 516.020  c
476.787 515.923 476.622 515.875 476.434 515.875  c
476.135 515.875 475.772 515.968 475.344 516.156  c
475.186 515.839 l
479.572 513.835 l
h
491.340 520.041 m
491.340 521.230 491.173 522.340 490.839 523.372  c
490.640 524.004 490.372 524.523 490.035 524.927  c
489.698 525.332 489.316 525.652 488.888 525.890  c
488.460 526.127 487.995 526.246 487.491 526.246  c
486.917 526.246 486.398 526.099 485.935 525.806  c
485.472 525.513 485.062 525.094 484.705 524.549  c
484.447 524.151 484.221 523.621 484.028 522.959  c
483.776 522.062 483.650 521.136 483.650 520.181  c
483.650 518.886 483.832 517.697 484.195 516.613  c
484.494 515.716 484.948 515.029 485.557 514.552  c
486.167 514.074 486.811 513.835 487.491 513.835  c
488.182 513.835 488.828 514.071 489.429 514.543  c
490.029 515.015 490.470 515.649 490.752 516.446  c
491.144 517.542 491.340 518.740 491.340 520.041  c
h
488.633 520.023 m
488.633 517.937 488.622 516.721 488.598 516.376  c
488.540 515.561 488.399 515.010 488.176 514.723  c
488.030 514.536 487.793 514.442 487.464 514.442  c
487.212 514.442 487.013 514.512 486.867 514.653  c
486.650 514.858 486.503 515.220 486.427 515.738  c
486.351 516.257 486.313 518.066 486.313 521.166  c
486.313 522.853 486.372 523.984 486.489 524.558  c
486.577 524.974 486.703 525.252 486.867 525.393  c
487.031 525.534 487.248 525.604 487.517 525.604  c
487.810 525.604 488.030 525.510 488.176 525.323  c
488.422 524.995 488.563 524.488 488.598 523.802  c
h
500.340 520.041 m
500.340 521.230 500.173 522.340 499.839 523.372  c
499.640 524.004 499.372 524.523 499.035 524.927  c
498.698 525.332 498.316 525.652 497.888 525.890  c
497.460 526.127 496.995 526.246 496.491 526.246  c
495.917 526.246 495.398 526.099 494.935 525.806  c
494.472 525.513 494.062 525.094 493.705 524.549  c
493.447 524.151 493.221 523.621 493.028 522.959  c
492.776 522.062 492.650 521.136 492.650 520.181  c
492.650 518.886 492.832 517.697 493.195 516.613  c
493.494 515.716 493.948 515.029 494.557 514.552  c
495.167 514.074 495.811 513.835 496.491 513.835  c
497.182 513.835 497.828 514.071 498.429 514.543  c
499.029 515.015 499.470 515.649 499.752 516.446  c
500.144 517.542 500.340 518.740 500.340 520.041  c
h
497.633 520.023 m
497.633 517.937 497.622 516.721 497.598 516.376  c
497.540 515.561 497.399 515.010 497.176 514.723  c
497.030 514.536 496.793 514.442 496.464 514.442  c
496.212 514.442 496.013 514.512 495.867 514.653  c
495.650 514.858 495.503 515.220 495.427 515.738  c
495.351 516.257 495.313 518.066 495.313 521.166  c
495.313 522.853 495.372 523.984 495.489 524.558  c
495.577 524.974 495.703 525.252 495.867 525.393  c
496.031 525.534 496.248 525.604 496.517 525.604  c
496.810 525.604 497.030 525.510 497.176 525.323  c
497.422 524.995 497.563 524.488 497.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
632.000 497.000 m
632.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
626.742 514.082 m
632.323 514.082 l
631.435 516.349 l
626.742 516.349 l
626.293 517.536 l
628.315 517.612 629.871 518.116 630.960 519.047  c
631.857 519.815 632.305 520.770 632.305 521.913  c
632.305 522.645 632.097 523.361 631.681 524.062  c
631.265 524.762 630.679 525.301 629.923 525.679  c
629.168 526.057 628.338 526.246 627.436 526.246  c
626.463 526.246 625.716 526.064 625.195 525.701  c
624.832 525.443 624.650 525.150 624.650 524.822  c
624.650 524.570 624.745 524.347 624.936 524.154  c
625.126 523.960 625.347 523.864 625.599 523.864  c
625.828 523.864 626.059 523.911 626.293 524.004  c
626.528 524.098 626.929 524.344 627.498 524.743  c
627.855 524.989 628.163 525.159 628.420 525.252  c
628.602 525.323 628.807 525.358 629.036 525.358  c
629.516 525.358 629.925 525.182 630.262 524.831  c
630.599 524.479 630.767 524.057 630.767 523.565  c
630.767 522.534 630.252 521.696 629.220 521.051  c
628.189 520.407 626.888 520.085 625.318 520.085  c
625.160 520.085 624.922 520.087 624.606 520.093  c
h
641.340 520.041 m
641.340 521.230 641.173 522.340 640.839 523.372  c
640.640 524.004 640.372 524.523 640.035 524.927  c
639.698 525.332 639.316 525.652 638.888 525.890  c
638.460 526.127 637.995 526.246 637.491 526.246  c
636.917 526.246 636.398 526.099 635.935 525.806  c
635.472 525.513 635.062 525.094 634.705 524.549  c
634.447 524.151 634.221 523.621 634.028 522.959  c
633.776 522.062 633.650 521.136 633.650 520.181  c
633.650 518.886 633.832 517.697 634.195 516.613  c
634.494 515.716 634.948 515.029 635.557 514.552  c
636.167 514.074 636.811 513.835 637.491 513.835  c
638.182 513.835 638.828 514.071 639.429 514.543  c
640.029 515.015 640.470 515.649 640.752 516.446  c
641.144 517.542 641.340 518.740 641.340 520.041  c
h
638.633 520.023 m
638.633 517.937 638.622 516.721 638.598 516.376  c
638.540 515.561 638.399 515.010 638.176 514.723  c
638.030 514.536 637.793 514.442 637.464 514.442  c
637.212 514.442 637.013 514.512 636.867 514.653  c
636.650 514.858 636.503 515.220 636.427 515.738  c
636.351 516.257 636.313 518.066 636.313 521.166  c
636.313 522.853 636.372 523.984 636.489 524.558  c
636.577 524.974 636.703 525.252 636.867 525.393  c
637.031 525.534 637.248 525.604 637.517 525.604  c
637.810 525.604 638.030 525.510 638.176 525.323  c
638.422 524.995 638.563 524.488 638.598 523.802  c
h
650.340 520.041 m
650.340 521.230 650.173 522.340 649.839 523.372  c
649.640 524.004 649.372 524.523 649.035 524.927  c
648.698 525.332 648.316 525.652 647.888 525.890  c
647.460 526.127 646.995 526.246 646.491 526.246  c
645.917 526.246 645.398 526.099 644.935 525.806  c
644.472 525.513 644.062 525.094 643.705 524.549  c
643.447 524.151 643.221 523.621 643.028 522.959  c
642.776 522.062 642.650 521.136 642.650 520.181  c
642.650 518.886 642.832 517.697 643.195 516.613  c
643.494 515.716 643.948 515.029 644.557 514.552  c
645.167 514.074 645.811 513.835 646.491 513.835  c
647.182 513.835 647.828 514.071 648.429 514.543  c
649.029 515.015 649.470 515.649 649.752 516.446  c
650.144 517.542 650.340 518.740 650.340 520.041  c
h
647.633 520.023 m
647.633 517.937 647.622 516.721 647.598 516.376  c
647.540 515.561 647.399 515.010 647.176 514.723  c
647.030 514.536 646.793 514.442 646.464 514.442  c
646.212 514.442 646.013 514.512 645.867 514.653  c
645.650 514.858 645.503 515.220 645.427 515.738  c
645.351 516.257 645.313 518.066 645.313 521.166  c
645.313 522.853 645.372 523.984 645.489 524.558  c
645.577 524.974 645.703 525.252 645.867 525.393  c
646.031 525.534 646.248 525.604 646.517 525.604  c
646.810 525.604 647.030 525.510 647.176 525.323  c
647.422 524.995 647.563 524.488 647.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
697.000 497.000 m
697.000 504.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
688.862 513.835 m
688.862 523.583 l
688.862 524.315 688.894 524.782 688.959 524.984  c
689.023 525.187 689.158 525.352 689.363 525.481  c
689.568 525.610 689.896 525.674 690.347 525.674  c
690.620 525.674 l
690.620 526.000 l
684.344 526.000 l
684.344 525.674 l
684.661 525.674 l
685.170 525.674 685.534 525.616 685.751 525.499  c
685.967 525.381 686.114 525.220 686.190 525.015  c
686.266 524.810 686.304 524.333 686.304 523.583  c
686.304 517.404 l
686.304 516.853 686.278 516.509 686.225 516.371  c
686.172 516.233 686.074 516.116 685.931 516.020  c
685.787 515.923 685.622 515.875 685.434 515.875  c
685.135 515.875 684.772 515.968 684.344 516.156  c
684.186 515.839 l
688.572 513.835 l
h
700.340 520.041 m
700.340 521.230 700.173 522.340 699.839 523.372  c
699.640 524.004 699.372 524.523 699.035 524.927  c
698.698 525.332 698.316 525.652 697.888 525.890  c
697.460 526.127 696.995 526.246 696.491 526.246  c
695.917 526.246 695.398 526.099 694.935 525.806  c
694.472 525.513 694.062 525.094 693.705 524.549  c
693.447 524.151 693.221 523.621 693.028 522.959  c
692.776 522.062 692.650 521.136 692.650 520.181  c
692.650 518.886 692.832 517.697 693.195 516.613  c
693.494 515.716 693.948 515.029 694.557 514.552  c
695.167 514.074 695.811 513.835 696.491 513.835  c
697.182 513.835 697.828 514.071 698.429 514.543  c
699.029 515.015 699.470 515.649 699.752 516.446  c
700.144 517.542 700.340 518.740 700.340 520.041  c
h
697.633 520.023 m
697.633 517.937 697.622 516.721 697.598 516.376  c
697.540 515.561 697.399 515.010 697.176 514.723  c
697.030 514.536 696.793 514.442 696.464 514.442  c
696.212 514.442 696.013 514.512 695.867 514.653  c
695.650 514.858 695.503 515.220 695.427 515.738  c
695.351 516.257 695.313 518.066 695.313 521.166  c
695.313 522.853 695.372 523.984 695.489 524.558  c
695.577 524.974 695.703 525.252 695.867 525.393  c
696.031 525.534 696.248 525.604 696.517 525.604  c
696.810 525.604 697.030 525.510 697.176 525.323  c
697.422 524.995 697.563 524.488 697.598 523.802  c
h
709.340 520.041 m
709.340 521.230 709.173 522.340 708.839 523.372  c
708.640 524.004 708.372 524.523 708.035 524.927  c
707.698 525.332 707.316 525.652 706.888 525.890  c
706.460 526.127 705.995 526.246 705.491 526.246  c
704.917 526.246 704.398 526.099 703.935 525.806  c
703.472 525.513 703.062 525.094 702.705 524.549  c
702.447 524.151 702.221 523.621 702.028 522.959  c
701.776 522.062 701.650 521.136 701.650 520.181  c
701.650 518.886 701.832 517.697 702.195 516.613  c
702.494 515.716 702.948 515.029 703.557 514.552  c
704.167 514.074 704.811 513.835 705.491 513.835  c
706.182 513.835 706.828 514.071 707.429 514.543  c
708.029 515.015 708.470 515.649 708.752 516.446  c
709.144 517.542 709.340 518.740 709.340 520.041  c
h
706.633 520.023 m
706.633 517.937 706.622 516.721 706.598 516.376  c
706.540 515.561 706.399 515.010 706.176 514.723  c
706.030 514.536 705.793 514.442 705.464 514.442  c
705.212 514.442 705.013 514.512 704.867 514.653  c
704.650 514.858 704.503 515.220 704.427 515.738  c
704.351 516.257 704.313 518.066 704.313 521.166  c
704.313 522.853 704.372 523.984 704.489 524.558  c
704.577 524.974 704.703 525.252 704.867 525.393  c
705.031 525.534 705.248 525.604 705.517 525.604  c
705.810 525.604 706.030 525.510 706.176 525.323  c
706.422 524.995 706.563 524.488 706.598 523.802  c
h
718.340 520.041 m
718.340 521.230 718.173 522.340 717.839 523.372  c
717.640 524.004 717.372 524.523 717.035 524.927  c
716.698 525.332 716.316 525.652 715.888 525.890  c
715.460 526.127 714.995 526.246 714.491 526.246  c
713.917 526.246 713.398 526.099 712.935 525.806  c
712.472 525.513 712.062 525.094 711.705 524.549  c
711.447 524.151 711.221 523.621 711.028 522.959  c
710.776 522.062 710.650 521.136 710.650 520.181  c
710.650 518.886 710.832 517.697 711.195 516.613  c
711.494 515.716 711.948 515.029 712.557 514.552  c
713.167 514.074 713.811 513.835 714.491 513.835  c
715.182 513.835 715.828 514.071 716.429 514.543  c
717.029 515.015 717.470 515.649 717.752 516.446  c
718.144 517.542 718.340 518.740 718.340 520.041  c
h
715.633 520.023 m
715.633 517.937 715.622 516.721 715.598 516.376  c
715.540 515.561 715.399 515.010 715.176 514.723  c
715.030 514.536 714.793 514.442 714.464 514.442  c
714.212 514.442 714.013 514.512 713.867 514.653  c
713.650 514.858 713.503 515.220 713.427 515.738  c
713.351 516.257 713.313 518.066 713.313 521.166  c
713.313 522.853 713.372 523.984 713.489 524.558  c
713.577 524.974 713.703 525.252 713.867 525.393  c
714.031 525.534 714.248 525.604 714.517 525.604  c
714.810 525.604 715.030 525.510 715.176 525.323  c
715.422 524.995 715.563 524.488 715.598 523.802  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
52.0000 497.000 m
52.0000 9.01422 l
S
newpath
763.000 497.000 m
763.000 9.01422 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 246 14 15 rc
newpath
6.07568 252.255 m
6.21956 252.500 6.31901 252.730 6.37402 252.944  c
6.42903 253.157 6.48404 253.577 6.53906 254.204  c
6.81835 257.327 l
7.07226 257.022 7.44043 256.540 7.92285 255.879  c
8.15559 255.558 8.44335 255.120 8.78613 254.565  c
8.99349 254.227 9.12044 253.990 9.16699 253.855  c
9.19238 253.787 9.20507 253.717 9.20507 253.645  c
9.20507 253.599 9.19026 253.560 9.16064 253.531  c
9.13102 253.501 9.05379 253.466 8.92895 253.426  c
8.80411 253.386 8.70043 253.312 8.61792 253.204  c
8.53540 253.096 8.49414 252.972 8.49414 252.833  c
8.49414 252.659 8.54492 252.519 8.64648 252.414  c
8.74804 252.308 8.87500 252.255 9.02734 252.255  c
9.21354 252.255 9.37223 252.332 9.50341 252.487  c
9.63460 252.641 9.70019 252.854 9.70019 253.125  c
9.70019 253.459 9.58593 253.841 9.35742 254.270  c
9.12890 254.700 8.68880 255.359 8.03710 256.248  c
7.38541 257.136 6.59619 258.105 5.66943 259.155  c
5.03043 259.878 4.55647 260.334 4.24755 260.523  c
3.93863 260.711 3.67415 260.805 3.45410 260.805  c
3.32291 260.805 3.20760 260.755 3.10815 260.656  c
3.00870 260.557 2.95898 260.441 2.95898 260.310  c
2.95898 260.145 3.02775 259.995 3.16528 259.859  c
3.30281 259.724 3.45198 259.656 3.61279 259.656  c
3.69742 259.656 3.76725 259.675 3.82226 259.713  c
3.85612 259.735 3.89314 259.795 3.93335 259.894  c
3.97355 259.994 4.01057 260.060 4.04443 260.094  c
4.06559 260.115 4.09098 260.126 4.12060 260.126  c
4.14599 260.126 4.19043 260.105 4.25390 260.063  c
4.48665 259.919 4.75748 259.690 5.06640 259.377  c
5.47265 258.962 5.77311 258.624 5.96777 258.361  c
5.61230 254.337 l
5.55306 253.673 5.46419 253.268 5.34570 253.125  c
5.22721 252.981 5.02832 252.909 4.74902 252.909  c
4.66015 252.909 4.50146 252.921 4.27294 252.947  c
4.21582 252.712 l
h
f
Q
cliprestore
newpath
0 0 m
0 541.000 l
764.000 541.000 l
764.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
52.0000 426.000 m
45.0000 426.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.3408 431.041 m
33.3408 432.230 33.1738 433.340 32.8398 434.372  c
32.6406 435.004 32.3725 435.523 32.0356 435.927  c
31.6987 436.332 31.3164 436.652 30.8886 436.890  c
30.4609 437.127 29.9951 437.246 29.4912 437.246  c
28.9169 437.246 28.3984 437.099 27.9355 436.806  c
27.4726 436.513 27.0625 436.094 26.7050 435.549  c
26.4472 435.151 26.2216 434.621 26.0283 433.959  c
25.7763 433.062 25.6503 432.136 25.6503 431.181  c
25.6503 429.886 25.8320 428.697 26.1953 427.613  c
26.4941 426.716 26.9482 426.029 27.5576 425.552  c
28.1669 425.074 28.8115 424.835 29.4912 424.835  c
30.1826 424.835 30.8286 425.071 31.4292 425.543  c
32.0297 426.015 32.4707 426.649 32.7519 427.446  c
33.1445 428.542 33.3408 429.740 33.3408 431.041  c
h
30.6337 431.023 m
30.6337 428.937 30.6220 427.721 30.5986 427.376  c
30.5400 426.561 30.3994 426.010 30.1767 425.723  c
30.0302 425.536 29.7929 425.442 29.4648 425.442  c
29.2128 425.442 29.0136 425.512 28.8671 425.653  c
28.6503 425.858 28.5039 426.220 28.4277 426.738  c
28.3515 427.257 28.3134 429.066 28.3134 432.166  c
28.3134 433.853 28.3720 434.984 28.4892 435.558  c
28.5771 435.974 28.7031 436.252 28.8671 436.393  c
29.0312 436.534 29.2480 436.604 29.5175 436.604  c
29.8105 436.604 30.0302 436.510 30.1767 436.323  c
30.4228 435.995 30.5634 435.488 30.5986 434.802  c
h
36.2500 434.293 m
36.6601 434.293 37.0073 434.436 37.2915 434.723  c
37.5756 435.010 37.7177 435.356 37.7177 435.760  c
37.7177 436.165 37.5742 436.509 37.2871 436.793  c
37.0000 437.077 36.6543 437.219 36.2500 437.219  c
35.8457 437.219 35.5014 437.077 35.2172 436.793  c
34.9331 436.509 34.7910 436.165 34.7910 435.760  c
34.7910 435.356 34.9331 435.010 35.2172 434.723  c
35.5014 434.436 35.8457 434.293 36.2500 434.293  c
h
44.8623 424.835 m
44.8623 434.583 l
44.8623 435.315 44.8945 435.782 44.9589 435.984  c
45.0234 436.187 45.1582 436.352 45.3632 436.481  c
45.5683 436.610 45.8964 436.674 46.3476 436.674  c
46.6201 436.674 l
46.6201 437.000 l
40.3447 437.000 l
40.3447 436.674 l
40.6611 436.674 l
41.1709 436.674 41.5341 436.616 41.7509 436.499  c
41.9677 436.381 42.1142 436.220 42.1904 436.015  c
42.2666 435.810 42.3046 435.333 42.3046 434.583  c
42.3046 428.404 l
42.3046 427.853 42.2783 427.509 42.2255 427.371  c
42.1728 427.233 42.0747 427.116 41.9311 427.020  c
41.7876 426.923 41.6220 426.875 41.4345 426.875  c
41.1357 426.875 40.7724 426.968 40.3447 427.156  c
40.1865 426.839 l
44.5722 424.835 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 288.000 m
45.0000 288.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.3408 293.041 m
33.3408 294.230 33.1738 295.340 32.8398 296.372  c
32.6406 297.004 32.3725 297.523 32.0356 297.927  c
31.6987 298.332 31.3164 298.652 30.8886 298.890  c
30.4609 299.127 29.9951 299.246 29.4912 299.246  c
28.9169 299.246 28.3984 299.099 27.9355 298.806  c
27.4726 298.513 27.0625 298.094 26.7050 297.549  c
26.4472 297.151 26.2216 296.621 26.0283 295.959  c
25.7763 295.062 25.6503 294.136 25.6503 293.181  c
25.6503 291.886 25.8320 290.697 26.1953 289.613  c
26.4941 288.716 26.9482 288.029 27.5576 287.552  c
28.1669 287.074 28.8115 286.835 29.4912 286.835  c
30.1826 286.835 30.8286 287.071 31.4292 287.543  c
32.0297 288.015 32.4707 288.649 32.7519 289.446  c
33.1445 290.542 33.3408 291.740 33.3408 293.041  c
h
30.6337 293.023 m
30.6337 290.937 30.6220 289.721 30.5986 289.376  c
30.5400 288.561 30.3994 288.010 30.1767 287.723  c
30.0302 287.536 29.7929 287.442 29.4648 287.442  c
29.2128 287.442 29.0136 287.512 28.8671 287.653  c
28.6503 287.858 28.5039 288.220 28.4277 288.738  c
28.3515 289.257 28.3134 291.066 28.3134 294.166  c
28.3134 295.853 28.3720 296.984 28.4892 297.558  c
28.5771 297.974 28.7031 298.252 28.8671 298.393  c
29.0312 298.534 29.2480 298.604 29.5175 298.604  c
29.8105 298.604 30.0302 298.510 30.1767 298.323  c
30.4228 297.995 30.5634 297.488 30.5986 296.802  c
h
36.2500 296.293 m
36.6601 296.293 37.0073 296.436 37.2915 296.723  c
37.5756 297.010 37.7177 297.356 37.7177 297.760  c
37.7177 298.165 37.5742 298.509 37.2871 298.793  c
37.0000 299.077 36.6543 299.219 36.2500 299.219  c
35.8457 299.219 35.5014 299.077 35.2172 298.793  c
34.9331 298.509 34.7910 298.165 34.7910 297.760  c
34.7910 297.356 34.9331 297.010 35.2172 296.723  c
35.5014 296.436 35.8457 296.293 36.2500 296.293  c
h
46.4531 299.000 m
39.4394 299.000 l
39.4394 298.806 l
41.5898 296.246 42.8950 294.523 43.3549 293.638  c
43.8149 292.753 44.0449 291.889 44.0449 291.045  c
44.0449 290.430 43.8544 289.919 43.4736 289.512  c
43.0927 289.105 42.6269 288.901 42.0761 288.901  c
41.1738 288.901 40.4736 289.352 39.9755 290.254  c
39.6503 290.140 l
39.9668 289.015 40.4472 288.183 41.0918 287.644  c
41.7363 287.105 42.4804 286.835 43.3242 286.835  c
43.9277 286.835 44.4785 286.976 44.9765 287.257  c
45.4746 287.539 45.8642 287.924 46.1455 288.413  c
46.4267 288.902 46.5673 289.361 46.5673 289.789  c
46.5673 290.568 46.3505 291.359 45.9169 292.162  c
45.3252 293.246 44.0332 294.757 42.0410 296.697  c
44.6162 296.697 l
45.2490 296.697 45.6606 296.670 45.8510 296.618  c
46.0415 296.565 46.1982 296.476 46.3212 296.350  c
46.4443 296.224 46.6054 295.959 46.8046 295.554  c
47.1210 295.554 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 149.000 m
45.0000 149.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.3408 155.041 m
33.3408 156.230 33.1738 157.340 32.8398 158.372  c
32.6406 159.004 32.3725 159.523 32.0356 159.927  c
31.6987 160.332 31.3164 160.652 30.8886 160.890  c
30.4609 161.127 29.9951 161.246 29.4912 161.246  c
28.9169 161.246 28.3984 161.099 27.9355 160.806  c
27.4726 160.513 27.0625 160.094 26.7050 159.549  c
26.4472 159.151 26.2216 158.621 26.0283 157.959  c
25.7763 157.062 25.6503 156.136 25.6503 155.181  c
25.6503 153.886 25.8320 152.697 26.1953 151.613  c
26.4941 150.716 26.9482 150.029 27.5576 149.552  c
28.1669 149.074 28.8115 148.835 29.4912 148.835  c
30.1826 148.835 30.8286 149.071 31.4292 149.543  c
32.0297 150.015 32.4707 150.649 32.7519 151.446  c
33.1445 152.542 33.3408 153.740 33.3408 155.041  c
h
30.6337 155.023 m
30.6337 152.937 30.6220 151.721 30.5986 151.376  c
30.5400 150.561 30.3994 150.010 30.1767 149.723  c
30.0302 149.536 29.7929 149.442 29.4648 149.442  c
29.2128 149.442 29.0136 149.512 28.8671 149.653  c
28.6503 149.858 28.5039 150.220 28.4277 150.738  c
28.3515 151.257 28.3134 153.066 28.3134 156.166  c
28.3134 157.853 28.3720 158.984 28.4892 159.558  c
28.5771 159.974 28.7031 160.252 28.8671 160.393  c
29.0312 160.534 29.2480 160.604 29.5175 160.604  c
29.8105 160.604 30.0302 160.510 30.1767 160.323  c
30.4228 159.995 30.5634 159.488 30.5986 158.802  c
h
36.2500 158.293 m
36.6601 158.293 37.0073 158.436 37.2915 158.723  c
37.5756 159.010 37.7177 159.356 37.7177 159.760  c
37.7177 160.165 37.5742 160.509 37.2871 160.793  c
37.0000 161.077 36.6543 161.219 36.2500 161.219  c
35.8457 161.219 35.5014 161.077 35.2172 160.793  c
34.9331 160.509 34.7910 160.165 34.7910 159.760  c
34.7910 159.356 34.9331 159.010 35.2172 158.723  c
35.5014 158.436 35.8457 158.293 36.2500 158.293  c
h
41.6630 155.023 m
41.6630 154.715 l
42.3310 154.522 42.7939 154.342 43.0517 154.175  c
43.3095 154.008 43.5322 153.753 43.7197 153.410  c
43.9072 153.067 44.0009 152.720 44.0009 152.369  c
44.0009 151.882 43.8237 151.465 43.4692 151.116  c
43.1147 150.768 42.6738 150.593 42.1464 150.593  c
41.3261 150.593 40.6289 151.027 40.0546 151.894  c
39.7294 151.780 l
40.1513 150.801 40.6918 150.066 41.3510 149.574  c
42.0102 149.082 42.7441 148.835 43.5527 148.835  c
44.3789 148.835 45.0600 149.087 45.5961 149.591  c
46.1323 150.095 46.4003 150.684 46.4003 151.358  c
46.4003 151.797 46.2758 152.221 46.0268 152.628  c
45.7778 153.035 45.3867 153.394 44.8535 153.705  c
45.5390 154.039 46.0620 154.450 46.4223 154.939  c
46.7827 155.429 46.9628 156.043 46.9628 156.781  c
46.9628 158.023 46.5131 159.079 45.6137 159.949  c
44.7143 160.819 43.5087 161.254 41.9970 161.254  c
40.9892 161.254 40.2539 161.087 39.7910 160.753  c
39.4570 160.519 39.2900 160.217 39.2900 159.848  c
39.2900 159.579 39.3867 159.349 39.5800 159.158  c
39.7734 158.968 39.9960 158.873 40.2480 158.873  c
40.4414 158.873 40.6230 158.914 40.7929 158.996  c
40.8867 159.043 41.2192 159.299 41.7905 159.765  c
42.3618 160.231 42.8964 160.463 43.3945 160.463  c
43.8281 160.463 44.2002 160.292 44.5107 159.949  c
44.8212 159.606 44.9765 159.171 44.9765 158.644  c
44.9765 157.841 44.6953 157.102 44.1328 156.425  c
43.5703 155.748 42.7470 155.281 41.6630 155.023  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 11.0000 m
45.0000 11.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
33.3408 17.0410 m
33.3408 18.2304 33.1738 19.3408 32.8398 20.3720  c
32.6406 21.0048 32.3725 21.5234 32.0356 21.9277  c
31.6987 22.3320 31.3164 22.6528 30.8886 22.8901  c
30.4609 23.1274 29.9951 23.2460 29.4912 23.2460  c
28.9169 23.2460 28.3984 23.0996 27.9355 22.8066  c
27.4726 22.5136 27.0625 22.0947 26.7050 21.5498  c
26.4472 21.1513 26.2216 20.6210 26.0283 19.9589  c
25.7763 19.0625 25.6503 18.1367 25.6503 17.1816  c
25.6503 15.8867 25.8320 14.6972 26.1953 13.6132  c
26.4941 12.7168 26.9482 12.0297 27.5576 11.5522  c
28.1669 11.0747 28.8115 10.8359 29.4912 10.8359  c
30.1826 10.8359 30.8286 11.0717 31.4292 11.5434  c
32.0297 12.0151 32.4707 12.6494 32.7519 13.4462  c
33.1445 14.5419 33.3408 15.7402 33.3408 17.0410  c
h
30.6337 17.0234 m
30.6337 14.9375 30.6220 13.7216 30.5986 13.3759  c
30.5400 12.5615 30.3994 12.0107 30.1767 11.7236  c
30.0302 11.5361 29.7929 11.4423 29.4648 11.4423  c
29.2128 11.4423 29.0136 11.5127 28.8671 11.6533  c
28.6503 11.8584 28.5039 12.2202 28.4277 12.7387  c
28.3515 13.2573 28.3134 15.0664 28.3134 18.1660  c
28.3134 19.8535 28.3720 20.9843 28.4892 21.5585  c
28.5771 21.9746 28.7031 22.2529 28.8671 22.3935  c
29.0312 22.5341 29.2480 22.6044 29.5175 22.6044  c
29.8105 22.6044 30.0302 22.5107 30.1767 22.3232  c
30.4228 21.9951 30.5634 21.4882 30.5986 20.8027  c
h
36.2500 20.2929 m
36.6601 20.2929 37.0073 20.4365 37.2915 20.7236  c
37.5756 21.0107 37.7177 21.3564 37.7177 21.7607  c
37.7177 22.1650 37.5742 22.5092 37.2871 22.7934  c
37.0000 23.0776 36.6543 23.2197 36.2500 23.2197  c
35.8457 23.2197 35.5014 23.0776 35.2172 22.7934  c
34.9331 22.5092 34.7910 22.1650 34.7910 21.7607  c
34.7910 21.3564 34.9331 21.0107 35.2172 20.7236  c
35.5014 20.4365 35.8457 20.2929 36.2500 20.2929  c
h
39.4482 18.5087 m
45.1084 10.8359 l
46.1806 10.8359 l
46.1806 18.5087 l
47.2705 18.5087 l
47.2705 20.3281 l
46.1806 20.3281 l
46.1806 23.0000 l
43.7636 23.0000 l
43.7636 20.3281 l
39.4482 20.3281 l
h
40.3007 18.5087 m
43.7636 18.5087 l
43.7636 13.8066 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 357.000 m
49.0000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 218.000 m
49.0000 218.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
52.0000 80.0000 m
49.0000 80.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 774 551 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument

gcln
grestore
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /TimesNewRomanPSMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 46 /period putdup 48 /zero putdup 49 /one putdup 51 /three putdup 56 /eight putdup 61 /equal putdup 67 /C putdup 68 /D putdup 77 /M putdup 81 /Q putdup 115 /s putdup 122 /z putdup 177 /plusminus putdef/FontBBox {-568 -307 2028 1007} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings17 dict dup begin/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72EFEDBB222483BD74F8B> |-/space <1C60D8A8C9B8707C25> |-/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9AE12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA049D36B9B13B7F6C8AA7A4A5EB0> |-/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B540A016D558248DC4A3E8183F5F> |-/period <1C60D8A8C9B8707CC95A9B5DFDE3A4AF8C8BB7D0C82C30C322ED94985BC6C2F162CD480F8280AD954FE8DC511B40B423DB4A6012D9C419E4DF4F375C6ADD098717CA70F621> |-/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FBCD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C58344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE23402242D396440157FC51> |-/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F589D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C02720FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF41DB28C0847307B8DCBC66> |-/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FEB71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA143A> |-/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A707AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD899980F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E6229D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A1017022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995AEDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-/equal <1C60D8A8C9B7E7C1C5666C28B48CD4A694178AF152D7001F5F174D4D8F120B3533D4> |-/C <1C60D8A8C9B64EDFFBA6F0CF8A2CDA79A069460245F5373797A9E71DEA345031885496623E7C65FDB470FC6BFF7BE37B20FF363C43CAB08BA8E918FCBA9DEB0021B12355971EB2945D0594E78D2EE4D593C49790304E106026BC942097158DDBF12F8B83C9752B02212C28957008FA70A685356583CB4C7D6F55B12AC7399ECFE4B69C91B472A6132E65C9F7B697AE783582C9D65C392064A7C49C83B283409DD22AD16B7DD28B54D5FC454C> |-/D <1C60D8A8C9B6079F62679EB6BE171B70F78590F81AB62F69F1BD2EFC86EAE566847745E296D0CF61872DA4D8690C62AB23EE8E1DEB0EAD4BD93A2494CA759A81248BAF55E0D2E2E5FE71261287BF00F8CDF501793AB3272F80F7AE3E407CA730AC3648B3AC2D58C8D1FD60CD7DB1F886A79A4080D8870256B6E127906D500379950803F077453028FB6169> |-/M <1C60D8A8C9B59F85E8A8526E50FEB33438675EDBBD0866093A4555E3EA3A35849B91EFFB88205281CC77395AC14DF328B50F1F179210F0307F50BFB242AA7F76F18203303EF0BF46B76E61FB539D568EF9F434EC657F4C5CDE1BCAA90A83BAFEB02869664DC06CC8CA4FA1E876C39F3F5371AD261F117CDAF8F6A4E96ECA4F5088752E105CDEB8FBEB2F7F82D31A2FEB6DF3C053295A006D723DEE7CEF30A9F16E8C6EE80DDA09053247> |-/Q <1C60D8A8C9B6079F6D7583831D9562C0AD6535EC7DF517755B83E84092151DEE635E9F4E30665D8BD2E476E0D924417550F2D505E0950A8DB0FA68AEA39175E1A9B43B74D4538ACBFCB981AA46C8B17824DDD492EB8F9358092E8A45F62487D9F6A2411B8ACC9C3165871354CC072699059F64CDBB40337ED181B3716719835516EDAB4F383B2E97071536268A4E8CF687FABE6441D9F78A79FB453D02437C897E7CB2E4C933DF96091B9957DE0592137837CA6116106CEA88D7> |-/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22ACE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A039A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FAAB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-/z <1C60D8A8C9B77FE2C18484DB453227C527C164B5A1471C4657A5A14A46A1D3A0BD899640627BE2A7B9DB921E26CD53975830B919737E4B957FDCE605D77DC327B798A39B69F36340D55162C5C44140DACBE16FE7873A74F99AB90B7497> |-/plusminus <1C60D8A8C9B79676FB1F1C3483630A3E746B8D92259F8E9B8C36D901B78257C6EC5CBED7BFBCAAD6F9FE91B7B7741966EAEA858767D1> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RXXLSV+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut/RXXLSV+TimesNewRomanPSMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /.notdef /three 4{/.notdef}rp /eight 4{/.notdef}rp /equal 5{/.notdef}rp /C /D 8{/.notdef}rp /M 3{/.notdef}rp /Q 33{/.notdef}rp /s 6{/.notdef}rp /z 54{/.notdef}rp /plusminus 78{/.notdef}rp]RXXLSV+TimesNewRomanPSMT nfRXXLSV+TimesNewRomanPSMT*1 [21 0 0 -21 0 0 ]msf140.428 309.053 mo(QCD )sh%ADOBeginSubsetFont: Symbol Initial
%ADOt1write: (1.0.24)13 dict dup begin/FontType 1 def/FontName /Symbol def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def/Weight (Medium) def/ItalicAngle 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 97 /alpha putdef/UniqueID 42996 def/FontBBox {-180 -293 1090 1010} defendsystemdict begindup /Private9 dict dup begin/|- {def} def/| {put} def/BlueValues [-19 0 673 688 487 500] def/StdHW [92] def/StdVW [85] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/alpha <1C60D8A8C9B66A6BE9503BC9DC2F97A90DC6A5D9C5664F26CDC372580CEFBC51674110C5328A3D035253D5C1EA628F7ECC29A5858440C05B4748CDAB3CAB1E693FFBB565B2DFB7C0189E764B1A468D6F21B889072F5797A854620016C9E0EBAF56981994ECB2F286F4C74A80065A7BF972BC77C35E32312A4D897739C79383DD918112B97E08E16605C6E2E4B2B48A50654B45F886C23C1238FE3F7AE92558F8B81B7246367D289E7E0C4B3D8587DC78849B206BB8F131CF06AE19F212E00D06A619806FF5FF8B31E18151B42C65FDD375165BD852B1A4167277362C76DAC201B1E6DD97157A5954CDC180718888597D794325FF58E588F5801970BE13DA97DAF0B6C6D2A8> |-/.notdef <1C60D8A8C9B8707C25> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RXXLSW+Symbol /Symbol findfont ct_VMDictPut/RXXLSW+Symbol*1 [97{/.notdef}rp /alpha 158{/.notdef}rp]RXXLSW+Symbol nfRXXLSW+Symbol*1 [21 0 0 -21 0 0 ]msf190.016 309.053 mo(a)shRXXLSV+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf203.267 313.053 mo(s)shRXXLSV+TimesNewRomanPSMT*1 [21 0 0 -21 0 0 ]msf210.271 309.053 mo(\(M)[6.99316 0 ]xshRXXLSV+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf235.937 313.053 mo(z)shRXXLSV+TimesNewRomanPSMT*1 [21 0 0 -21 0 0 ]msf243.926 309.053 mo(\) =)sh268.012 309.053 mo( 0.1)sh298.732 309.053 mo(181 \261 0.0013)sh.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
106.934 299.053 mo
127.934 299.053 li
@
106.934 302.053 mo
127.934 302.053 li
@
106.934 305.053 mo
127.934 305.053 li
@
552.575 7.05322 mo
564.742 7.05322 li
564.742 340.22 li
552.575 340.22 li
0 0 0 0 cmyk
f
554.684 358.47 mo
70.8223 358.47 li
70.8223 321.97 li
554.684 321.593 li
554.684 358.47 li
cp
f
552.575 20.8794 mo
63.5742 22.0532 li
63.5742 6.55322 li
552.575 7.05322 li
552.575 20.8794 li
cp
f
72.6753 344.97 mo
30.7671 344.97 li
30.7671 2.30322 li
72.6753 2.30322 li
72.6753 344.97 li
cp
f
1.00001 lw
11.5 ml
507.022 298.667 mo
512.239 298.667 li
506.841 288.384 mo
512.058 288.384 li
509.443 298.667 mo
509.443 288.333 li
.976471 .952941 0 0 cmyk
@
509.522 296.881 mo
508.397 294.385 li
508.397 294.385 li
507.272 291.887 li
507.272 291.887 li
509.522 291.887 li
509.522 291.887 li
511.772 291.887 li
511.772 291.887 li
510.647 294.385 li
510.647 294.385 li
509.522 296.881 li
509.522 296.881 li
cp
0 0 0 0 cmyk
f
509.522 296.881 mo
508.397 294.385 li
508.397 294.385 li
507.272 291.887 li
507.272 291.887 li
509.522 291.887 li
509.522 291.887 li
511.772 291.887 li
511.772 291.887 li
510.647 294.385 li
510.647 294.385 li
509.522 296.881 li
509.522 296.881 li
cp
.976471 .952941 0 0 cmyk
@
486.022 293.667 mo
491.239 293.667 li
485.841 286.384 mo
491.058 286.384 li
488.443 293.667 mo
488.443 286.333 li
@
488.522 292.881 mo
487.397 290.385 li
487.397 290.385 li
486.272 287.887 li
486.272 287.887 li
488.522 287.887 li
488.522 287.887 li
490.772 287.887 li
490.772 287.887 li
489.647 290.385 li
489.647 290.385 li
488.522 292.881 li
488.522 292.881 li
cp
0 0 0 0 cmyk
f
488.522 292.881 mo
487.397 290.385 li
487.397 290.385 li
486.272 287.887 li
486.272 287.887 li
488.522 287.887 li
488.522 287.887 li
490.772 287.887 li
490.772 287.887 li
489.647 290.385 li
489.647 290.385 li
488.522 292.881 li
488.522 292.881 li
cp
.976471 .952941 0 0 cmyk
@
466.022 292.667 mo
471.239 292.667 li
465.841 285.384 mo
471.058 285.384 li
468.443 292.667 mo
468.443 285.333 li
@
468.522 291.881 mo
467.397 289.385 li
467.397 289.385 li
466.272 286.887 li
466.272 286.887 li
468.522 286.887 li
468.522 286.887 li
470.772 286.887 li
470.772 286.887 li
469.647 289.385 li
469.647 289.385 li
468.522 291.881 li
468.522 291.881 li
cp
0 0 0 0 cmyk
f
468.522 291.881 mo
467.397 289.385 li
467.397 289.385 li
466.272 286.887 li
466.272 286.887 li
468.522 286.887 li
468.522 286.887 li
470.772 286.887 li
470.772 286.887 li
469.647 289.385 li
469.647 289.385 li
468.522 291.881 li
468.522 291.881 li
cp
.976471 .952941 0 0 cmyk
@
440.022 286.667 mo
445.239 286.667 li
439.841 279.384 mo
445.058 279.384 li
442.443 286.667 mo
442.443 279.333 li
@
442.522 285.881 mo
441.397 283.385 li
441.397 283.385 li
440.272 280.887 li
440.272 280.887 li
442.522 280.887 li
442.522 280.887 li
444.772 280.887 li
444.772 280.887 li
443.647 283.385 li
443.647 283.385 li
442.522 285.881 li
442.522 285.881 li
cp
0 0 0 0 cmyk
f
442.522 285.881 mo
441.397 283.385 li
441.397 283.385 li
440.272 280.887 li
440.272 280.887 li
442.522 280.887 li
442.522 280.887 li
444.772 280.887 li
444.772 280.887 li
443.647 283.385 li
443.647 283.385 li
442.522 285.881 li
442.522 285.881 li
cp
.976471 .952941 0 0 cmyk
@
414.022 282.667 mo
419.239 282.667 li
413.841 274.384 mo
419.058 274.384 li
416.443 282.667 mo
416.443 274.333 li
@
416.522 281.881 mo
415.397 279.385 li
415.397 279.385 li
414.272 276.887 li
414.272 276.887 li
416.522 276.887 li
416.522 276.887 li
418.772 276.887 li
418.772 276.887 li
417.647 279.385 li
417.647 279.385 li
416.522 281.881 li
416.522 281.881 li
cp
0 0 0 0 cmyk
f
416.522 281.881 mo
415.397 279.385 li
415.397 279.385 li
414.272 276.887 li
414.272 276.887 li
416.522 276.887 li
416.522 276.887 li
418.772 276.887 li
418.772 276.887 li
417.647 279.385 li
417.647 279.385 li
416.522 281.881 li
416.522 281.881 li
cp
.976471 .952941 0 0 cmyk
@
375.022 275.667 mo
380.239 275.667 li
374.841 265.384 mo
380.058 265.384 li
377.443 275.667 mo
377.443 265.333 li
@
377.522 273.881 mo
376.397 271.385 li
376.397 271.385 li
375.272 268.887 li
375.272 268.887 li
377.522 268.887 li
377.522 268.887 li
379.772 268.887 li
379.772 268.887 li
378.647 271.385 li
378.647 271.385 li
377.522 273.881 li
377.522 273.881 li
cp
0 0 0 0 cmyk
f
377.522 273.881 mo
376.397 271.385 li
376.397 271.385 li
375.272 268.887 li
375.272 268.887 li
377.522 268.887 li
377.522 268.887 li
379.772 268.887 li
379.772 268.887 li
378.647 271.385 li
378.647 271.385 li
377.522 273.881 li
377.522 273.881 li
cp
.976471 .952941 0 0 cmyk
@
530.022 303.667 mo
535.239 303.667 li
529.841 293.384 mo
535.058 293.384 li
532.443 303.667 mo
532.443 293.333 li
@
532.522 301.881 mo
531.397 299.385 li
531.397 299.385 li
530.272 296.887 li
530.272 296.887 li
532.522 296.887 li
532.522 296.887 li
534.772 296.887 li
534.772 296.887 li
533.647 299.385 li
533.647 299.385 li
532.522 301.881 li
532.522 301.881 li
cp
0 0 0 0 cmyk
f
532.522 301.881 mo
531.397 299.385 li
531.397 299.385 li
530.272 296.887 li
530.272 296.887 li
532.522 296.887 li
532.522 296.887 li
534.772 296.887 li
534.772 296.887 li
533.647 299.385 li
533.647 299.385 li
532.522 301.881 li
532.522 301.881 li
cp
.976471 .952941 0 0 cmyk
@
519.022 299.667 mo
524.239 299.667 li
518.841 290.384 mo
524.058 290.384 li
521.443 299.667 mo
521.443 290.333 li
@
521.522 297.881 mo
520.397 295.385 li
520.397 295.385 li
519.272 292.887 li
519.272 292.887 li
521.522 292.887 li
521.522 292.887 li
523.772 292.887 li
523.772 292.887 li
522.647 295.385 li
522.647 295.385 li
521.522 297.881 li
521.522 297.881 li
cp
0 0 0 0 cmyk
f
521.522 297.881 mo
520.397 295.385 li
520.397 295.385 li
519.272 292.887 li
519.272 292.887 li
521.522 292.887 li
521.522 292.887 li
523.772 292.887 li
523.772 292.887 li
522.647 295.385 li
522.647 295.385 li
521.522 297.881 li
521.522 297.881 li
cp
.976471 .952941 0 0 cmyk
@
490.022 294.667 mo
495.239 294.667 li
489.841 287.384 mo
495.058 287.384 li
492.443 294.667 mo
492.443 287.333 li
@
492.522 294.881 mo
491.397 292.385 li
491.397 292.385 li
490.272 289.887 li
490.272 289.887 li
492.522 289.887 li
492.522 289.887 li
494.772 289.887 li
494.772 289.887 li
493.647 292.385 li
493.647 292.385 li
492.522 294.881 li
492.522 294.881 li
cp
0 0 0 0 cmyk
f
492.522 294.881 mo
491.397 292.385 li
491.397 292.385 li
490.272 289.887 li
490.272 289.887 li
492.522 289.887 li
492.522 289.887 li
494.772 289.887 li
494.772 289.887 li
493.647 292.385 li
493.647 292.385 li
492.522 294.881 li
492.522 294.881 li
cp
.976471 .952941 0 0 cmyk
@
473.022 293.667 mo
478.239 293.667 li
472.841 286.384 mo
478.058 286.384 li
475.443 293.667 mo
475.443 286.333 li
@
475.522 293.881 mo
474.397 291.385 li
474.397 291.385 li
473.272 288.887 li
473.272 288.887 li
475.522 288.887 li
475.522 288.887 li
477.772 288.887 li
477.772 288.887 li
476.647 291.385 li
476.647 291.385 li
475.522 293.881 li
475.522 293.881 li
cp
0 0 0 0 cmyk
f
475.522 293.881 mo
474.397 291.385 li
474.397 291.385 li
473.272 288.887 li
473.272 288.887 li
475.522 288.887 li
475.522 288.887 li
477.772 288.887 li
477.772 288.887 li
476.647 291.385 li
476.647 291.385 li
475.522 293.881 li
475.522 293.881 li
cp
.976471 .952941 0 0 cmyk
@
461.022 292.667 mo
466.239 292.667 li
460.841 283.384 mo
466.058 283.384 li
463.443 291.667 mo
463.443 283.333 li
@
463.522 291.881 mo
462.397 289.385 li
462.397 289.385 li
461.272 286.887 li
461.272 286.887 li
463.522 286.887 li
463.522 286.887 li
465.772 286.887 li
465.772 286.887 li
464.647 289.385 li
464.647 289.385 li
463.522 291.881 li
463.522 291.881 li
cp
0 0 0 0 cmyk
f
463.522 291.881 mo
462.397 289.385 li
462.397 289.385 li
461.272 286.887 li
461.272 286.887 li
463.522 286.887 li
463.522 286.887 li
465.772 286.887 li
465.772 286.887 li
464.647 289.385 li
464.647 289.385 li
463.522 291.881 li
463.522 291.881 li
cp
.976471 .952941 0 0 cmyk
@
453.022 292.667 mo
458.239 292.667 li
452.841 283.384 mo
458.058 283.384 li
455.443 291.667 mo
455.443 283.333 li
@
455.522 291.881 mo
454.397 289.385 li
454.397 289.385 li
453.272 286.887 li
453.272 286.887 li
455.522 286.887 li
455.522 286.887 li
457.772 286.887 li
457.772 286.887 li
456.647 289.385 li
456.647 289.385 li
455.522 291.881 li
455.522 291.881 li
cp
0 0 0 0 cmyk
f
455.522 291.881 mo
454.397 289.385 li
454.397 289.385 li
453.272 286.887 li
453.272 286.887 li
455.522 286.887 li
455.522 286.887 li
457.772 286.887 li
457.772 286.887 li
456.647 289.385 li
456.647 289.385 li
455.522 291.881 li
455.522 291.881 li
cp
.976471 .952941 0 0 cmyk
@
442.022 285.667 mo
447.239 285.667 li
441.841 275.384 mo
447.058 275.384 li
444.443 285.667 mo
444.443 275.333 li
@
444.522 283.881 mo
443.397 281.385 li
443.397 281.385 li
442.272 278.887 li
442.272 278.887 li
444.522 278.887 li
444.522 278.887 li
446.772 278.887 li
446.772 278.887 li
445.647 281.385 li
445.647 281.385 li
444.522 283.881 li
444.522 283.881 li
cp
0 0 0 0 cmyk
f
444.522 283.881 mo
443.397 281.385 li
443.397 281.385 li
442.272 278.887 li
442.272 278.887 li
444.522 278.887 li
444.522 278.887 li
446.772 278.887 li
446.772 278.887 li
445.647 281.385 li
445.647 281.385 li
444.522 283.881 li
444.522 283.881 li
cp
.976471 .952941 0 0 cmyk
@
322.128 269.386 mo
327.345 269.386 li
321.946 253.678 mo
327.163 253.678 li
324.549 269.053 mo
324.549 253.636 li
.945098 .827451 0 0 cmyk
@
324.628 263.282 mo
323.503 261.032 li
323.503 261.032 li
322.378 258.782 li
322.378 258.782 li
324.628 258.782 li
324.628 258.782 li
326.878 258.782 li
326.878 258.782 li
325.753 261.032 li
325.753 261.032 li
324.628 263.282 li
324.628 263.282 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
324.628 263.282 mo
323.503 261.032 li
323.503 261.032 li
322.378 258.782 li
322.378 258.782 li
324.628 258.782 li
324.628 258.782 li
326.878 258.782 li
326.878 258.782 li
325.753 261.032 li
325.753 261.032 li
324.628 263.282 li
324.628 263.282 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
324.628 263.282 mo
323.503 262.032 li
323.503 261.032 li
322.378 258.782 li
322.378 258.782 li
324.628 258.782 li
324.628 258.782 li
326.878 258.782 li
326.878 258.782 li
325.753 261.032 li
325.753 261.032 li
324.628 263.282 li
324.628 263.282 li
cp
@
330.878 269.386 mo
336.095 269.386 li
330.651 258.491 mo
335.868 258.491 li
333.299 269.719 mo
333.299 258.889 li
@
333.378 266.282 mo
332.253 264.032 li
332.253 264.032 li
331.128 261.782 li
331.128 261.782 li
333.378 261.782 li
333.378 261.782 li
335.628 261.782 li
335.628 261.782 li
334.503 264.032 li
334.503 264.032 li
333.378 266.282 li
333.378 266.282 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
333.378 266.282 mo
332.253 264.032 li
332.253 264.032 li
331.128 261.782 li
331.128 261.782 li
333.378 261.782 li
333.378 261.782 li
335.628 261.782 li
335.628 261.782 li
334.503 264.032 li
334.503 264.032 li
333.378 266.282 li
333.378 266.282 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
333.378 266.282 mo
332.253 265.032 li
332.253 264.032 li
331.128 261.782 li
331.128 261.782 li
333.378 261.782 li
333.378 261.782 li
335.628 261.782 li
335.628 261.782 li
334.503 264.032 li
334.503 264.032 li
333.378 266.282 li
333.378 266.282 li
cp
@
340.136 270.246 mo
345.353 270.246 li
339.954 259.538 mo
345.171 259.538 li
342.557 270.563 mo
342.557 259.563 li
@
342.636 268.141 mo
341.511 266.891 li
341.511 265.891 li
340.386 263.641 li
340.386 263.641 li
342.636 263.641 li
342.636 263.641 li
344.886 263.641 li
344.886 263.641 li
343.761 265.891 li
343.761 265.891 li
342.636 268.141 li
342.636 268.141 li
cp
@
342.636 268.141 mo
341.511 265.891 li
341.511 265.891 li
340.386 263.641 li
340.386 263.641 li
342.636 263.641 li
342.636 263.641 li
344.886 263.641 li
344.886 263.641 li
343.761 265.891 li
343.761 265.891 li
342.636 268.141 li
342.636 268.141 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
342.636 268.141 mo
341.511 265.891 li
341.511 265.891 li
340.386 263.641 li
340.386 263.641 li
342.636 263.641 li
342.636 263.641 li
344.886 263.641 li
344.886 263.641 li
343.761 265.891 li
343.761 265.891 li
342.636 268.141 li
342.636 268.141 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
347.461 273.052 mo
352.678 273.052 li
347.279 262.344 mo
352.496 262.344 li
349.882 272.411 mo
350.097 262.078 li
@
349.961 270.948 mo
348.836 268.698 li
348.836 268.698 li
347.711 266.448 li
347.711 266.448 li
349.961 266.448 li
349.961 266.448 li
352.211 266.448 li
352.211 266.448 li
351.086 268.698 li
351.086 268.698 li
349.961 270.948 li
349.961 270.948 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
349.961 270.948 mo
348.836 268.698 li
348.836 268.698 li
347.711 266.448 li
347.711 266.448 li
349.961 266.448 li
349.961 266.448 li
352.211 266.448 li
352.211 266.448 li
351.086 268.698 li
351.086 268.698 li
349.961 270.948 li
349.961 270.948 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
349.961 270.948 mo
348.836 269.698 li
348.836 268.698 li
347.711 266.448 li
347.711 266.448 li
349.961 266.448 li
349.961 266.448 li
352.211 266.448 li
352.211 266.448 li
351.086 268.698 li
351.086 268.698 li
349.961 270.948 li
349.961 270.948 li
cp
@
355.628 273.886 mo
360.845 273.886 li
355.446 265.178 mo
360.663 265.178 li
358.263 273.582 mo
358.263 265.249 li
@
358.128 271.782 mo
357.003 269.532 li
357.003 269.532 li
355.878 267.282 li
355.878 267.282 li
358.128 267.282 li
358.128 267.282 li
360.378 267.282 li
360.378 267.282 li
359.253 269.532 li
359.253 269.532 li
358.128 271.782 li
358.128 271.782 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
358.128 271.782 mo
357.003 269.532 li
357.003 269.532 li
355.878 267.282 li
355.878 267.282 li
358.128 267.282 li
358.128 267.282 li
360.378 267.282 li
360.378 267.282 li
359.253 269.532 li
359.253 269.532 li
358.128 271.782 li
358.128 271.782 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
358.128 271.782 mo
357.003 269.532 li
357.003 269.532 li
355.878 267.282 li
355.878 267.282 li
358.128 267.282 li
358.128 267.282 li
360.378 267.282 li
360.378 267.282 li
359.253 269.532 li
359.253 269.532 li
358.128 271.782 li
358.128 271.782 li
cp
@
362.304 274.936 mo
367.521 274.936 li
362.122 266.228 mo
367.339 266.228 li
364.938 274.631 mo
364.938 266.298 li
@
364.804 272.832 mo
363.679 270.582 li
363.679 270.582 li
362.554 268.332 li
362.554 268.332 li
364.804 268.332 li
364.804 268.332 li
367.054 268.332 li
367.054 268.332 li
365.929 270.582 li
365.929 270.582 li
364.804 272.832 li
364.804 272.832 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
364.804 272.832 mo
363.679 270.582 li
363.679 270.582 li
362.554 268.332 li
362.554 268.332 li
364.804 268.332 li
364.804 268.332 li
367.054 268.332 li
367.054 268.332 li
365.929 270.582 li
365.929 270.582 li
364.804 272.832 li
364.804 272.832 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
364.804 272.832 mo
363.679 270.582 li
363.679 270.582 li
362.554 268.332 li
362.554 268.332 li
364.804 268.332 li
364.804 268.332 li
367.054 268.332 li
367.054 268.332 li
365.929 270.582 li
365.929 270.582 li
364.804 272.832 li
364.804 272.832 li
cp
@
368.962 276.553 mo
374.179 276.553 li
368.78 267.845 mo
373.997 267.845 li
371.597 276.249 mo
371.597 267.916 li
@
371.462 274.449 mo
370.337 272.199 li
370.337 272.199 li
369.212 269.949 li
369.212 269.949 li
371.462 269.949 li
371.462 269.949 li
373.712 269.949 li
373.712 269.949 li
372.587 272.199 li
372.587 272.199 li
371.462 274.449 li
371.462 274.449 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
371.462 274.449 mo
370.337 272.199 li
370.337 272.199 li
369.212 269.949 li
369.212 269.949 li
371.462 269.949 li
371.462 269.949 li
373.712 269.949 li
373.712 269.949 li
372.587 272.199 li
372.587 272.199 li
371.462 274.449 li
371.462 274.449 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
371.462 274.449 mo
370.337 272.199 li
370.337 272.199 li
369.212 269.949 li
369.212 269.949 li
371.462 269.949 li
371.462 269.949 li
373.712 269.949 li
373.712 269.949 li
372.587 272.199 li
372.587 272.199 li
371.462 274.449 li
371.462 274.449 li
cp
@
373.434 276.783 mo
378.65 276.783 li
373.252 269.075 mo
378.469 269.075 li
376.068 276.478 mo
376.068 269.145 li
@
375.934 275.678 mo
374.809 273.428 li
374.809 273.428 li
373.684 271.178 li
373.684 271.178 li
375.934 271.178 li
375.934 271.178 li
378.184 271.178 li
378.184 271.178 li
377.059 273.428 li
377.059 273.428 li
375.934 275.678 li
375.934 275.678 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
375.934 275.678 mo
374.809 273.428 li
374.809 273.428 li
373.684 271.178 li
373.684 271.178 li
375.934 271.178 li
375.934 271.178 li
378.184 271.178 li
378.184 271.178 li
377.059 273.428 li
377.059 273.428 li
375.934 275.678 li
375.934 275.678 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
375.934 275.678 mo
374.809 273.428 li
374.809 273.428 li
373.684 271.178 li
373.684 271.178 li
375.934 271.178 li
375.934 271.178 li
378.184 271.178 li
378.184 271.178 li
377.059 273.428 li
377.059 273.428 li
375.934 275.678 li
375.934 275.678 li
cp
@
354.144 271.016 mo
359.36 271.016 li
353.962 260.8 mo
359.179 260.8 li
356.564 271.016 mo
356.564 260.766 li
.976471 .952941 0 0 cmyk
@
356.644 269.107 mo
355.519 266.936 li
355.519 266.936 li
354.394 264.765 li
354.394 264.765 li
356.644 264.765 li
356.644 264.765 li
358.894 264.765 li
358.894 264.765 li
357.769 266.936 li
357.769 266.936 li
356.644 269.107 li
356.644 269.107 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
356.644 269.107 mo
355.519 266.936 li
355.519 266.936 li
354.394 264.765 li
354.394 264.765 li
356.644 264.765 li
356.644 264.765 li
358.894 264.765 li
358.894 264.765 li
357.769 266.936 li
357.769 266.936 li
356.644 269.107 li
356.644 269.107 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
356.644 269.107 mo
355.519 266.936 li
355.519 266.936 li
354.394 264.765 li
354.394 264.765 li
356.644 264.765 li
356.644 264.765 li
358.894 264.765 li
358.894 264.765 li
357.769 266.936 li
357.769 266.936 li
356.644 269.107 li
356.644 269.107 li
cp
@
.9414 .7617 0 0 cmyk
%ADOBeginSubsetFont: Times-Roman Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Roman def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 62 /greater putdup 101 /e putdup 106 /j putdup 112 /p putdup 115 /s putdup 116 /t putdup 208 /endash putdef/FontBBox {-203 -428 1700 1271} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings9 dict dup begin/.notdef <1C60D8A8C9B6079F6CEA24BDEB0F5E4D18DF0CD7E2A11E9D72D963E3987D5E4E6C9FCD> |-/space <1C60D8A8C9B8707C25> |-/greater <1C60D8A8C9B7E7C1A0F09A5AACA53DC1F57DAC292220AFA820F3F2132339337C8797AE98> |-/e <1C60D8A8C9B77FE2CE67108D1280ADC9682165E381A1DB7E740A05B18E65167A034DB250F6D5492B270110B05E60263A42B2C42DDF9AB2E4A276D8ABFFBD6680C39C89C62CEAE031CFF89EF16FD9FC76CF19CB9F9E34BA9AA837F4D55163017EBBAC9FCE57F666560D76840A1E9FB941AF2DF15742DAEB79EA2886404B2375DA19EFBEAC2017EDAD03B37508> |-/j <1C60D8A8C9B854D0F4318DDDE14D8864CEE5F1B93F7E5E0DD899A62B6E7D037EA34803024A344526BC98303A7A7B3923E2C877CEC46D1EF2BE3AEF7DDB0FB664295F5CB9B1BAD65C39285A328A1CD1D26B4BE92BAFE3188695C19F95D07617AFFCB1397DBD5802C97EE7FB79C026E1BDD74A5F83B65785D331FCCE6C74538D08BC4C608233D45F618D6866CE4E0EC28093EB918FE94682B26A8440EEB5D5D4C6F9574795C47EB7026AC188154C4F5F264E27E9C7D82AD9B338C0D393483C38880CE0D1947B96533CEBB4A1C9C8B4D279956BD2CCA747883C18> |-/p <1C60D8A8C9B7A73DB91641F6BA5486CB0712FFF8C326A20926BA28A071CD0FFCD4BDCDE0C44AA39367FAC8C71A39B0507E6FBE92EF479F1F2157486F55AAE915EDBBFC8AB4F6ABE34EECC784D333D526F3EA5559C73D1624B2F3DCE5E44F60A831A8E502DF5DA28E74DD48A45198849C8DE213E2FE4E0A1787AE987D40470D9B397703069AE4CF0F4FA65EF586834864FB9B5616439B96E2FDF7EE91EBD164132EB5760D047D5E96F3A228E48459DCF4120D33BB6B48C8A10CD605E653E229921D2C4C571224A04CF9D3CB95F244ED16B0C299C503EB8F189CFABBE5056C928EB45A907FB0C0> |-/s <1C60D8A8C9B7361F4A471763AC73DF2CB4D0E822A2CECA1AE242CCF137FE2017E1B84759A659774165B7FAAFC754E62F16566CD871C047B4DA1FAE5370C0C235D54992A5E0FA7700C9EE743A2D940E9CA5D26B3831BD83BB30176B0537C44AA3FF8FCDF5B3ABFEF1C2B6D9ACB1822B29C0F334D4D83CA74FAA5037DE49F23F9CF057A26EA493317530A59C4D60B62C344BD8DC7AA9CDF22723A4837ACF83C7D482D9B0FF4236D5FDED500C27A8FA9429CB11EFEE5641EF6FB1753C2B2C35F423576031D731309BB9AC2BE1068E6CE69B054A642C61> |-/t <1C60D8A8C9B854D0F41C7D11C14207BE1C0BA04724483030493967288AC8D5095C0BB34E8B56A5C53BD1B7A25A11F231F6182B9300CAF4CFD46C1EFFF4B0E38766187499A1973473DBAE4D98649DB8F7DCCE25964559B9BA93E6803E419984755899DE68C87EC2F530AC81AF61BCF42839E59E8A14B5E2DDDE3A4AFB0D7D86FA4DD21DF5669B371465EBE7C64497A6C50C0C5658D7> |-/endash <1C60D8A8C9B7A73DC7986179CDDDD3224C5C371938> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RXXLSX+Times-Roman /Times-Roman findfont ct_VMDictPut/RXXLSX+Times-Roman*1 [32{/.notdef}rp /space 29{/.notdef}rp /greater 38{/.notdef}rp /e 4{/.notdef}rp /j 5{/.notdef}rp /p 2{/.notdef}rp /s /t 91{/.notdef}rp /endash 47{/.notdef}rp]RXXLSX+Times-Roman nfRXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf294.054 141.684 mo(pp \320> jets)sh.027451 .992157 .811765 .58 cmyk
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginRXXLSX+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B81F2C7477F0B9BCB3EBA4BD58438260E6F0349575D982C091745F57E6DE656DBD360F903D8BB7BA1F42E7A2D05B5102174895284A8AFE5BF20A5DC15D43366CD93FB67607779C4A32BA> |-/parenright <1C60D8A8C9B81F2C3A0B9AE48BDC8A210A6BC24B132D0FFA37976CAF0AD48341BA40F2639F857493B96FE8C9C6A5DBA67902E1141CAD31E1E1F2EAFA78B4F0B158589755ABC3F5D48640211E0BE78E8AD3F692526A7797DC309ED92AB9> |-/period <1C60D8A8C9B8707CDCE5666C9B3EABE1C8F3B5685DC89284E5BE559D084487449BF37D1D86EF1322476306E241C4EF3BA9B7322496F4AC15DB69BEC6340D464440EA95046229> |-/L <1C60D8A8C9B7D8BE774DE3C8F40E1AA4E0EA492D695ADC1AF5FC18BF9AEDD1AAA67A2604F86B73A9130F9F04CB3DF5FA8CC5D9C5A66F064E33FCD627F57E26E48E2648FA7426EDC628E5C0EA69D929CBC6D7A9F17EB322C7898431878D9C967EA3BE2339C72C10B1FF6A8DFC4BD071758E3AFFA098B0> |-/N <1C60D8A8C9B6079F00B34305686088D44D74547591313A03B26B707AC54B1D09AB13EFEABA08D80C11507964CB1554D14B08A9189CE9ED096F012BFCF7F07CFEA740977B0B504188F63E7A0F7FDEE27A38EAEC53F9C6B73106914DDDC10AC60308AB97B43DE4AE2966E725455C176948F6B21A97B955C410D70E99418E90> |-/O <1C60D8A8C9B6079F628905BB6C928BCAE88FE9DF93F8FC59FCA6290421979DF9E1DE9D7E6FFE4C4A9EA7DAE58AF2F9EFEF675BD0F688E96217A2849FBF1B415B05B14FB4CBB1B4250EB6A6A2C446497B144043EBC1B5AC19C767ED328AE55D0DBD0AE65D3FBD00AE9FC9F2D7FD3D64193CBE763B37F9D54150699AD63ABBB00C611BFE9368EF> |-/c <1C60D8A8C9B77FE2CE939B120B8C530BA36A1D378ED7528AD7B7A10AC71BEF208D8B385B11077F2A13A81C13DFBF440D42A243A800735CB8F4DC3746EB4039E43E77D867A7AA457E639AE6CCAFB17D4572C0E8FCF8662A95CB9A94DBFA339E8C89716E4D6EB7EE669FEA0FD73F1B364D57426E512088C7E414CE09DC0040B747838B6828750C7FA69A58B3FBD05411AA3233E35DCBE1E5C8A3302EE901E300C17D> |-/f <1C60D8A8C9B81F2C5200FF77F5CC74A969F74B97E3CB0139862AF77A9D0ACBF3A9D6D9D7DFD3746D263F91E033F5CA0320628020691D4C3124BFE6A21E6C83BCBE09CD5D12CC21985F4F5AFA1A376E8DE99902DF7BF2E77B55D090DC8BBC539FB00E70FEE139F0FC4E0E2A68FC9AB61AE1A0D629C6435B8A2E09E0E0D78B08DE40CDACCDB12252A395979017F0F46F00D30915E02E70A215B3DDCC> |-/i <1C60D8A8C9B854D0DE8FF03001C7DDCDF6D3A68A6B597D794E646C678EE584A1666CB56CA9FE75811CEA2087E2C341C7E1E2BD6147E5E1B64DFF133BC2DEFF475DA598F822B2BE3A9DBFD7105A3889BD250D9F71DE0C91B5EA539C526B6489E8D9E79757A61E2352A71C3AC0EEEBBBD4B096AC9707E6604D45F8B4EB690BCE5B5F037666EE3D29DC12074786C8164E88903799783957677A476A9FAD9CB291219231A21175873BB2> |-/n <1C60D8A8C9B7A73DD30B80525D5D675DA4D0977F59D93029CA5D14D1D6563E1C35EFF4A3EA44981DFE04749A107A1C9F060A076451BF62C02FE2E474DD187526384A6F42E0021FEFF54C8346ADE1D28DE56A36764BAF6B66BF7DB43854DD1D363EB418A371ED43BA933A460B2917DEA26BF87012AAF7B195AB0B8FD490EC07235D6699814C77751D4CEE45D35DBD8B1597438545A60B7623CE491483A014FEEE65ED4FEBDF80A721F21A9D4DE075A36D58250AE2AA345A9C5F7B6CB7C99BA896DCEAAA4342B927737814> |-/o <1C60D8A8C9B7A73DEA5F658431FF26DE1C3CCABA5A5AF56EE1798CA324BEFFED162986DEB20473198E3AAB17E1F76DC8A1DBB020158974052802A30905F0338BF503D35906BB108F3CEAC35FDF3D8BC51C5542899E6D21063EDA8732DC154AFBF51B7EEDDA621E256B5E3E8A8E86389A77366F5766B3A5B4DE72C37DBEBA04E9D5CF3B75> |-/r <1C60D8A8C9B81F2C5DE210A78B7176966966FB4A2E70036BAA4A8956D597954FF33C419645546BDDA5A1C075630C88C9E9E0B6B2EB6B2FC3FF0331B1902616E9791F7398738E2F17D5E54890C7A065EB2198D4708DA7213806F12669F67678CAD7B30B1926E6F30FE45B0DAB7BE403E568FB7F28C7F3631BA5B608F502310C8C5FF767FCF95E7EC0C2EC9F2F173FF41F0C7459D2154243B15CA53A73779F93E107279F803A71F8179756E718854D0BA7BCB1168643F72763D9FF> |-/w <1C60D8A8C9B6079F6DEF2CA269EEBDBC9AAB2442668195B42431599214D547AA583E7FABFBA4013EF6113808D8AEB051BCD8EE14E39F233E3ED5BD9E8C6B36E76E396816C02F0A086C26332DD5CBEAAB04F9DEFB108B050B809C366C6B15FBBA9D4BBB96BE1B4DE2BF878A083BEF7939DEB6F715DE6158810EA7FDCF6BFD8E558E7B426E61C36554884A643D3078229BF2F4C33BA2592109165966A49B657035A574CC85CC95C751D53847831D4985D8EB843D14D617F1E0ACF190AA23C254BD2AA408809871E26F8E47BA83075D4D70E9AEC173034E4F6B0374B1ECEEEA735DF074DED0C2940E2381CDBDDED7EDAE7B6B9C7394CDF409E2E0DF5451360AFA> |-systemdict /gcheck known {setglobal} if end {end} ifendRXXLSX+Times-Roman /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 46 /period putdup 76 /L putdup 78 /N putdup 79 /O putdup 99 /c putdup 102 /f putdup 105 /i putdup 110 /n putdup 111 /o putdup 114 /r putdup 119 /w putpop%ADOEndSubsetFont
/RXXLSX+Times-Roman*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 15{/.notdef}rp /greater 13{/.notdef}rp /L /.notdef /N /O 19{/.notdef}rp /c /.notdef /e /f 2{/.notdef}rp /i /j 3{/.notdef}rp /n /o /p /.notdef /r /s /t 2{/.notdef}rp /w 88{/.notdef}rp /endash 47{/.notdef}rp]RXXLSX+Times-Roman nfRXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf292.483 122.278 mo(e.w. precision fits )shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf424.952 122.278 mo(\(NNLO\))shRXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf473.159 122.278 mo( )sh.8711 .3633 .0625 0 cmyk
RXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf365.21 119.114 mo( )sh199.403 208.264 mo
205.403 208.264 li
202.403 191.151 mo
202.403 208.418 li
199.403 178.442 mo
205.403 178.442 li
202.403 189.904 mo
202.403 178.079 li
.7695 .2383 .9766 .1367 cmyk
@
202.403 189.331 mo
203.903 192.331 li
203.903 192.331 li
205.403 195.331 li
205.403 195.331 li
202.403 195.331 li
202.403 195.331 li
199.403 195.331 li
199.403 195.331 li
200.903 192.331 li
200.903 192.331 li
202.403 189.331 li
202.403 189.331 li
cp
0 0 0 0 cmyk
ef
326.051 278.173 mo
332.051 278.173 li
329.051 257.95 mo
329.051 278.391 li
326.051 241.503 mo
332.051 241.503 li
329.051 257.203 mo
329.051 241.492 li
202.403 189.331 mo
203.903 192.331 li
203.903 192.331 li
205.403 195.331 li
205.403 195.331 li
202.403 195.331 li
202.403 195.331 li
199.403 195.331 li
199.403 195.331 li
200.903 192.331 li
200.903 192.331 li
202.403 189.331 li
202.403 189.331 li
cp
.7695 .2383 .9766 .1367 cmyk
@
329.051 254.988 mo
330.551 257.988 li
330.551 257.988 li
332.051 260.988 li
332.051 260.988 li
329.051 260.988 li
329.051 260.988 li
326.051 260.988 li
326.051 260.988 li
327.551 257.988 li
327.551 257.988 li
329.051 254.988 li
329.051 254.988 li
cp
0 0 0 0 cmyk
ef
257.427 239.785 mo
263.426 239.785 li
260.427 234.959 mo
260.427 239.579 li
257.427 223.975 mo
263.426 223.975 li
260.427 231.962 mo
260.427 223.482 li
329.051 254.988 mo
330.551 257.988 li
330.551 257.988 li
332.051 260.988 li
332.051 260.988 li
329.051 260.988 li
329.051 260.988 li
326.051 260.988 li
326.051 260.988 li
327.551 257.988 li
327.551 257.988 li
329.051 254.988 li
329.051 254.988 li
cp
.7695 .2383 .9766 .1367 cmyk
@
260.427 229.212 mo
261.926 232.212 li
261.926 232.212 li
263.426 235.212 li
263.426 235.212 li
260.427 235.212 li
260.427 235.212 li
257.427 235.212 li
257.427 235.212 li
258.927 232.212 li
258.927 232.212 li
260.427 229.212 li
260.427 229.212 li
cp
0 0 0 0 cmyk
ef
277.783 246.628 mo
283.783 246.628 li
280.783 241.077 mo
280.783 246.47 li
277.783 232.883 mo
283.783 232.883 li
280.783 237.65 mo
280.783 232.523 li
260.427 229.212 mo
261.926 232.212 li
261.926 232.212 li
263.426 235.212 li
263.426 235.212 li
260.427 235.212 li
260.427 235.212 li
257.427 235.212 li
257.427 235.212 li
258.927 232.212 li
258.927 232.212 li
260.427 229.212 li
260.427 229.212 li
cp
.7695 .2383 .9766 .1367 cmyk
@
280.783 235.366 mo
282.283 238.366 li
282.283 238.366 li
283.783 241.366 li
283.783 241.366 li
280.783 241.366 li
280.783 241.366 li
277.783 241.366 li
277.783 241.366 li
279.283 238.366 li
279.283 238.366 li
280.783 235.366 li
280.783 235.366 li
cp
0 0 0 0 cmyk
ef
233.336 230.111 mo
239.336 230.111 li
236.336 218.738 mo
236.336 230.142 li
233.336 210.949 mo
239.336 210.949 li
236.336 217.491 mo
236.336 210.605 li
280.783 235.366 mo
282.283 238.366 li
282.283 238.366 li
283.783 241.366 li
283.783 241.366 li
280.783 241.366 li
280.783 241.366 li
277.783 241.366 li
277.783 241.366 li
279.283 238.366 li
279.283 238.366 li
280.783 235.366 li
280.783 235.366 li
cp
.7695 .2383 .9766 .1367 cmyk
@
236.336 216.643 mo
237.836 219.643 li
237.836 219.643 li
239.336 222.643 li
239.336 222.643 li
236.336 222.643 li
236.336 222.643 li
233.336 222.643 li
233.336 222.643 li
234.836 219.643 li
234.836 219.643 li
236.336 216.643 li
236.336 216.643 li
cp
0 0 0 0 cmyk
ef
296.708 255.744 mo
302.708 255.744 li
299.708 243.046 mo
299.708 256.113 li
296.708 236.423 mo
302.708 236.423 li
299.708 243.393 mo
299.455 236.025 li
236.336 216.643 mo
237.836 219.643 li
237.836 219.643 li
239.336 222.643 li
239.336 222.643 li
236.336 222.643 li
236.336 222.643 li
233.336 222.643 li
233.336 222.643 li
234.836 219.643 li
234.836 219.643 li
236.336 216.643 li
236.336 216.643 li
cp
.7695 .2383 .9766 .1367 cmyk
@
299.708 240.881 mo
301.208 243.881 li
301.208 243.881 li
302.708 246.881 li
302.708 246.881 li
299.708 246.881 li
299.708 246.881 li
296.708 246.881 li
296.708 246.881 li
298.208 243.881 li
298.208 243.881 li
299.708 240.881 li
299.708 240.881 li
cp
0 0 0 0 cmyk
ef
299.708 240.881 mo
301.208 243.881 li
301.208 243.881 li
302.708 246.881 li
302.708 246.881 li
299.708 246.881 li
299.708 246.881 li
296.708 246.881 li
296.708 246.881 li
298.208 243.881 li
298.208 243.881 li
299.708 240.881 li
299.708 240.881 li
cp
.7695 .2383 .9766 .1367 cmyk
@
352.73 261.549 mo
352.73 265.799 li
349.871 265.918 mo
355.09 265.918 li
349.621 257.529 mo
354.84 257.529 li
352.213 264.14 mo
352.246 257.253 li
0 .9492 .832 0 cmyk
@
354.98 261.57 mo
354.98 261.57 li
354.98 263.053 353.811 264.257 352.371 264.257 cv
350.932 264.257 349.763 263.053 349.763 261.57 cv
349.763 260.086 350.932 258.882 352.371 258.882 cv
353.811 258.882 354.98 260.086 354.98 261.57 cv
354.98 261.57 li
cp
0 0 0 0 cmyk
ef
354.417 263.593 mo
354.417 267.622 li
351.559 267.735 mo
356.775 267.735 li
351.309 259.783 mo
356.525 259.783 li
353.9 266.049 mo
353.934 259.522 li
354.98 261.57 mo
354.98 261.57 li
354.98 263.053 353.811 264.257 352.371 264.257 cv
350.932 264.257 349.763 263.053 349.763 261.57 cv
349.763 260.086 350.932 258.882 352.371 258.882 cv
353.811 258.882 354.98 260.086 354.98 261.57 cv
354.98 261.57 li
cp
0 .9492 .832 0 cmyk
@
356.667 263.614 mo
356.667 263.614 li
356.667 265.019 355.498 266.161 354.059 266.161 cv
352.617 266.161 351.45 265.019 351.45 263.614 cv
351.45 262.208 352.617 261.066 354.059 261.066 cv
355.498 261.066 356.667 262.208 356.667 263.614 cv
356.667 263.614 li
cp
0 0 0 0 cmyk
ef
356.667 263.614 mo
356.667 263.614 li
356.667 265.019 355.498 266.161 354.059 266.161 cv
352.617 266.161 351.45 265.019 351.45 263.614 cv
351.45 262.208 352.617 261.066 354.059 261.066 cv
355.498 261.066 356.667 262.208 356.667 263.614 cv
356.667 263.614 li
cp
0 .9492 .832 0 cmyk
@
66.0566 318.343 mo
67.0566 318.343 li
66.0566 28.2915 mo
67.0566 28.2915 li
66.0566 46.5591 mo
67.0566 46.5591 li
66.0566 10.5591 mo
70.0566 10.5591 li
66.0566 64.2915 mo
67.0566 64.2915 li
66.0566 83.6294 mo
67.0566 83.6294 li
66.0566 119.292 mo
67.0566 119.292 li
66.0566 137.291 mo
67.0566 137.291 li
66.0566 155.292 mo
67.0566 155.292 li
66.0566 173.292 mo
67.0566 173.292 li
66.0566 210.094 mo
67.0566 210.094 li
66.0566 228.094 mo
67.0566 228.094 li
66.0566 246.094 mo
67.0566 246.094 li
66.0566 264.094 mo
67.0566 264.094 li
66.0566 300.361 mo
67.0566 300.361 li
66.0566 101.094 mo
69.5566 101.094 li
66.0566 191.292 mo
70.0566 191.292 li
66.0566 282.093 mo
70.0566 282.093 li
65.6401 10.4883 mo
558.59 10.4883 li
558.59 326.593 li
65.6401 326.593 li
65.6401 10.4883 li
cp
.8359 .7188 .7188 .9297 cmyk
@
290.926 252.902 mo
296.926 252.902 li
293.926 248.012 mo
293.926 252.721 li
290.926 241.928 mo
296.926 241.928 li
293.926 241.943 mo
293.926 244.349 li
101.908 92.2832 mo
107.908 92.2832 li
104.908 92.1626 mo
104.908 63.7876 li
101.908 64.1846 mo
107.908 64.1846 li
0 .9492 .832 0 cmyk
@
296.926 247.573 mo
296.926 247.573 li
296.926 249.228 295.583 250.573 293.926 250.573 cv
292.271 250.573 290.926 249.228 290.926 247.573 cv
290.926 245.917 292.271 244.573 293.926 244.573 cv
295.583 244.573 296.926 245.917 296.926 247.573 cv
296.926 247.573 li
cp
0 0 0 0 cmyk
ef
296.926 247.573 mo
296.926 247.573 li
296.926 249.228 295.583 250.573 293.926 250.573 cv
292.271 250.573 290.926 249.228 290.926 247.573 cv
290.926 245.917 292.271 244.573 293.926 244.573 cv
295.583 244.573 296.926 245.917 296.926 247.573 cv
296.926 247.573 li
cp
0 .9492 .832 0 cmyk
@
.8359 .7188 .7188 .9297 cmyk
%ADOBeginSubsetFont: Times-Bold Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /Times-Bold def/FontInfo 5 dict dup begin/ItalicAngle 0 def/OrigFontType /TrueType defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 48 /zero putdup 49 /one putdup 50 /two putdup 51 /three putdef/FontBBox {-228 -407 1779 1295} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/.notdef <1C60D8A8C9B6FF86FBBBA1CBC846D6875CB85192F5DD7C77104B04E63A1804586BB1AD> |-/period <1C60D8A8C9B8707CF022F8D8A26B5660EB2B82AF83418854BC685B562BCD82BB8762DAAC35F08C4DD5CFFC7099EF2BEF31BC06E9D802B1E6A00B5FE48C9B0338087F6457EA> |-/zero <1C60D8A8C9B7A73DB96D399845EC30D4E2DF8733384C3B58EE2169DB9430DAD8902059196A81B603A2A1F3CE6297457344C8767E8E0BD102C21873D1F21A7948928850CC41C020DADFA51172442EE2BC639A502FC80F303528636E5AB4838FD619FE0B3B4F234D0A434918C0040EC5BDD75A3E1DC0439283834E430CB73D89097C1FCB92D5D64B9DD39F50AC4629FAB0BAA4019F13B76A2E16849B> |-/one <1C60D8A8C9B7A73D8039861586FD1F78339D2A1E42D5288A252E9E06B853A3A4369D147CA269FEB7D75715AA4DB481137F174FE63311DB4F13DF9F0C1061057D32460AC0FF8BA41A3B9A3B16EF6E1EDE2FB655C093BF2133> |-/two <1C60D8A8C9B7A73DD2580B210C2F69F848F4DD613B34438B46096FE7C13BE379F3421D72FD72ED1DDFCDC89BA3620A9A8FE13961FFFFAFB723A4D8AC0CA80B24442CE0C0EFA1A33291FB316B64576988733BD2711640EBEF7D33D684932852F8F10C1EFC6F884BFEE192636ADA43F11E68AC111EFCDFC516D6F4D9C94E36DFD99ECA1076> |-/three <1C60D8A8C9B7A73D92442327ABAB4EF2ADFDEC57CCEFB438C86B65930DEC17F6195D1B5FC0C429D9A8EE89A336689BD322720A3D97FA58586852C3773155785952D70760B61FC375B1184EEF34DE777C399986BF5D6A0154E25BDB2C34044CAB5D89B05BDE01C19436629C0CEA8C356D10EC9095A78CC2F1365A7AF3E1E9C4780C6CDB0CA1D7A7B7306981ADB25B707DFC0659A47EB07914F8F57340DE788EDB9B0F5E1C8DB34CA98490480664F33A586BB519246852BB41EEC8CF5A9B29108A3BE0DC8035A5C036F5266A> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RXXLSY+Times-Bold /Times-Bold findfont ct_VMDictPut/RXXLSY+Times-Bold*1 [46{/.notdef}rp /period /.notdef /zero /one /two /three 204{/.notdef}rp]RXXLSY+Times-Bold nfRXXLSY+Times-Bold*1 [18 0 0 -18 0 0 ]msf35.0459 285.083 mo(0.1)sh35.0459 195.083 mo(0.2)sh35.0459 105.083 mo(0.3)shRXXLSW+Symbol*1 [24 0 0 -24 0 0 ]msf.288086 46.395 mo(a)shRXXLSW+Symbol*1 [24 0 0 -24 0 0 ]msf.288086 46.395 mo(a) false chp.576 lw
@
%ADOBeginSubsetFont: Times-Bold AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginRXXLSY+Times-Bold dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B8707C25> |-/parenleft <1C60D8A8C9B81F2C7477EE054D9B4C05FD7E0BC54A2801FEF51C576C2B9DF0F055D9E0D40D04478AE72237CBC5F0D5EE283F2F38092B4BB5E9EA9A0057935E10509D66A7883F060F95D427ED> |-/parenright <1C60D8A8C9B81F2C3A145835C0DCD48D9B815215CCD51DC44C4A0353D9C1BBCE96D32CFD852FD5A95503B9F1E1CE64398ACFCB8D86303DF588BDD7FF39D9651ED427AADF17658E86301D8AE94F8704F047507F66CA2EF63B207705> |-/G <1C60D8A8C9B6FF86B21F3AA9A0A0F8D0C835DCF4FEC80DC198A71BC3A297560356C058AF9141F0A7941AC9C8E5EF09F606696DB9269DE10911B0979C931F74258C9D7F20797880E4A1725310E25A823840AAF7FCAB69300743F64E9CFDA486E7050BA830222447DB74F10CBAD44A4303914E8F9D7CE5DC1906274E96A0C8EEE0C827671B1C1BE29040FD3B6DEAB2813B9F8DC53A42FAB39BCD9F5654DFC9C7662E6810FE51F3CCFCFE692F79DD8053CDD267D29A793550BF452B0F24> |-/Q <1C60D8A8C9B6FF86FAEEA4360D5DF7921A36634B0518B75DB2E0299CCA04758F3D6A9E9C67709845541AA1C9798146EEC38CFC982365460EAA054F9AF06765F3CB55B167197A0DB7B5F104D51CB968ACBA88D7BA128983E9FDFED9C3537F0C7B14FCCF2C7D67CC8C46DFFCFDBAF2F49B268F0EA59D5E3965ACE962FC5A16A198EB4F12BE6845E894E416793E9F8E4BF991BC238A00220C2DA42C09959D28BD0E0D32B18F817E366FC7BD6F356610E4D28B803B91EA5A10B01EE1C211CB85109F6426C9F2E245FCBF031C5B4E27> |-/V <1C60D8A8C9B6079F0E16B513410BCA922396FD9E5A25B6B6FCC646CE9035C440F5A72F1B9891F16BDA4B3E6A297D274DAB8E79AAC189D1092B16AD4FC9BEA9070048AAE1C6EAB076ABECD2C5DF66D17C483235E5B9D3329B9B74D3B204BCC40F8D68E99BC911DD39E3374E3EE61BE0D7216FB96BFE1DC2B9A284323A254FEB81E1E97592CB> |-/bracketleft <1C60D8A8C9B81F2C3A7A150847F03B72C73F9973A60A063A1BD9517B1E024C8967EAA4FE41F0FDECA77FC3F7993BFFED5CE1952A8F08ED4C21B8DFF9> |-/bracketright <1C60D8A8C9B81F2C3A259F0E287F0AFDDDD80C729F2C5A4874E43ABBE54461ED8CF2D114CD4895C33E013A421D2F54CA26CEC29947D266413345CC29> |-/e <1C60D8A8C9B77FE2986490791C5870084E5A199A76A7AA608F5655608CCF2BA636952B5665B68BA1FB6F5D5C5CFEE16033DFEC56AE965732B4F2917932A92FD00CB57E849E83627A0EF030CD8E206EAE3238DC898C1C1A8A1A5921E18C85DC765882FC0D513E264D45119E97BCB082AFDECBC6593BF68E42681D925776CC330E4CD74455690488DDB5D6D07A6E4BE9C2C69ABA2668E8BA> |-/s <1C60D8A8C9B7361F511840FA7D9AA048DABF53A5590062D67DC961F3FF5663DBF141204171E3A5E349901829E6E92BCE549EB5AD7825EC4EC22CDB6E09A4E97B6407B6F55F2B1E84F6F6CBE68663B95A80A1ADFD7AD64AB72E10B8FCC41A8145C6AA88EEFDBE61481B610E3B63C122DD2F0D2C43A71D5BD50E6E674E838195AA10F4043620D6B6076DE27E0623216BBB0B4B45ADF1CD26E3E42ECF9EED8EECCB8657E56969723F15E24A87E4BAF06554D4053C6386CE9F805143179F61A65010E95730BF2CF71D65EBF5848B0F82E4F69B04F2A8CC4844F7F6C7A7455759F76AC5796C770227425508563A1F855114F78C42B3> |-systemdict /gcheck known {setglobal} if end {end} ifendRXXLSY+Times-Bold /Encoding getdup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 71 /G putdup 81 /Q putdup 86 /V putdup 91 /bracketleft putdup 93 /bracketright putdup 101 /e putdup 115 /s putpop%ADOEndSubsetFont
/RXXLSY+Times-Bold*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three 19{/.notdef}rp /G 9{/.notdef}rp /Q 4{/.notdef}rp /V 4{/.notdef}rp /bracketleft /.notdef /bracketright 7{/.notdef}rp /e 13{/.notdef}rp /s 140{/.notdef}rp]RXXLSY+Times-Bold nfRXXLSY+Times-Bold*1 [18 0 0 -18 0 0 ]msf16.2803 54.0825 mo(s )[7.00488 0 ]xshRXXLSY+Times-Bold*1 [24 0 0 -24 0 0 ]msf22.0459 47.5903 mo(\(Q)[7.99219 0 ]xshRXXLSY+Times-Bold*1 [13.992 0 0 -13.992 0 0 ]msf48.7021 39.5981 mo(2)shRXXLSY+Times-Bold*1 [24 0 0 -24 0 0 ]msf55.6982 47.5903 mo(\))shRXXLSY+Times-Bold*1 [18 0 0 -18 0 0 ]msf60.2803 345.083 mo(11)[142.758 0 ]xsh212.03 345.083 mo(0)sh346.038 345.083 mo(100)shRXXLSY+Times-Bold*1 [24 0 0 -24 0 0 ]msf235.046 359.598 mo(Q [GeV)sh314.351 359.598 mo(])sh.0312 .9102 .0312 0 cmyk
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginRXXLSX+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/H <1C60D8A8C9B6079F0EF96F2A5C5AAE267BD7D517941DACD3EDB33730529DE1B8FE6AD271A2288CC17FF03DA9EA5FAD75E03DF6B92565A2CB4A8539BAEB038F1CE0E83E584DC2B39385E39140D6E26B203655808DF8081831B0F83E078DCB044F2F1E9AE89A394511D343E89D9D3F55592CD30385C4D9E63CC850D47412A8E8690C4C593E74EC9DBC1CB8EAB8742657985762E0C390ED4A33098B5BA3348CBFA94014888F550AA1D8AF239EC75344> |-/Q <1C60D8A8C9B6079F628905BB6C928A3B907C3662B7873A3A99A6DE6D68C2C536A9837CD5CE75B6960C4917F359E87C30EAF6EA1D90CFC95A28C37F4BAB292E08F0FC5AC768C7388BBD5849D37DD9A45EE32BBCB4F3DAD6A308D446BB48BE37F0D247FEBD35C958ED9C7D2322167F5DDA964EFB9AA8D3CF823BAC14357C4373D7D82B525F50D01246B7DB4A6343961C322F512A47170717658F4F1E7A3FA169A8C8195126FF4A421E1B9350C987B64B5DCBB40A1561> |-/a <1C60D8A8C9B77FE2CEADADAD35C681D96377E0B82CC8ACDB5762353EDBADFFACD451A553C5C39302A9F1D177F76B983509B429688ADF52AFA30F8E4A0B23F2282503B97D206C7C183FDE8BFD6ACD2BE6A3B9069791DF8E2CF592523922EFD64768CD99A1F5F1400DB305C4171EAA77202618276E378016C7BA0833F29752C2A461C11A88BC4E527507EEDA9C848EEAD89D80551320178A864EFC8B3562DEDC4F695E8824160B87CA7F395997B47C0C71BBFE9F871E4F5046857D22F807C04061C73B2C0BBB7B44E0200581C40A3AC55C8229AC23B2FBE040B0F089F70BE38746A5E0285A22E4825D9ECD39D6C15171D3EBB391B1AC132DA188B28262B67971885F8F1CB6195A6A7B0FFC> |-/k <1C60D8A8C9B7A73DC320488E06F6A5A3ADF5757F9EF66AE532E4482AFD78557126BF3399F05C1415FC6C3536C05271FFBCB1DED8F953A0DE0ECA39D22234324512779BA7860AD0BE0908B8C393FC30C5864CE9A1455BF4A03CF0A7B795F432878853AED12ED0646CB2E2313DC45F7403736AD9F7AA89EED498ACB1E2594FBEB0AE65AADEA827840283334FCEAC576ACF749015B458C474C1C48DDD6CFB81200703458A4DA600BC166672C7EE9C2D0336E765869FA6EDE370E667332C931DD2DDE5098EE3BFC90A73BA5F490BEF462B9A4E1D4525417E50320E64EC87EA8FA361722C1823F6FB37> |-/u <1C60D8A8C9B7A73DDDD5393BA7D7831D75F13A25B59F8CAE59E13B1DBD301256F09A2A2FA0610BB05DE2ECE6E35EA4ADC086161AFF85B0FD2437640FDD80398C4C0B32C179538489C2DFE344A56B831FF47DC8684534892DA6A169CBD1177876492AD2C2BDD7A6B08127B6A645642A5FAF8AB73C40BA1FE9FB481006D45C77AAEB57B47F60A9B165A96B82FB4F1ABC3AAEF73B36D7075B83620B1F07B444F8EF540AE2E9744CDCFFE07D> |-/v <1C60D8A8C9B7A73DD3E51A63417112150963F678A9D803948192BE528D8E711D9E618656EDA611B5D597BCC5B8609A9C6ADDC06B2170AD72ECFC92293AF359FDF93ECB8860858A6E9A2975FA616BA9B63718050623680AB7260D23F04628A3326B8682B96CEF6183F9752ADA19F4A3FAFD2A0BA557E6864474F1F2676B1CFE9980841743C9EEF2B968410F7134249BA62287CFE458EA3C5BDA5E93> |-/y <1C60D8A8C9B7A73DD7AE17C40DA1260850D9F1C1D838B05DE6D1C5E3525D760EC0F9C40E6E054A15300E1CFEA7658656E5959BEEBF8D7B310500A7C32D54B97E8EBA7A462E0D912C93DF7DD121CE5E98FD002FEC6C00A36A4500E723013E648B347AC17315A08E4119F641912491BA6BE2F2706D7F9D2DC3E6FEAEDA163718714CB34E9D632ABB1A80A0345199AC327E696B5455EAFD54AAF8385493F4CC1030744C32613B475CE1C237259443B8A2C3D0EEED238C8DF00383FA139723827984B4D9C56DF7FB2D76E14928C6A907031CC71BEEB8328C3808> |-systemdict /gcheck known {setglobal} if end {end} ifendRXXLSX+Times-Roman /Encoding getdup 72 /H putdup 81 /Q putdup 97 /a putdup 107 /k putdup 117 /u putdup 118 /v putdup 121 /y putpop%ADOEndSubsetFont
/RXXLSX+Times-Roman*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 15{/.notdef}rp /greater 9{/.notdef}rp /H 3{/.notdef}rp /L /.notdef /N /O /.notdef /Q 15{/.notdef}rp /a /.notdef /c /.notdef /e /f 2{/.notdef}rp /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]RXXLSX+Times-Roman nfRXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf291.991 83.5903 mo(Heavy Quarkonia )shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf423.952 83.5981 mo(\(NLO)sh457.39 83.5981 mo(\))sh0 .9492 .832 0 cmyk
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginRXXLSX+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/ampersand <1C60D8A8C9B6FF86F5388F0DC17929ADE4826EFBF1FA635A751401C291D44526EA2BFB1010B4B1BD913EB6AF674B4ACA303973D2F5BC09F92BF7BC287C41A004A0F2C6D5D61BA4F9263FB5F5433915D5527B4181FD6536E0D7190E3C68417DBF82AF2BED550B492DE725445D794D273A455C87E9D5F5EEE641D4AAA0892BCF0C51E8D7A48394982B32402BFEB21564E1166497AC8224FF9F5238547D4A381FC38C4EE4692409DBA15216B2A6F53E4F7965CC9F8C37815A563C32B27075CEF52E636832505AC2B80CB4656FDEE6A6181D226434ADA09D24A02350189BA89ECCBD3F5A07F0B6BE512196106320ABB132FA82E9DEC879EF115ECC2973FA9F7BC1C162374F74DCA38027E1D927A9F624C8DE51A2BB4CCCDE35263F6DE2D78E1476736F51F6818386AC08D135EAD4185D34FF6D488373D17BB4E9DA8AC6B0F95F9DBBC60154DDA52881238CE667DAE76453CA99B006A1A37F3672CFED590BA4B0D96AB8DE643ECFAD490A28E7864D5777DF5B0EAEAD63B030A868FB24A5444EEBE2F142BC4EF2765069863EE815D38E462A2243C1> |-/plus <1C60D8A8C9B7E7C1AF6D204727960F0CE7BB570959E4DD82EB214BA4E790C6DD1D0BBE1874C76EB04F42268E> |-/h <1C60D8A8C9B7A73DDAD434B9B0934880641DF5380C3FF34924474584582E239C6F8521E020E224191300F7D305E7CE3E9B26FD63D19146E9A792CE58AAA1D1E0988290FCF859899DD695C8334DEB5EEA9B27FF4F22DA997D31BE2F34FA458B76E64B6795EF577D8D66464865BCBF56924A7B28803783086BA628F44B2C71B5D443B3791F12685C141C83F9E10FE5E0058D368A19DE504B892831FC37A9C139A777D98619540D7044EEF1D80D5AA72984210B0E3A3AA2A9488D2A3C7F6CEB9756D12E8F0AC9CA1CD21E> |-systemdict /gcheck known {setglobal} if end {end} ifendRXXLSX+Times-Roman /Encoding getdup 38 /ampersand putdup 43 /plus putdup 104 /h putpop%ADOEndSubsetFont
/RXXLSX+Times-Roman*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus 2{/.notdef}rp /period 15{/.notdef}rp /greater 9{/.notdef}rp /H 3{/.notdef}rp /L /.notdef /N /O /.notdef /Q 15{/.notdef}rp /a /.notdef /c /.notdef /e /f /.notdef /h /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]RXXLSX+Times-Roman nfRXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf293.226 101.817 mo(e)shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf300.405 95.2466 mo(+)shRXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf306.226 101.817 mo(e)shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf312.397 94.2388 mo(\320 )[6.76172 0 ]xsh322.663 94.2388 mo( )shRXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf322.069 101.817 mo( jets & shapes )shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf427.054 101.833 mo(\(res. NNLO\))sh.7695 .2383 .9766 .1367 cmyk
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginRXXLSX+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F62C8682D5880AD5ED13008593EB46F469C485884785466FDB873F506B8D5DAF3242B9C769F96D261CFB9D8C300BA792C494868BA7544BE97D3B0E83FF7BEA9A54452B6C1E660B26C41D6A9E2E70F755692AF9524D5448EE8D59ADBFA699A4258805AAE17C531CB6A322CF0EAFBABB64EB4F61F1F1F19C7B0A5F53BEA7B36B6CF17355AF292BB886CC0448F49C907B6E67F02C998972B27EF2603> |-/I <1C60D8A8C9B81F2C5659C12DFFC3E380C6CA0BCAD10CF356600E4A11AD71C457AC494D1DA251098436E45B6C0FE156746A59F146A43FA43FA4E70C431CB313E43694521E224211773C019F61EE01FB015D97EE3928AD> |-/S <1C60D8A8C9B7EF3269E388B8847AC1DF83DCA2CC95EEDA1D26C48C8B4394FBFD17BA4272844B3F99D23FAEC50A7EA6C72D284BFF0551BD0E244EEA994D67C8032579E70EC4F728A61739D5AD8DBB8B4129DD5B722422FAFC8BDE88E5D08E42CFE364B4791DA2E591F9FB2CA99F1F124E961FBD42E8AB878E8BE3BAAF755A9CE4977D5E9A7ECCF71EBFA0B61D69877A9EC87A882973E75CA7477FEDEE90C5AE4E9BEF9C7EDA4EBF0E4CDE6ECFE92BCEC5C04A7E39072DCB2A7B402F52671B6022D3586A809E7DAE9919FE8815CB8D620AA8EC995DA478361CE758058A7DFF39FC38C2B0C0AAE9> |-systemdict /gcheck known {setglobal} if end {end} ifendRXXLSX+Times-Roman /Encoding getdup 68 /D putdup 73 /I putdup 83 /S putpop%ADOEndSubsetFont
/RXXLSX+Times-Roman*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus 2{/.notdef}rp /period 15{/.notdef}rp /greater 5{/.notdef}rp /D 3{/.notdef}rp /H /I 2{/.notdef}rp /L /.notdef /N /O /.notdef /Q /.notdef /S 13{/.notdef}rp /a /.notdef /c /.notdef /e /f /.notdef /h /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]RXXLSX+Times-Roman nfRXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf291.991 62.8091 mo(DIS jets)sh350.491 62.8091 mo( )shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf354.999 62.8169 mo(\(NLO)sh388.437 62.8169 mo(\))sh282.833 96.6318 mo
282.833 96.6318 li
282.833 98.2876 281.488 99.6318 279.833 99.6318 cv
278.176 99.6318 276.833 98.2876 276.833 96.6318 cv
276.833 94.9756 278.176 93.6318 279.833 93.6318 cv
281.488 93.6318 282.833 94.9756 282.833 96.6318 cv
282.833 96.6318 li
cp
0 0 0 0 cmyk
ef
1.00001 lw
376.711 266.708 mo
376.711 270.958 li
374.102 270.827 mo
379.321 270.827 li
373.852 262.3 mo
379.071 262.3 li
376.627 269.548 mo
376.66 262.662 li
282.833 96.6318 mo
282.833 96.6318 li
282.833 98.2876 281.488 99.6318 279.833 99.6318 cv
278.176 99.6318 276.833 98.2876 276.833 96.6318 cv
276.833 94.9756 278.176 93.6318 279.833 93.6318 cv
281.488 93.6318 282.833 94.9756 282.833 96.6318 cv
282.833 96.6318 li
cp
0 .9492 .832 0 cmyk
@
379.211 266.603 mo
379.211 266.603 li
379.211 268.018 378.042 269.166 376.602 269.166 cv
375.163 269.166 373.992 268.018 373.992 266.603 cv
373.992 265.189 375.163 264.041 376.602 264.041 cv
378.042 264.041 379.211 265.189 379.211 266.603 cv
379.211 266.603 li
cp
0 0 0 0 cmyk
ef
379.211 266.603 mo
379.211 266.603 li
379.211 268.018 378.042 269.166 376.602 269.166 cv
375.163 269.166 373.992 268.018 373.992 266.603 cv
373.992 265.189 375.163 264.041 376.602 264.041 cv
378.042 264.041 379.211 265.189 379.211 266.603 cv
379.211 266.603 li
cp
0 .9492 .832 0 cmyk
@
65.5566 326.593 mo
404.555 326.593 li
65.5566 321.593 mo
65.5566 325.593 li
66.5566 326.593 mo
70.5566 326.593 li
353.555 325.093 mo
353.555 326.093 li
345.555 325.093 mo
345.555 326.093 li
337.555 325.093 mo
337.555 326.093 li
327.555 325.093 mo
327.555 326.093 li
315.555 325.093 mo
315.555 326.093 li
301.555 325.093 mo
301.555 326.093 li
283.555 325.093 mo
283.555 326.093 li
257.556 325.093 mo
257.556 326.093 li
205.556 325.093 mo
205.556 326.093 li
198.556 325.093 mo
198.556 326.093 li
189.556 325.093 mo
189.556 326.093 li
179.556 325.093 mo
179.556 326.093 li
168.556 325.093 mo
168.556 326.093 li
154.556 325.093 mo
154.556 326.093 li
135.556 325.093 mo
135.556 326.093 li
109.556 325.093 mo
109.556 326.093 li
360.555 322.093 mo
360.555 326.093 li
212.556 322.093 mo
212.556 326.093 li
405.555 325.093 mo
405.555 326.093 li
360.555 322.093 mo
360.555 326.093 li
.8359 .7188 .7188 .9297 cmyk
@
395.076 271.024 mo
395.076 275.274 li
392.076 275.16 mo
398.076 275.16 li
392.076 267.071 mo
398.076 267.071 li
395.076 271.486 mo
395.076 266.674 li
0 .9492 .832 0 cmyk
@
397.788 271.067 mo
397.788 271.067 li
397.788 272.534 396.566 273.724 395.063 273.724 cv
393.557 273.724 392.336 272.534 392.336 271.067 cv
392.336 269.6 393.557 268.41 395.063 268.41 cv
396.566 268.41 397.788 269.6 397.788 271.067 cv
397.788 271.067 li
cp
0 0 0 0 cmyk
ef
261.057 251.112 mo
267.055 251.112 li
264.055 241.94 mo
264.055 250.818 li
261.057 232.042 mo
267.055 232.042 li
264.055 242.26 mo
264.055 232.117 li
397.788 271.067 mo
397.788 271.067 li
397.788 272.534 396.566 273.724 395.063 273.724 cv
393.557 273.724 392.336 272.534 392.336 271.067 cv
392.336 269.6 393.557 268.41 395.063 268.41 cv
396.566 268.41 397.788 269.6 397.788 271.067 cv
397.788 271.067 li
cp
0 .9492 .832 0 cmyk
@
267.055 241.546 mo
267.055 241.546 li
267.055 243.203 265.711 244.546 264.055 244.546 cv
262.4 244.546 261.057 243.203 261.057 241.546 cv
261.057 239.89 262.4 238.546 264.055 238.546 cv
265.711 238.546 267.055 239.89 267.055 241.546 cv
267.055 241.546 li
cp
0 0 0 0 cmyk
ef
305.721 259.856 mo
311.721 259.856 li
308.721 250.458 mo
308.721 259.998 li
305.721 250.649 mo
311.721 250.649 li
308.721 258.797 mo
308.721 251.797 li
267.055 241.546 mo
267.055 241.546 li
267.055 243.203 265.711 244.546 264.055 244.546 cv
262.4 244.546 261.057 243.203 261.057 241.546 cv
261.057 239.89 262.4 238.546 264.055 238.546 cv
265.711 238.546 267.055 239.89 267.055 241.546 cv
267.055 241.546 li
cp
0 .9492 .832 0 cmyk
@
311.721 255.159 mo
311.721 255.159 li
311.721 256.815 310.375 258.159 308.721 258.159 cv
307.065 258.159 305.721 256.815 305.721 255.159 cv
305.721 253.502 307.065 252.159 308.721 252.159 cv
310.375 252.159 311.721 253.502 311.721 255.159 cv
311.721 255.159 li
cp
0 0 0 0 cmyk
ef
311.721 255.159 mo
311.721 255.159 li
311.721 256.815 310.375 258.159 308.721 258.159 cv
307.065 258.159 305.721 256.815 305.721 255.159 cv
305.721 253.502 307.065 252.159 308.721 252.159 cv
310.375 252.159 311.721 253.502 311.721 255.159 cv
311.721 255.159 li
cp
0 .9492 .832 0 cmyk
@
352.69 260.679 mo
360.43 260.679 li
.027451 .92 .69 .61 cmyk
f
352.69 260.679 mo
360.43 260.679 li
0 .917647 .643137 .63 cmyk
@
359.792 263.988 mo
359.792 263.988 li
359.792 265.643 358.447 266.988 356.792 266.988 cv
355.135 266.988 353.792 265.643 353.792 263.988 cv
353.792 262.332 355.135 260.988 356.792 260.988 cv
358.447 260.988 359.792 262.332 359.792 263.988 cv
359.792 263.988 li
cp
.027451 .92 .69 .61 cmyk
ef
1 lw
0 lj
4 ml
359.792 263.988 mo
359.792 263.988 li
359.792 265.643 358.447 266.988 356.792 266.988 cv
355.135 266.988 353.792 265.643 353.792 263.988 cv
353.792 262.332 355.135 260.988 356.792 260.988 cv
358.447 260.988 359.792 262.332 359.792 263.988 cv
359.792 263.988 li
cp
0 .917647 .643137 .63 cmyk
@
1.00001 lw
1 lj
11.5 ml
236.018 244.223 mo
242.018 244.223 li
239.018 229.271 mo
239.018 244.052 li
236.018 210.977 mo
242.018 210.977 li
239.018 226.253 mo
239.018 211.208 li
0 .9492 .832 0 cmyk
@
242.018 227.558 mo
242.018 227.558 li
242.018 229.214 240.674 230.558 239.018 230.558 cv
237.362 230.558 236.018 229.214 236.018 227.558 cv
236.018 225.902 237.362 224.558 239.018 224.558 cv
240.674 224.558 242.018 225.902 242.018 227.558 cv
242.018 227.558 li
cp
0 0 0 0 cmyk
ef
242.018 227.558 mo
242.018 227.558 li
242.018 229.214 240.674 230.558 239.018 230.558 cv
237.362 230.558 236.018 229.214 236.018 227.558 cv
236.018 225.902 237.362 224.558 239.018 224.558 cv
240.674 224.558 242.018 225.902 242.018 227.558 cv
242.018 227.558 li
cp
0 .9492 .832 0 cmyk
@
280.109 54.7476 mo
281.609 57.7476 li
281.609 57.7476 li
283.109 60.7476 li
283.109 60.7476 li
280.109 60.7476 li
280.109 60.7476 li
277.109 60.7476 li
277.109 60.7476 li
278.609 57.7476 li
278.609 57.7476 li
280.109 54.7476 li
280.109 54.7476 li
cp
0 0 0 0 cmyk
ef
280.109 54.7476 mo
281.609 57.7476 li
281.609 57.7476 li
283.109 60.7476 li
283.109 60.7476 li
280.109 60.7476 li
280.109 60.7476 li
277.109 60.7476 li
277.109 60.7476 li
278.609 57.7476 li
278.609 57.7476 li
280.109 54.7476 li
280.109 54.7476 li
cp
.7695 .2383 .9766 .1367 cmyk
@
402.113 271.677 mo
402.113 275.927 li
399.504 275.433 mo
404.721 275.433 li
399.392 267.633 mo
404.608 267.633 li
402.164 274.108 mo
402.197 267.221 li
0 .9492 .832 0 cmyk
@
404.748 271.573 mo
404.748 271.573 li
404.748 272.988 403.58 274.135 402.142 274.135 cv
400.7 274.135 399.531 272.988 399.531 271.573 cv
399.531 270.159 400.7 269.01 402.142 269.01 cv
403.58 269.01 404.748 270.159 404.748 271.573 cv
404.748 271.573 li
cp
0 0 0 0 cmyk
ef
407.5 275.767 mo
407.5 280.017 li
404.892 279.818 mo
410.108 279.818 li
404.709 272.61 mo
409.926 272.61 li
407.277 279.108 mo
407.311 272.221 li
404.748 271.573 mo
404.748 271.573 li
404.748 272.988 403.58 274.135 402.142 274.135 cv
400.7 274.135 399.531 272.988 399.531 271.573 cv
399.531 270.159 400.7 269.01 402.142 269.01 cv
403.58 269.01 404.748 270.159 404.748 271.573 cv
404.748 271.573 li
cp
0 .9492 .832 0 cmyk
@
409.998 276.277 mo
409.998 276.277 li
409.998 277.691 408.83 278.839 407.392 278.839 cv
405.95 278.839 404.781 277.691 404.781 276.277 cv
404.781 274.862 405.95 273.714 407.392 273.714 cv
408.83 273.714 409.998 274.862 409.998 276.277 cv
409.998 276.277 li
cp
0 0 0 0 cmyk
ef
409.998 276.277 mo
409.998 276.277 li
409.998 277.691 408.83 278.839 407.392 278.839 cv
405.95 278.839 404.781 277.691 404.781 276.277 cv
404.781 274.862 405.95 273.714 407.392 273.714 cv
408.83 273.714 409.998 274.862 409.998 276.277 cv
409.998 276.277 li
cp
0 .9492 .832 0 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginRXXLSX+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7A73DB9A6590C6FE2B7096DCA6F9A5EA5CF6E8AC2157EC7418EBDC43117FA8257DD5995ADA72B55217A703B5CBF244854B4360CFDF4258ECD5C9DEB492AEA5EC77E976B17AE7E2222D3F2CC89571B26AFB82DDBE99926812437BF7851C7D506B52E7A7DE1242CAC6D81645AF838199FD3EBA9B534D647714BFDCAF64F05E4> |-/one <1C60D8A8C9B7A73DB999B05B43470AE76323D53E9C54AE29C0ACC4151BDD30C8F3109BFE7DACF9BA339B31B8666788A01E1F3860FDA3F22312D6A6628C8CCA55270976BF3BB8008DD87D719627657135E81F194E374733A743BBCD543132801A49C4BA675F59C41D> |-/two <1C60D8A8C9B7A73DE72BAD97A1AB14497350B04AEDCC89B810A7A7579EC67BBA1BB072CAE80FF5F224043D73141B835306B538E1A090321AB63325D8B3A58C70F1FD34F3553B37A8BF6164DDA11E437012DC022ABF8601BBE36E43FA1BA89215476687E89F4C0A4BCB6119B7B6C22E9A6D30709E37D3141BAD532924FFAD1DE501B4> |-/five <1C60D8A8C9B7A73D986C0D7DE9D329253DCB6E971CF9F86B9AEBF9128F879E3BA076A7524F8AC6EF0948A0BD36A1BBAD3176809EA5D8C10BC04F27D1FCF8D9BA3577509C082FF1EE49DF22B08F8B21F3A6C3932A3BC82C6C594431B4032E2BEF80E15787B3E427A047FD8FD191291F42BAC74588B21DCB1EB3232C29BA67B72B9A00CCBC571F0227C6EF50964CF91F1B0EC573A04AE3E4DF9447B77BD2A0A959F534BEC79AECEF51C27F8D677FD06B99742B747A695088E88EBCC4A6BCCC7402ABFDFE9926161D96> |-/b <1C60D8A8C9B7A73DEA51CB4AB782EC4CF13FD26F41FC8CB88DC14FD82E5280D80A6DCEF24DFC67DDE70F479EF61F4A2F59FB7C44A2DA70AA9DBE3F3332B05CF7A2A04A2009B46D9C510350AE718270C9D98B76F9594F5A2CEFABA8989AB9C1A83073103E665B7D0C1FB0D95DD2CF6B3624FBE8C4DC08D6FA9DA1460775A9F8E2451D08E82D20D83F7AACFD6C43C3765095FFA99CCEBE8373741BF9BE5B927D964DEAC7210DBA744ADF394D6C616E3DDB8D63> |-systemdict /gcheck known {setglobal} if end {end} ifendRXXLSX+Times-Roman /Encoding getdup 48 /zero putdup 49 /one putdup 50 /two putdup 53 /five putdup 98 /b putpop%ADOEndSubsetFont
/RXXLSX+Times-Roman*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus 2{/.notdef}rp /period /.notdef /zero /one /two 2{/.notdef}rp /five 8{/.notdef}rp /greater 5{/.notdef}rp /D 3{/.notdef}rp /H /I 2{/.notdef}rp /L /.notdef /N /O /.notdef /Q /.notdef /S 13{/.notdef}rp /a /b /c /.notdef /e /f /.notdef /h /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]RXXLSX+Times-Roman nfRXXLSX+Times-Roman*1 [10 0 0 -10 0 0 ]msf491.968 20.8794 mo(October 2015)sh298.322 255.715 mo
304.322 255.715 li
301.322 240.088 mo
301.322 255.732 li
298.322 239.997 mo
304.322 239.997 li
301.322 251.966 mo
301.322 244.966 li
0 .9492 .832 0 cmyk
@
304.322 247.974 mo
304.322 247.974 li
304.322 249.63 302.979 250.974 301.322 250.974 cv
299.668 250.974 298.322 249.63 298.322 247.974 cv
298.322 246.318 299.668 244.974 301.322 244.974 cv
302.979 244.974 304.322 246.318 304.322 247.974 cv
304.322 247.974 li
cp
0 0 0 0 cmyk
ef
304.322 247.974 mo
304.322 247.974 li
304.322 249.63 302.979 250.974 301.322 250.974 cv
299.668 250.974 298.322 249.63 298.322 247.974 cv
298.322 246.318 299.668 244.974 301.322 244.974 cv
302.979 244.974 304.322 246.318 304.322 247.974 cv
304.322 247.974 li
cp
0 .9492 .832 0 cmyk
@
210.078 219.352 mo
210.078 208.447 li
210.078 205.724 mo
210.078 192.838 li
207.078 219.9 mo
213.078 219.9 li
.0312 .9102 .0312 0 cmyk
@
207.078 203.535 mo
213.078 203.535 li
213.078 209.535 li
207.078 209.535 li
207.078 203.535 li
cp
0 0 0 0 cmyk
ef
207.078 203.535 mo
213.078 203.535 li
213.078 209.535 li
207.078 209.535 li
207.078 203.535 li
cp
.0312 .9102 .0312 0 cmyk
@
277.092 73.6133 mo
283.092 73.6133 li
283.092 79.6133 li
277.092 79.6133 li
277.092 73.6133 li
cp
0 0 0 0 cmyk
ef
277.092 73.6133 mo
283.092 73.6133 li
283.092 79.6133 li
277.092 79.6133 li
277.092 73.6133 li
cp
.0312 .9102 .0312 0 cmyk
@
282.888 116.093 mo
282.888 116.093 li
282.888 117.75 281.543 119.093 279.888 119.093 cv
278.23 119.093 276.888 117.75 276.888 116.093 cv
276.888 114.438 278.23 113.093 279.888 113.093 cv
281.543 113.093 282.888 114.438 282.888 116.093 cv
282.888 116.093 li
cp
0 .92 .72 .56 cmyk
ef
1 lw
0 lj
4 ml
282.888 116.093 mo
282.888 116.093 li
282.888 117.75 281.543 119.093 279.888 119.093 cv
278.23 119.093 276.888 117.75 276.888 116.093 cv
276.888 114.438 278.23 113.093 279.888 113.093 cv
281.543 113.093 282.888 114.438 282.888 116.093 cv
282.888 116.093 li
cp
0 .752941 .67 .57 cmyk
@
282.888 116.093 mo
282.888 116.093 li
282.888 117.75 281.543 117.093 279.888 117.093 cv
278.23 117.093 276.888 117.75 276.888 116.093 cv
276.888 114.438 278.23 113.093 279.888 113.093 cv
281.543 113.093 282.888 114.438 282.888 116.093 cv
282.888 116.093 li
cp
0 .92 .72 .56 cmyk
f
1.00001 lw
1 lj
11.5 ml
282.888 116.093 mo
282.888 116.093 li
282.888 117.75 281.543 117.093 279.888 117.093 cv
278.23 117.093 276.888 117.75 276.888 116.093 cv
276.888 114.438 278.23 113.093 279.888 113.093 cv
281.543 113.093 282.888 114.438 282.888 116.093 cv
282.888 116.093 li
cp
0 .752941 .67 .57 cmyk
@
0 .9375 1 0 cmyk
%ADOBeginSubsetFont: Symbol AddGlyphs
%ADOt1write: (1.0.24)systemdict beginRXXLSW+Symbol dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/tau <1C60D8A8C9B76427D0C3408C9782179B56EA2441FF06F27A68B451F7F47C7F0A819FCCAD2AC6AF20C05D03A0D30FBACD60459B2C493F3D24A815033661373A8E97F7A8C3AC532B5A19C54574A165DE7CEA6E8253770C3C6C02EE400D1AFD239D1ED5606D6639B83E6EC35E4BA9B4A1D1A838287D9F8522BCCA3BC581557F3BD76240E5863AC20514A2D8B8CA89EB3724AEA0DDD2D89A166E5D5B29CC416A0A5FCC8CCD0B6B7A65685E5CAD241CE09646BFCC17816156DB77FD> |-systemdict /gcheck known {setglobal} if end {end} ifendRXXLSW+Symbol /Encoding getdup 116 /tau putpop%ADOEndSubsetFont
/RXXLSW+Symbol*1 [97{/.notdef}rp /alpha 18{/.notdef}rp /tau 139{/.notdef}rp]RXXLSW+Symbol nfRXXLSW+Symbol*1 [18 0 0 -18 0 0 ]msf292.218 41.8481 mo(t)sh%ADOBeginSubsetFont: Times-Roman AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.systemdict beginRXXLSX+Times-Roman dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7A73D960D5C905E34DC81A096980F2B4111B9B099A6DB83E1916FF3E1A9E04B02D3E9232818F77B09A9AACB5832FED542FDDA70002EB05443C3A08AC9203ACF784CB865C5B9F7D872416879897E73175190413158DECCEEC3F81053539EF7A5BA54848FD5EF8191B77C87FC4B2FB70A247D6480306D63973D6D1E40988764838CF4D7C7CFD56B10F551336B687A8CAD70446C673C2BFDC7C6AD86547DB031DFD479DCB051DAF5177334E8CD4B35F8B65FC86BD3BDBBB8D1E2B3149970112D8374721C0AB537409EB4ADF5E62264D22634EE> |-/d <1C60D8A8C9B7A73DB9A50E659DB775F0445838B52D4AD3E4EA55A04AF1E66EB3E22000826F80E46C696D55B3FE9B16954A0FDDDCF9A25B9DBBDA281BC3743A32DF4E962666420F0E46505362A6A9911C122E7E5925E4098A8375B64204275CB8C487667CDFFB7001810B24CEFAA2B80CAD8B87A3E1168C62B165D1D52436E632F3BD5E44BCAD1D3E08911E568C3ADE5A148D88E7C75A5F95F7018097A855F01058BEA6CAD1F5CFBA99049D028F229C0A374E791F4E6F00190E23FDB14CB2BF5215AC36154229670311F93C06828FE397A9700C53BE1A07DF9AE66151E66A3E4BE4B17FDA8F9875D90067B1D7D9914E47FA1ED2D057561417FDB2931E47F3C120E5878FF702> |-systemdict /gcheck known {setglobal} if end {end} ifendRXXLSX+Times-Roman /Encoding getdup 51 /three putdup 100 /d putpop%ADOEndSubsetFont
/RXXLSX+Times-Roman*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus 2{/.notdef}rp /period /.notdef /zero /one /two /three /.notdef /five 8{/.notdef}rp /greater 5{/.notdef}rp /D 3{/.notdef}rp /H /I 2{/.notdef}rp /L /.notdef /N /O /.notdef /Q /.notdef /S 13{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i /j /k 2{/.notdef}rp /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 86{/.notdef}rp /endash 47{/.notdef}rp]RXXLSX+Times-Roman nfRXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf299.89 41.8481 mo( decays )shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf357.866 41.856 mo(\(N)[4.63379 0 ]xshRXXLSX+Times-Roman*1 [12 0 0 -12 0 0 ]msf372.554 38.0122 mo(3)shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf378.64 41.856 mo(LO)[8.55176 0 ]xsh397.194 41.856 mo(\))sh280.584 41.3428 mo
279.084 38.3428 li
279.084 38.3428 li
277.584 35.3428 li
277.584 35.3428 li
280.584 35.3428 li
280.584 35.3428 li
283.584 35.3428 li
283.584 35.3428 li
282.084 38.3428 li
282.084 38.3428 li
280.584 41.3428 li
280.584 41.3428 li
cp
ef
280.584 41.3428 mo
279.084 38.3428 li
279.084 38.3428 li
277.584 35.3428 li
277.584 35.3428 li
280.584 35.3428 li
280.584 35.3428 li
283.584 35.3428 li
283.584 35.3428 li
282.084 38.3428 li
282.084 38.3428 li
280.584 41.3428 li
280.584 41.3428 li
cp
@
104.991 81.7002 mo
103.491 78.7002 li
103.491 78.7002 li
101.991 75.7002 li
101.991 75.7002 li
104.991 75.7002 li
104.991 75.7002 li
107.991 75.7002 li
107.991 75.7002 li
106.491 78.7002 li
106.491 78.7002 li
104.991 81.7002 li
104.991 81.7002 li
cp
ef
104.991 81.7002 mo
103.491 78.7002 li
103.491 78.7002 li
101.991 75.7002 li
101.991 75.7002 li
104.991 75.7002 li
104.991 75.7002 li
107.991 75.7002 li
107.991 75.7002 li
106.491 78.7002 li
106.491 78.7002 li
104.991 81.7002 li
104.991 81.7002 li
cp
@
378.268 272.805 mo
378.268 277.055 li
375.66 276.924 mo
380.877 276.924 li
375.41 268.398 mo
380.627 268.398 li
378.184 275.646 mo
378.217 268.76 li
0 .9492 .832 0 cmyk
@
380.768 272.702 mo
380.768 272.702 li
380.768 274.116 379.601 275.264 378.158 275.264 cv
376.719 275.264 375.551 274.116 375.551 272.702 cv
375.551 271.287 376.719 270.139 378.158 270.139 cv
379.601 270.139 380.768 271.287 380.768 272.702 cv
380.768 272.702 li
cp
0 0 0 0 cmyk
ef
390.075 277.083 mo
390.075 281.579 li
387.467 281.44 mo
392.684 281.44 li
387.217 272.42 mo
392.434 272.42 li
389.99 280.087 mo
390.023 272.803 li
380.768 272.702 mo
380.768 272.702 li
380.768 274.116 379.601 275.264 378.158 275.264 cv
376.719 275.264 375.551 274.116 375.551 272.702 cv
375.551 271.287 376.719 270.139 378.158 270.139 cv
379.601 270.139 380.768 271.287 380.768 272.702 cv
380.768 272.702 li
cp
0 .9492 .832 0 cmyk
@
392.575 276.972 mo
392.575 276.972 li
392.575 278.469 391.406 279.683 389.965 279.683 cv
388.525 279.683 387.358 278.469 387.358 276.972 cv
387.358 275.476 388.525 274.261 389.965 274.261 cv
391.406 274.261 392.575 275.476 392.575 276.972 cv
392.575 276.972 li
cp
0 0 0 0 cmyk
ef
404.256 275.357 mo
404.256 279.892 li
401.646 279.679 mo
406.865 279.679 li
401.465 271.988 mo
406.684 271.988 li
404.033 278.921 mo
404.066 271.573 li
392.575 276.972 mo
392.575 276.972 li
392.575 278.469 391.406 279.683 389.965 279.683 cv
388.525 279.683 387.358 278.469 387.358 276.972 cv
387.358 275.476 388.525 274.261 389.965 274.261 cv
391.406 274.261 392.575 275.476 392.575 276.972 cv
392.575 276.972 li
cp
0 .9492 .832 0 cmyk
@
406.756 275.9 mo
406.756 275.9 li
406.756 277.41 405.586 278.634 404.146 278.634 cv
402.707 278.634 401.538 277.41 401.538 275.9 cv
401.538 274.39 402.707 273.166 404.146 273.166 cv
405.586 273.166 406.756 274.39 406.756 275.9 cv
406.756 275.9 li
cp
0 0 0 0 cmyk
ef
406.756 275.9 mo
406.756 275.9 li
406.756 277.41 405.586 278.634 404.146 278.634 cv
402.707 278.634 401.538 277.41 401.538 275.9 cv
401.538 274.39 402.707 273.166 404.146 273.166 cv
405.586 273.166 406.756 274.39 406.756 275.9 cv
406.756 275.9 li
cp
0 .9492 .832 0 cmyk
@
207.078 193.172 mo
213.078 193.172 li
.0312 .9102 .0312 0 cmyk
@
386.832 263.493 mo
386.832 268.02 li
384.223 267.881 mo
389.44 267.88 li
383.973 258.797 mo
389.19 258.797 li
386.746 266.519 mo
386.779 259.182 li
0 .9492 .832 0 cmyk
@
389.33 263.381 mo
389.33 263.381 li
389.33 264.888 388.163 266.112 386.723 266.112 cv
385.281 266.112 384.113 264.888 384.113 263.381 cv
384.113 261.875 385.281 260.652 386.723 260.652 cv
388.163 260.652 389.33 261.875 389.33 263.381 cv
389.33 263.381 li
cp
0 0 0 0 cmyk
ef
389.33 263.381 mo
389.33 263.381 li
389.33 264.888 388.163 266.112 386.723 266.112 cv
385.281 266.112 384.113 264.888 384.113 263.381 cv
384.113 261.875 385.281 260.652 386.723 260.652 cv
388.163 260.652 389.33 261.875 389.33 263.381 cv
389.33 263.381 li
cp
0 .9492 .832 0 cmyk
@
501.684 325.116 mo
501.684 326.116 li
493.684 325.116 mo
493.684 326.116 li
485.684 325.116 mo
485.684 326.116 li
475.684 325.116 mo
475.684 326.116 li
463.684 325.116 mo
463.684 326.116 li
449.684 325.116 mo
449.684 326.116 li
431.684 325.116 mo
431.684 326.116 li
554.684 325.116 mo
553.684 326.116 li
405.684 325.116 mo
405.684 326.116 li
508.684 322.116 mo
508.684 326.116 li
360.684 322.116 mo
360.684 326.116 li
.8359 .7188 .7188 .9297 cmyk
@
457.629 290.053 mo
462.846 290.053 li
457.447 284.345 mo
462.664 284.345 li
460.05 290.199 mo
460.05 284.207 li
.957 .9062 .3281 .2695 cmyk
@
460.129 290.949 mo
459.004 288.699 li
459.004 288.699 li
457.879 286.449 li
457.879 286.449 li
460.129 286.449 li
460.129 286.449 li
462.379 286.449 li
462.379 286.449 li
461.254 288.699 li
461.254 288.699 li
460.129 290.949 li
460.129 290.949 li
cp
0 0 0 0 cmyk
ef
460.129 290.949 mo
459.004 288.699 li
459.004 288.699 li
457.879 286.449 li
457.879 286.449 li
460.129 286.449 li
460.129 286.449 li
462.379 286.449 li
462.379 286.449 li
461.254 288.699 li
461.254 288.699 li
460.129 290.949 li
460.129 290.949 li
cp
.9414 .7617 0 0 cmyk
@
480.629 294.105 mo
485.846 294.105 li
480.447 288.647 mo
485.664 288.647 li
483.049 293.75 mo
483.049 287.949 li
.957 .9062 .3281 .2695 cmyk
@
483.129 294.251 mo
482.004 292.001 li
482.004 292.001 li
480.879 289.75 li
480.879 289.75 li
483.129 289.75 li
483.129 289.75 li
485.379 289.75 li
485.379 289.75 li
484.254 292.001 li
484.254 292.001 li
483.129 294.251 li
483.129 294.251 li
cp
0 0 0 0 cmyk
ef
483.129 294.251 mo
482.004 292.001 li
482.004 292.001 li
480.879 289.75 li
480.879 289.75 li
483.129 289.75 li
483.129 289.75 li
485.379 289.75 li
485.379 289.75 li
484.254 292.001 li
484.254 292.001 li
483.129 294.251 li
483.129 294.251 li
cp
.9414 .7617 0 0 cmyk
@
499.129 294.454 mo
504.346 294.454 li
498.947 288.996 mo
504.164 288.996 li
501.549 294.35 mo
501.549 288.548 li
.957 .9062 .3281 .2695 cmyk
@
501.629 294.85 mo
500.504 292.6 li
500.504 292.6 li
499.379 290.35 li
499.379 290.35 li
501.629 290.35 li
501.629 290.35 li
503.879 290.35 li
503.879 290.35 li
502.754 292.6 li
502.754 292.6 li
501.629 294.85 li
501.629 294.85 li
cp
0 0 0 0 cmyk
ef
501.629 294.85 mo
500.504 292.6 li
500.504 292.6 li
499.379 290.35 li
499.379 290.35 li
501.629 290.35 li
501.629 290.35 li
503.879 290.35 li
503.879 290.35 li
502.754 292.6 li
502.754 292.6 li
501.629 294.85 li
501.629 294.85 li
cp
.9414 .7617 0 0 cmyk
@
.8359 .7188 .7188 .9297 cmyk
RXXLSY+Times-Bold*1 [18 0 0 -18 0 0 ]msf490.858 345.083 mo(1000)sh557.055 318.343 mo
558.055 318.343 li
557.055 28.2915 mo
558.055 28.2915 li
557.055 46.5591 mo
558.055 46.5591 li
544.555 10.5591 mo
548.555 10.5591 li
557.055 64.2915 mo
558.055 64.2915 li
557.055 83.6294 mo
558.055 83.6294 li
557.055 119.292 mo
558.055 119.292 li
557.055 137.291 mo
558.055 137.291 li
557.055 155.292 mo
558.055 155.292 li
557.055 173.292 mo
558.055 173.292 li
557.055 210.094 mo
558.055 210.094 li
557.055 228.094 mo
558.055 228.094 li
557.055 246.094 mo
558.055 246.094 li
557.055 264.094 mo
558.055 264.094 li
557.055 300.361 mo
558.055 300.361 li
554.555 101.094 mo
558.055 101.094 li
554.555 191.292 mo
558.555 191.292 li
554.555 282.093 mo
558.555 282.093 li
@
281.129 142.2 mo
279.629 139.2 li
279.629 139.2 li
278.129 136.2 li
278.129 136.2 li
281.129 136.2 li
281.129 136.2 li
284.129 136.2 li
284.129 136.2 li
282.629 139.2 li
282.629 139.2 li
281.129 142.2 li
281.129 142.2 li
cp
0 0 0 0 cmyk
ef
281.129 142.2 mo
279.629 139.2 li
279.629 139.2 li
278.129 136.2 li
278.129 136.2 li
281.129 136.2 li
281.129 136.2 li
284.129 136.2 li
284.129 136.2 li
282.629 139.2 li
282.629 139.2 li
281.129 142.2 li
281.129 142.2 li
cp
.9414 .7617 0 0 cmyk
@
RXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf365.202 141.684 mo( )shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf369.702 141.708 mo(\(NLO)sh281.129 162.2 mo
279.629 159.2 li
279.629 159.2 li
278.129 156.2 li
278.129 156.2 li
281.129 156.2 li
281.129 156.2 li
284.129 156.2 li
284.129 156.2 li
282.629 159.2 li
282.629 159.2 li
281.129 162.2 li
281.129 162.2 li
cp
.919554 .869078 0 0 cmyk
f
281.129 162.2 mo
279.629 159.2 li
279.629 159.2 li
278.129 156.2 li
278.129 156.2 li
281.129 156.2 li
281.129 156.2 li
284.129 156.2 li
284.129 156.2 li
282.629 159.2 li
282.629 159.2 li
281.129 162.2 li
281.129 162.2 li
cp
.9414 .7617 0 0 cmyk
@
RXXLSX+Times-Roman*1 [18 0 0 -18 0 0 ]msf294.054 161.684 mo(pp \320> tt)shRXXLSX+Times-Roman*1 [14 0 0 -14 0 0 ]msf354.702 161.708 mo(\(NNLO\))sh403.14 141.708 mo(\))sh353.134 267.492 mo
360.43 267.492 li
359.792 263.988 mo
359.792 263.988 li
359.792 265.643 358.447 266.988 356.792 266.988 cv
355.135 266.988 353.792 265.643 353.792 263.988 cv
353.792 262.332 355.135 260.988 356.792 260.988 cv
358.445 260.988 359.792 262.332 359.792 263.988 cv
359.792 263.988 li
cp
.027451 .92 .69 .61 cmyk
f
353.134 267.492 mo
360.43 267.492 li
359.792 263.988 mo
359.792 263.988 li
359.792 265.643 358.447 266.988 356.792 266.988 cv
355.135 266.988 353.792 265.643 353.792 263.988 cv
353.792 262.332 355.135 260.988 356.792 260.988 cv
358.445 260.988 359.792 262.332 359.792 263.988 cv
359.792 263.988 li
cp
0 .917647 .643137 .63 cmyk
@
321.629 255.053 mo
326.846 255.053 li
321.447 242.345 mo
326.664 242.345 li
324.05 255.053 mo
324.05 242.303 li
.945098 .827451 0 0 cmyk
@
324.129 251.949 mo
323.004 249.699 li
323.004 249.699 li
321.879 247.449 li
321.879 247.449 li
324.129 247.449 li
324.129 247.449 li
326.379 247.449 li
326.379 247.449 li
325.254 249.699 li
325.254 249.699 li
324.129 251.949 li
324.129 251.949 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
324.129 251.949 mo
323.004 249.699 li
323.004 249.699 li
321.879 247.449 li
321.879 247.449 li
324.129 247.449 li
324.129 247.449 li
326.379 247.449 li
326.379 247.449 li
325.254 249.699 li
325.254 249.699 li
324.129 251.949 li
324.129 251.949 li
cp
.945098 .827451 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
324.129 251.949 mo
323.004 249.699 li
323.004 249.699 li
321.879 247.449 li
321.879 247.449 li
324.129 247.449 li
324.129 247.449 li
326.379 247.449 li
326.379 247.449 li
325.254 249.699 li
325.254 249.699 li
324.129 251.949 li
324.129 251.949 li
cp
@
330.754 261.553 mo
335.971 261.553 li
330.572 247.845 mo
335.789 247.845 li
333.175 262.053 mo
333.184 247.803 li
.976471 .952941 0 0 cmyk
@
333.254 258.449 mo
332.129 256.199 li
332.129 256.199 li
331.004 253.949 li
331.004 253.949 li
333.254 253.949 li
333.254 253.949 li
335.504 253.949 li
335.504 253.949 li
334.379 256.199 li
334.379 256.199 li
333.254 258.449 li
333.254 258.449 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
333.254 258.449 mo
332.129 256.199 li
332.129 256.199 li
331.004 253.949 li
331.004 253.949 li
333.254 253.949 li
333.254 253.949 li
335.504 253.949 li
335.504 253.949 li
334.379 256.199 li
334.379 256.199 li
333.254 258.449 li
333.254 258.449 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
333.254 258.449 mo
332.129 256.199 li
332.129 256.199 li
331.004 253.949 li
331.004 253.949 li
333.254 253.949 li
333.254 253.949 li
335.504 253.949 li
335.504 253.949 li
334.379 256.199 li
334.379 256.199 li
333.254 258.449 li
333.254 258.449 li
cp
@
340.504 266.053 mo
345.721 266.053 li
340.322 255.462 mo
345.539 255.462 li
342.925 266.053 mo
342.925 255.428 li
.960784 .917647 0 0 cmyk
@
343.004 264.074 mo
341.879 261.824 li
341.879 261.824 li
340.754 259.574 li
340.754 259.574 li
343.004 259.574 li
343.004 259.574 li
345.254 259.574 li
345.254 259.574 li
344.129 261.824 li
344.129 261.824 li
343.004 264.074 li
343.004 264.074 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
343.004 264.074 mo
341.879 261.824 li
341.879 261.824 li
340.754 259.574 li
340.754 259.574 li
343.004 259.574 li
343.004 259.574 li
345.254 259.574 li
345.254 259.574 li
344.129 261.824 li
344.129 261.824 li
343.004 264.074 li
343.004 264.074 li
cp
.960784 .917647 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
343.004 264.074 mo
341.879 261.824 li
341.879 261.824 li
340.754 259.574 li
340.754 259.574 li
343.004 259.574 li
343.004 259.574 li
345.254 259.574 li
345.254 259.574 li
344.129 261.824 li
344.129 261.824 li
343.004 264.074 li
343.004 264.074 li
cp
@
385.977 279.917 mo
391.193 279.917 li
385.795 270.73 mo
391.012 270.73 li
388.397 279.917 mo
388.397 270.7 li
.976471 .952941 0 0 cmyk
@
388.477 278.041 mo
387.352 275.87 li
387.352 275.87 li
386.227 273.699 li
386.227 273.699 li
388.477 273.699 li
388.477 273.699 li
390.727 273.699 li
390.727 273.699 li
389.602 275.87 li
389.602 275.87 li
388.477 278.041 li
388.477 278.041 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
388.477 278.041 mo
387.352 275.87 li
387.352 275.87 li
386.227 273.699 li
386.227 273.699 li
388.477 273.699 li
388.477 273.699 li
390.727 273.699 li
390.727 273.699 li
389.602 275.87 li
389.602 275.87 li
388.477 278.041 li
388.477 278.041 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
388.477 278.041 mo
387.352 275.87 li
387.352 275.87 li
386.227 273.699 li
386.227 273.699 li
388.477 273.699 li
388.477 273.699 li
390.727 273.699 li
390.727 273.699 li
389.602 275.87 li
389.602 275.87 li
388.477 278.041 li
388.477 278.041 li
cp
@
399.643 281.228 mo
404.859 281.228 li
399.461 271.592 mo
404.678 271.592 li
402.063 281.228 mo
402.063 271.561 li
@
402.143 279.399 mo
401.018 277.228 li
401.018 277.228 li
399.893 275.057 li
399.893 275.057 li
402.143 275.057 li
402.143 275.057 li
404.393 275.057 li
404.393 275.057 li
403.268 277.228 li
403.268 277.228 li
402.143 279.399 li
402.143 279.399 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
402.143 279.399 mo
401.018 277.228 li
401.018 277.228 li
399.893 275.057 li
399.893 275.057 li
402.143 275.057 li
402.143 275.057 li
404.393 275.057 li
404.393 275.057 li
403.268 277.228 li
403.268 277.228 li
402.143 279.399 li
402.143 279.399 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
402.143 279.399 mo
401.018 277.228 li
401.018 277.228 li
399.893 275.057 li
399.893 275.057 li
402.143 275.057 li
402.143 275.057 li
404.393 275.057 li
404.393 275.057 li
403.268 277.228 li
403.268 277.228 li
402.143 279.399 li
402.143 279.399 li
cp
@
412.309 281.061 mo
417.525 281.061 li
412.127 272.423 mo
417.344 272.423 li
414.729 281.061 mo
414.729 272.395 li
@
414.809 279.899 mo
413.684 277.728 li
413.684 277.728 li
412.559 275.557 li
412.559 275.557 li
414.809 275.557 li
414.809 275.557 li
417.059 275.557 li
417.059 275.557 li
415.934 277.728 li
415.934 277.728 li
414.809 279.899 li
414.809 279.899 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
414.809 279.899 mo
413.684 277.728 li
413.684 277.728 li
412.559 275.557 li
412.559 275.557 li
414.809 275.557 li
414.809 275.557 li
417.059 275.557 li
417.059 275.557 li
415.934 277.728 li
415.934 277.728 li
414.809 279.899 li
414.809 279.899 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
414.809 279.899 mo
413.684 277.728 li
413.684 277.728 li
412.559 275.557 li
412.559 275.557 li
414.809 275.557 li
414.809 275.557 li
417.059 275.557 li
417.059 275.557 li
415.934 277.728 li
415.934 277.728 li
414.809 279.899 li
414.809 279.899 li
cp
@
421.809 282.062 mo
427.025 282.062 li
421.627 271.099 mo
426.844 271.099 li
424.229 282.062 mo
424.229 271.062 li
@
424.309 279.317 mo
423.184 276.929 li
423.184 276.929 li
422.059 274.541 li
422.059 274.541 li
424.309 274.541 li
424.309 274.541 li
426.559 274.541 li
426.559 274.541 li
425.434 276.929 li
425.434 276.929 li
424.309 279.317 li
424.309 279.317 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
424.309 279.317 mo
423.184 276.929 li
423.184 276.929 li
422.059 274.541 li
422.059 274.541 li
424.309 274.541 li
424.309 274.541 li
426.559 274.541 li
426.559 274.541 li
425.434 276.929 li
425.434 276.929 li
424.309 279.317 li
424.309 279.317 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
424.309 279.317 mo
423.184 276.929 li
423.184 276.929 li
422.059 274.541 li
422.059 274.541 li
424.309 274.541 li
424.309 274.541 li
426.559 274.541 li
426.559 274.541 li
425.434 276.929 li
425.434 276.929 li
424.309 279.317 li
424.309 279.317 li
cp
@
432.269 284.307 mo
437.485 284.307 li
432.087 273.344 mo
437.304 273.344 li
434.689 284.307 mo
434.689 273.307 li
@
434.769 281.562 mo
433.644 279.174 li
433.644 279.174 li
432.519 276.786 li
432.519 276.786 li
434.769 276.786 li
434.769 276.786 li
437.019 276.786 li
437.019 276.786 li
435.894 279.174 li
435.894 279.174 li
434.769 281.562 li
434.769 281.562 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
434.769 281.562 mo
433.644 279.174 li
433.644 279.174 li
432.519 276.786 li
432.519 276.786 li
434.769 276.786 li
434.769 276.786 li
437.019 276.786 li
437.019 276.786 li
435.894 279.174 li
435.894 279.174 li
434.769 281.562 li
434.769 281.562 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
434.769 281.562 mo
433.644 279.174 li
433.644 279.174 li
432.519 276.786 li
432.519 276.786 li
434.769 276.786 li
434.769 276.786 li
437.019 276.786 li
437.019 276.786 li
435.894 279.174 li
435.894 279.174 li
434.769 281.562 li
434.769 281.562 li
cp
@
446.142 293.561 mo
451.358 293.561 li
445.96 278.278 mo
451.177 278.278 li
448.563 293.561 mo
448.563 278.227 li
@
448.642 288.775 mo
447.517 286.279 li
447.517 286.279 li
446.392 283.781 li
446.392 283.781 li
448.642 283.781 li
448.642 283.781 li
450.892 283.781 li
450.892 283.781 li
449.767 286.279 li
449.767 286.279 li
448.642 288.775 li
448.642 288.775 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
448.642 288.775 mo
447.517 286.279 li
447.517 286.279 li
446.392 283.781 li
446.392 283.781 li
448.642 283.781 li
448.642 283.781 li
450.892 283.781 li
450.892 283.781 li
449.767 286.279 li
449.767 286.279 li
448.642 288.775 li
448.642 288.775 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
448.642 288.775 mo
447.517 286.279 li
447.517 286.279 li
446.392 283.781 li
446.392 283.781 li
448.642 283.781 li
448.642 283.781 li
450.892 283.781 li
450.892 283.781 li
449.767 286.279 li
449.767 286.279 li
448.642 288.775 li
448.642 288.775 li
cp
@
366.644 275.516 mo
371.86 275.516 li
366.462 265.3 mo
371.679 265.3 li
369.064 275.516 mo
369.064 265.266 li
@
369.144 271.607 mo
368.019 269.436 li
368.019 269.436 li
366.894 267.265 li
366.894 267.265 li
369.144 267.265 li
369.144 267.265 li
371.394 267.265 li
371.394 267.265 li
370.269 269.436 li
370.269 269.436 li
369.144 271.607 li
369.144 271.607 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
369.144 271.607 mo
368.019 269.436 li
368.019 269.436 li
366.894 267.265 li
366.894 267.265 li
369.144 267.265 li
369.144 267.265 li
371.394 267.265 li
371.394 267.265 li
370.269 269.436 li
370.269 269.436 li
369.144 271.607 li
369.144 271.607 li
cp
.976471 .952941 0 0 cmyk
@
1.00001 lw
1 lj
11.5 ml
369.144 271.607 mo
368.019 269.436 li
368.019 269.436 li
366.894 267.265 li
366.894 267.265 li
369.144 267.265 li
369.144 267.265 li
371.394 267.265 li
371.394 267.265 li
370.269 269.436 li
370.269 269.436 li
369.144 271.607 li
369.144 271.607 li
cp
@
377.644 277.016 mo
382.86 277.016 li
377.462 268.419 mo
382.679 268.419 li
380.064 277.016 mo
380.064 268.391 li
@
380.144 275.732 mo
379.019 273.561 li
379.019 273.561 li
377.894 271.39 li
377.894 271.39 li
380.144 271.39 li
380.144 271.39 li
382.394 271.39 li
382.394 271.39 li
381.269 273.561 li
381.269 273.561 li
380.144 275.732 li
380.144 275.732 li
cp
0 0 0 0 cmyk
ef
1 lw
0 lj
4 ml
380.144 275.732 mo
379.019 273.561 li
379.019 273.561 li
377.894 271.39 li
377.894 271.39 li
380.144 271.39 li
380.144 271.39 li
382.394 271.39 li
382.394 271.39 li
381.269 273.561 li
381.269 273.561 li
380.144 275.732 li
380.144 275.732 li
cp
.976471 .952941 0 0 cmyk
@
.862745 .619608 0 0 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 177 /endash putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private16 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 243 249 484 495 650 661 674 686 710 721] def/OtherBlues [-209 -198 -153 -147 -121 -115 260 266 437 443] def/FamilyBlues [-11 -0 243 249 484 495 650 661 674 686 710 721] def/FamilyOtherBlues [-209 -198 -153 -147 -121 -115 260 266 437 443] def/BlueScale 0.0625 def/BlueFuzz 0 def/StdHW [67] def/StdVW [88] def/StemSnapH [67] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings4 dict dup begin/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CE3F6788F74B615B747D0C4950E0757D67CC4B6F86A79106B4F6AF8262CBC77CA155FEEB> |-/parenright <1C60D8A8C9B84E0A47D7FED609B36B98A489D0C883687FC8C4BD7FF8A57C9949E56F26DF53030280BC0E024A6F3F65DFBA65966BEA7D55AEB539EB378E> |-/endash <1C60D8A8C9B7A73DB951FD130F142F9AEBF9F7105E1527FCE530997C32> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RXXLSZ+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/RXXLSZ+MyriadPro-Regular*1 [40{/.notdef}rp /parenleft /parenright 135{/.notdef}rp /endash 78{/.notdef}rp]RXXLSZ+MyriadPro-Regular nfRXXLSZ+MyriadPro-Regular*1 [9 0 0 -9 0 0 ]msf301.429 134.053 mo(\()shRXXLSZ+MyriadPro-Regular*1 [14 0 0 -14 0 0 ]msf303.984 134.053 mo(\261)shRXXLSZ+MyriadPro-Regular*1 [9 0 0 -9 0 0 ]msf310.984 134.053 mo(\))sh1.00001 lw
1 lj
11.5 ml
392.022 278.667 mo
397.239 278.667 li
391.841 274.384 mo
397.058 274.384 li
394.443 278.667 mo
394.443 274.333 li
.976471 .952941 0 0 cmyk
@
394.522 279.881 mo
393.397 277.385 li
393.397 277.385 li
392.272 274.887 li
392.272 274.887 li
394.522 274.887 li
394.522 274.887 li
396.772 274.887 li
396.772 274.887 li
395.647 277.385 li
395.647 277.385 li
394.522 279.881 li
394.522 279.881 li
cp
.854902 .733333 0 0 cmyk
f
394.522 279.881 mo
393.397 277.385 li
393.397 277.385 li
392.272 274.887 li
392.272 274.887 li
394.522 274.887 li
394.522 274.887 li
396.772 274.887 li
396.772 274.887 li
395.647 277.385 li
395.647 277.385 li
394.522 279.881 li
394.522 279.881 li
cp
.976471 .952941 0 0 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/RXXLSZ+MyriadPro-Regular*1 uf/RXXLSZ+MyriadPro-Regular uf/MyriadPro-Regular uf/RXXLSV+TimesNewRomanPSMT*1 uf/RXXLSV+TimesNewRomanPSMT uf/TimesNewRomanPSMT uf/RXXLSX+Times-Roman*1 uf/RXXLSX+Times-Roman uf/Times-Roman uf/RXXLSY+Times-Bold*1 uf/RXXLSY+Times-Bold uf/Times-Bold uf/RXXLSW+Symbol*1 uf/RXXLSW+Symbol uf/Symbol ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
